(module $scheduler
  (type $func (;0;) (func))
  (type $cont (;1;) (cont $func))
  (type (;2;) (func (param (ref $cont))))
  (type (;3;) (func (result i32)))
  (type (;4;) (func (result (ref null $cont))))
  (type (;5;) (func (result (ref $cont) (ref $cont))))
  (import "lwt" "yield" (tag $yield (;0;) (type $func)))
  (import "lwt" "fork" (tag $fork (;1;) (type 2) (param (ref $cont))))
  (import "queue" "queue-empty" (func $queue-empty (;0;) (type 3)))
  (import "queue" "dequeue" (func $dequeue (;1;) (type 4)))
  (import "queue" "enqueue" (func $enqueue (;2;) (type 2)))
  (export "run" (func $run))
  (func $run (;3;) (type 2) (param $main (ref $cont))
    local.get $main
    call $enqueue
    loop $l
      call $queue-empty
      if ;; label = @2
        return
      end
      block $on_yield (result (ref $cont))
        block $on_fork (type 5) (result (ref $cont) (ref $cont))
          call $dequeue
          resume $cont (on $yield $on_yield) (on $fork $on_fork)
          br $l
        end
        call $enqueue
        call $enqueue
        br $l
      end
      call $enqueue
      br $l
    end
  )
)
