(module $scheduler
  (type $func (;0;) (func))
  (type $cont (;1;) (cont $func))
  (type $i-func (;2;) (func (param i32)))
  (type $i-cont (;3;) (cont $i-func))
  (type (;4;) (func (param i32 i32)))
  (type (;5;) (func (param (ref $i-cont)) (result i32)))
  (type (;6;) (func (param i32) (result i32)))
  (type (;7;) (func (result i32)))
  (type (;8;) (func (result (ref null $cont))))
  (type (;9;) (func (param (ref null $cont))))
  (type (;10;) (func (param i32 (ref $i-cont))))
  (type (;11;) (func (param i32 i32) (result (ref null $cont))))
  (type (;12;) (func (result i32 i32 (ref $cont))))
  (type (;13;) (func (result (ref $i-cont) (ref $i-cont))))
  (type (;14;) (func (result i32 (ref $i-cont))))
  (import "async-await" "yield" (tag $yield (;0;) (type $func)))
  (import "async-await" "fulfill" (tag $fulfill (;1;) (type 4) (param i32 i32)))
  (import "async-await" "async" (tag $async (;2;) (type 5) (param (ref $i-cont)) (result i32)))
  (import "async-await" "await" (tag $await (;3;) (type 6) (param i32) (result i32)))
  (import "queue" "queue-empty" (func $queue-empty (;0;) (type 7)))
  (import "queue" "dequeue" (func $dequeue (;1;) (type 8)))
  (import "queue" "enqueue" (func $enqueue (;2;) (type 9)))
  (import "promise" "new" (func $new-promise (;3;) (type 7)))
  (import "promise" "fulfilled" (func $promise-fulfilled (;4;) (type 6)))
  (import "promise" "read" (func $promise-value (;5;) (type 6)))
  (import "promise" "await" (func $await-promise (;6;) (type 10)))
  (import "promise" "fulfill" (func $fulfill-promise (;7;) (type 11)))
  (export "run" (func $run))
  (func $run (;8;) (type 9) (param $nextk (ref null $cont))
    (local $p i32) (local $v i32) (local $ik (ref $i-cont)) (local $ak (ref $i-cont)) (local $k (ref null $cont))
    loop $l
      local.get $nextk
      ref.is_null
      if ;; label = @2
        return
      end
      block $on_yield (result (ref $cont))
        block $on_fulfill (type 12) (result i32 i32 (ref $cont))
          block $on_async (type 13) (result (ref $i-cont) (ref $i-cont))
            block $on_await (type 14) (result i32 (ref $i-cont))
              local.get $nextk
              resume $cont (on $yield $on_yield) (on $fulfill $on_fulfill) (on $async $on_async) (on $await $on_await)
              call $dequeue
              local.set $nextk
              br $l
            end
            local.set $ik
            local.set $p
            local.get $p
            call $promise-fulfilled
            if ;; label = @5
              local.get $p
              call $promise-value
              local.get $ik
              cont.bind $i-cont $cont
              local.set $nextk
            else
              local.get $p
              local.get $ik
              call $await-promise
              call $dequeue
              local.set $nextk
            end
            br $l
          end
          local.set $ik
          local.set $ak
          call $new-promise
          local.set $p
          local.get $p
          local.get $ik
          cont.bind $i-cont $cont
          call $enqueue
          local.get $p
          local.get $ak
          cont.bind $i-cont $cont
          local.set $nextk
          br $l
        end
        local.set $nextk
        local.set $v
        local.set $p
        local.get $p
        local.get $v
        call $fulfill-promise
        local.set $k
        local.get $k
        ref.is_null
        if ;; label = @3
        else
          local.get $k
          call $enqueue
        end
        br $l
      end
      call $enqueue
      call $dequeue
      local.set $nextk
      br $l
    end
  )
)
