(module
  (type $ft1 (;0;) (func))
  (type $ct1 (;1;) (cont $ft1))
  (rec
    (type $ft2 (;2;) (func (param (ref null $ct2))))
    (type $ct2 (;3;) (cont $ft2))
  )
  (tag $t (;0;) (type $ft1))
  (export "unhandled-suspend-t" (func 2))
  (export "unhandled-switch-t" (func 3))
  (elem (;0;) declare func $suspend $switch)
  (func $suspend (;0;) (type $ft2) (param (ref null $ct2))
    suspend $t
  )
  (func $switch (;1;) (type $ft2) (param (ref null $ct2))
    local.get 0
    switch $ct2 $t
    drop
  )
  (func (;2;) (type $ft1)
    ref.func $suspend
    cont.new $ct2
    ref.func $suspend
    cont.new $ct2
    resume $ct2 (on $t switch)
  )
  (func (;3;) (type $ft1)
    block $l (result (ref $ct1))
      ref.func $switch
      cont.new $ct2
      ref.func $switch
      cont.new $ct2
      resume $ct2 (on $t $l)
      unreachable
    end
    unreachable
  )
)
