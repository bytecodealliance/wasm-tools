(module
  (type $bvec (;0;) (array i8))
  (type $vec (;1;) (array (ref $bvec)))
  (type $mvec (;2;) (array (mut (ref $bvec))))
  (type $nvec (;3;) (array (ref null $bvec)))
  (type $avec (;4;) (array (mut anyref)))
  (type (;5;) (func (result (ref $vec))))
  (type (;6;) (func (result (ref $nvec))))
  (type (;7;) (func (result (ref $avec))))
  (type (;8;) (func (param i32 i32 (ref $vec)) (result i32)))
  (type (;9;) (func (param i32 i32) (result i32)))
  (type (;10;) (func (param i32 i32 (ref $mvec) i32) (result i32)))
  (type (;11;) (func (param i32 i32 i32) (result i32)))
  (type (;12;) (func (param (ref array)) (result i32)))
  (type (;13;) (func (result i32)))
  (export "new" (func $new))
  (export "get" (func 4))
  (export "set_get" (func 6))
  (export "len" (func 8))
  (elem $e (;0;) (ref $bvec) (item (array.new $bvec (i32.const 7) (i32.const 3))) (item (array.new_fixed $bvec 2 (i32.const 1) (i32.const 2))))
  (func $new (;0;) (type 5) (result (ref $vec))
    (array.new_elem $vec $e
      (i32.const 0)
      (i32.const 2))
  )
  (func $sub1 (;1;) (type 6) (result (ref $nvec))
    (array.new_elem $nvec $e
      (i32.const 0)
      (i32.const 2))
  )
  (func $sub2 (;2;) (type 7) (result (ref $avec))
    (array.new_elem $avec $e
      (i32.const 0)
      (i32.const 2))
  )
  (func $get (;3;) (type 8) (param $i i32) (param $j i32) (param $v (ref $vec)) (result i32)
    (array.get_u $bvec
      (array.get $vec
        (local.get $v)
        (local.get $i))
      (local.get $j))
  )
  (func (;4;) (type 9) (param $i i32) (param $j i32) (result i32)
    (call $get
      (local.get $i)
      (local.get $j)
      (call $new))
  )
  (func $set_get (;5;) (type 10) (param $i i32) (param $j i32) (param $v (ref $mvec)) (param $y i32) (result i32)
    (array.set $mvec
      (local.get $v)
      (local.get $i)
      (array.get $mvec
        (local.get $v)
        (local.get $y)))
    (array.get_u $bvec
      (array.get $mvec
        (local.get $v)
        (local.get $i))
      (local.get $j))
  )
  (func (;6;) (type 11) (param $i i32) (param $j i32) (param $y i32) (result i32)
    (call $set_get
      (local.get $i)
      (local.get $j)
      (array.new_elem $mvec $e
        (i32.const 0)
        (i32.const 2))
      (local.get $y))
  )
  (func $len (;7;) (type 12) (param $v (ref array)) (result i32)
    (array.len
      (local.get $v))
  )
  (func (;8;) (type 13) (result i32)
    (call $len
      (call $new))
  )
)
