(module
  (type $vec (;0;) (array i8))
  (type $mvec (;1;) (array (mut i8)))
  (type (;2;) (func (result (ref $vec))))
  (type (;3;) (func (param i32 (ref $vec)) (result i32)))
  (type (;4;) (func (param i32) (result i32)))
  (type (;5;) (func (param i32 (ref $mvec) i32) (result i32)))
  (type (;6;) (func (param i32 i32) (result i32)))
  (type (;7;) (func (param (ref array)) (result i32)))
  (type (;8;) (func (result i32)))
  (export "new" (func $new))
  (export "get_u" (func 2))
  (export "get_s" (func 4))
  (export "set_get" (func 6))
  (export "len" (func 8))
  (func $new (;0;) (type 2) (result (ref $vec))
    (array.new_data $vec $d
      (i32.const 1)
      (i32.const 3))
  )
  (func $get_u (;1;) (type 3) (param $i i32) (param $v (ref $vec)) (result i32)
    (array.get_u $vec
      (local.get $v)
      (local.get $i))
  )
  (func (;2;) (type 4) (param $i i32) (result i32)
    (call $get_u
      (local.get $i)
      (call $new))
  )
  (func $get_s (;3;) (type 3) (param $i i32) (param $v (ref $vec)) (result i32)
    (array.get_s $vec
      (local.get $v)
      (local.get $i))
  )
  (func (;4;) (type 4) (param $i i32) (result i32)
    (call $get_s
      (local.get $i)
      (call $new))
  )
  (func $set_get (;5;) (type 5) (param $i i32) (param $v (ref $mvec)) (param $y i32) (result i32)
    (array.set $mvec
      (local.get $v)
      (local.get $i)
      (local.get $y))
    (array.get_u $mvec
      (local.get $v)
      (local.get $i))
  )
  (func (;6;) (type 6) (param $i i32) (param $y i32) (result i32)
    (call $set_get
      (local.get $i)
      (array.new_data $mvec $d
        (i32.const 1)
        (i32.const 3))
      (local.get $y))
  )
  (func $len (;7;) (type 7) (param $v (ref array)) (result i32)
    (array.len
      (local.get $v))
  )
  (func (;8;) (type 8) (result i32)
    (call $len
      (call $new))
  )
  (data $d (;0;) "\00\01\02\ff\04")
)
