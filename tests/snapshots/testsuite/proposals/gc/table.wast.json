{
  "source_filename": "tests/testsuite/proposals/gc/table.wast",
  "commands": [
    {
      "type": "module",
      "line": 3,
      "filename": "table.0.wasm"
    },
    {
      "type": "module",
      "line": 4,
      "filename": "table.1.wasm"
    },
    {
      "type": "module",
      "line": 5,
      "filename": "table.2.wasm"
    },
    {
      "type": "module",
      "line": 6,
      "filename": "table.3.wasm"
    },
    {
      "type": "module",
      "line": 7,
      "filename": "table.4.wasm"
    },
    {
      "type": "module",
      "line": 8,
      "filename": "table.5.wasm"
    },
    {
      "type": "module",
      "line": 9,
      "filename": "table.6.wasm"
    },
    {
      "type": "module",
      "line": 11,
      "filename": "table.7.wasm"
    },
    {
      "type": "module",
      "line": 12,
      "filename": "table.8.wasm"
    },
    {
      "type": "module",
      "line": 13,
      "filename": "table.9.wasm"
    },
    {
      "type": "module",
      "line": 15,
      "filename": "table.10.wasm"
    },
    {
      "type": "module",
      "line": 16,
      "filename": "table.11.wasm"
    },
    {
      "type": "module",
      "line": 18,
      "filename": "table.12.wasm"
    },
    {
      "type": "module",
      "line": 19,
      "filename": "table.13.wasm"
    },
    {
      "type": "module",
      "line": 20,
      "filename": "table.14.wasm"
    },
    {
      "type": "assert_invalid",
      "line": 22,
      "filename": "table.15.wasm",
      "text": "unknown table",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 23,
      "filename": "table.16.wasm",
      "text": "unknown table",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 27,
      "filename": "table.17.wasm",
      "text": "size minimum must not be greater than maximum",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 31,
      "filename": "table.18.wasm",
      "text": "size minimum must not be greater than maximum",
      "module_type": "binary"
    },
    {
      "type": "assert_malformed",
      "line": 36,
      "filename": "table.19.wat",
      "text": "i32 constant out of range",
      "module_type": "text"
    },
    {
      "type": "assert_malformed",
      "line": 40,
      "filename": "table.20.wat",
      "text": "i32 constant out of range",
      "module_type": "text"
    },
    {
      "type": "assert_malformed",
      "line": 44,
      "filename": "table.21.wat",
      "text": "i32 constant out of range",
      "module_type": "text"
    },
    {
      "type": "assert_invalid",
      "line": 49,
      "filename": "table.22.wasm",
      "text": "type mismatch",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 53,
      "filename": "table.23.wasm",
      "text": "type mismatch",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 57,
      "filename": "table.24.wasm",
      "text": "type mismatch",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 61,
      "filename": "table.25.wasm",
      "text": "type mismatch",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 65,
      "filename": "table.26.wasm",
      "text": "type mismatch",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 69,
      "filename": "table.27.wasm",
      "text": "type mismatch",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 73,
      "filename": "table.28.wasm",
      "text": "type mismatch",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 80,
      "filename": "table.29.wasm"
    },
    {
      "type": "register",
      "line": 85,
      "as": "M"
    },
    {
      "type": "module",
      "line": 87,
      "filename": "table.30.wasm"
    },
    {
      "type": "assert_return",
      "line": 106,
      "action": {
        "type": "invoke",
        "field": "get1",
        "args": []
      },
      "expected": [
        {
          "type": "refnull"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 107,
      "action": {
        "type": "invoke",
        "field": "get2",
        "args": []
      },
      "expected": [
        {
          "type": "funcref"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 108,
      "action": {
        "type": "invoke",
        "field": "get3",
        "args": []
      },
      "expected": [
        {
          "type": "funcref"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 109,
      "action": {
        "type": "invoke",
        "field": "get4",
        "args": []
      },
      "expected": [
        {
          "type": "funcref"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 110,
      "action": {
        "type": "invoke",
        "field": "get5",
        "args": []
      },
      "expected": [
        {
          "type": "funcref"
        }
      ]
    },
    {
      "type": "assert_invalid",
      "line": 114,
      "filename": "table.31.wasm",
      "text": "type mismatch",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 122,
      "filename": "table.32.wasm",
      "text": "type mismatch",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 130,
      "filename": "table.33.wasm",
      "text": "type mismatch",
      "module_type": "binary"
    },
    {
      "type": "assert_malformed",
      "line": 141,
      "filename": "table.34.wat",
      "text": "duplicate table",
      "module_type": "text"
    },
    {
      "type": "assert_malformed",
      "line": 148,
      "filename": "table.35.wat",
      "text": "duplicate table",
      "module_type": "text"
    },
    {
      "type": "assert_malformed",
      "line": 155,
      "filename": "table.36.wat",
      "text": "duplicate table",
      "module_type": "text"
    }
  ]
}