(module
  (type $ft (;0;) (func))
  (type $st (;1;) (struct))
  (type $at (;2;) (array i8))
  (type (;3;) (func (param externref)))
  (type (;4;) (func (param i32) (result i32)))
  (func $f (;0;) (type $ft))
  (func (;1;) (type 3) (param $x externref)
    i32.const 0
    ref.null any
    table.set $ta
    i32.const 1
    ref.null struct
    table.set $ta
    i32.const 2
    ref.null none
    table.set $ta
    i32.const 3
    i32.const 7
    ref.i31
    table.set $ta
    i32.const 4
    struct.new_default $st
    table.set $ta
    i32.const 5
    i32.const 0
    array.new_default $at
    table.set $ta
    i32.const 6
    local.get $x
    any.convert_extern
    table.set $ta
    i32.const 7
    ref.null extern
    any.convert_extern
    table.set $ta
    i32.const 0
    ref.null nofunc
    table.set $tf
    i32.const 1
    ref.null func
    table.set $tf
    i32.const 2
    ref.func $f
    table.set $tf
    i32.const 0
    ref.null noextern
    table.set $te
    i32.const 1
    ref.null extern
    table.set $te
    i32.const 2
    local.get $x
    table.set $te
    i32.const 3
    i32.const 8
    ref.i31
    extern.convert_any
    table.set $te
    i32.const 4
    struct.new_default $st
    extern.convert_any
    table.set $te
    i32.const 5
    ref.null any
    extern.convert_any
    table.set $te
  )
  (func (;2;) (type 4) (param $i i32) (result i32)
    local.get $i
    table.get $ta
    ref.is_null
    local.get $i
    table.get $ta
    ref.test nullref
    i32.add
  )
  (func (;3;) (type 4) (param $i i32) (result i32)
    local.get $i
    table.get $ta
    ref.test (ref any)
    local.get $i
    table.get $ta
    ref.test anyref
    i32.add
  )
  (func (;4;) (type 4) (param $i i32) (result i32)
    local.get $i
    table.get $ta
    ref.test (ref eq)
    local.get $i
    table.get $ta
    ref.test eqref
    i32.add
  )
  (func (;5;) (type 4) (param $i i32) (result i32)
    local.get $i
    table.get $ta
    ref.test (ref i31)
    local.get $i
    table.get $ta
    ref.test i31ref
    i32.add
  )
  (func (;6;) (type 4) (param $i i32) (result i32)
    local.get $i
    table.get $ta
    ref.test (ref struct)
    local.get $i
    table.get $ta
    ref.test structref
    i32.add
  )
  (func (;7;) (type 4) (param $i i32) (result i32)
    local.get $i
    table.get $ta
    ref.test (ref array)
    local.get $i
    table.get $ta
    ref.test arrayref
    i32.add
  )
  (func (;8;) (type 4) (param $i i32) (result i32)
    local.get $i
    table.get $tf
    ref.is_null
    local.get $i
    table.get $tf
    ref.test nullfuncref
    i32.add
  )
  (func (;9;) (type 4) (param $i i32) (result i32)
    local.get $i
    table.get $tf
    ref.test (ref func)
    local.get $i
    table.get $tf
    ref.test funcref
    i32.add
  )
  (func (;10;) (type 4) (param $i i32) (result i32)
    local.get $i
    table.get $te
    ref.is_null
    local.get $i
    table.get $te
    ref.test nullexternref
    i32.add
  )
  (func (;11;) (type 4) (param $i i32) (result i32)
    local.get $i
    table.get $te
    ref.test (ref extern)
    local.get $i
    table.get $te
    ref.test externref
    i32.add
  )
  (table $ta (;0;) 10 anyref)
  (table $tf (;1;) 10 funcref)
  (table $te (;2;) 10 externref)
  (export "init" (func 1))
  (export "ref_test_null_data" (func 2))
  (export "ref_test_any" (func 3))
  (export "ref_test_eq" (func 4))
  (export "ref_test_i31" (func 5))
  (export "ref_test_struct" (func 6))
  (export "ref_test_array" (func 7))
  (export "ref_test_null_func" (func 8))
  (export "ref_test_func" (func 9))
  (export "ref_test_null_extern" (func 10))
  (export "ref_test_extern" (func 11))
  (elem (;0;) declare func $f)
)
