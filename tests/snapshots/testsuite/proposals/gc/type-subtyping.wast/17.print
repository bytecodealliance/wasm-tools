(module
  (type $t0 (;0;) (sub (func (result funcref))))
  (rec
    (type $t1 (;1;) (sub $t0 (func (result (ref null $t1)))))
  )
  (rec
    (type $t2 (;2;) (sub $t1 (func (result (ref null $t2)))))
  )
  (type (;3;) (func))
  (func $f0 (;0;) (type $t0) (result funcref)
    ref.null func
  )
  (func $f1 (;1;) (type $t1) (result (ref null $t1))
    ref.null $t1
  )
  (func $f2 (;2;) (type $t2) (result (ref null $t2))
    ref.null $t2
  )
  (func (;3;) (type 3)
    block (result funcref) ;; label = @1
      i32.const 0
      call_indirect (type $t0)
    end
    block (result funcref) ;; label = @1
      i32.const 1
      call_indirect (type $t0)
    end
    block (result funcref) ;; label = @1
      i32.const 2
      call_indirect (type $t0)
    end
    block (result (ref null $t1)) ;; label = @1
      i32.const 1
      call_indirect (type $t1)
    end
    block (result (ref null $t1)) ;; label = @1
      i32.const 2
      call_indirect (type $t1)
    end
    block (result (ref null $t2)) ;; label = @1
      i32.const 2
      call_indirect (type $t2)
    end
    block (result (ref null $t0)) ;; label = @1
      i32.const 0
      table.get 0
      ref.cast (ref $t0)
    end
    block (result (ref null $t0)) ;; label = @1
      i32.const 1
      table.get 0
      ref.cast (ref $t0)
    end
    block (result (ref null $t0)) ;; label = @1
      i32.const 2
      table.get 0
      ref.cast (ref $t0)
    end
    block (result (ref null $t1)) ;; label = @1
      i32.const 1
      table.get 0
      ref.cast (ref $t1)
    end
    block (result (ref null $t1)) ;; label = @1
      i32.const 2
      table.get 0
      ref.cast (ref $t1)
    end
    block (result (ref null $t2)) ;; label = @1
      i32.const 2
      table.get 0
      ref.cast (ref $t2)
    end
    br 0 (;@0;)
  )
  (func (;4;) (type 3)
    block (result (ref null $t1)) ;; label = @1
      i32.const 0
      call_indirect (type $t1)
    end
    br 0 (;@0;)
  )
  (func (;5;) (type 3)
    block (result (ref null $t1)) ;; label = @1
      i32.const 0
      call_indirect (type $t2)
    end
    br 0 (;@0;)
  )
  (func (;6;) (type 3)
    block (result (ref null $t1)) ;; label = @1
      i32.const 1
      call_indirect (type $t2)
    end
    br 0 (;@0;)
  )
  (func (;7;) (type 3)
    i32.const 0
    table.get 0
    ref.cast (ref $t1)
    br 0 (;@0;)
  )
  (func (;8;) (type 3)
    i32.const 0
    table.get 0
    ref.cast (ref $t2)
    br 0 (;@0;)
  )
  (func (;9;) (type 3)
    i32.const 1
    table.get 0
    ref.cast (ref $t2)
    br 0 (;@0;)
  )
  (table (;0;) 3 3 funcref)
  (export "run" (func 3))
  (export "fail1" (func 4))
  (export "fail2" (func 5))
  (export "fail3" (func 6))
  (export "fail4" (func 7))
  (export "fail5" (func 8))
  (export "fail6" (func 9))
  (elem (;0;) (i32.const 0) func $f0 $f1 $f2)
)
