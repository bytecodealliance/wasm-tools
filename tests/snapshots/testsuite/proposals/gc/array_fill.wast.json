{
  "source_filename": "tests/testsuite/proposals/gc/array_fill.wast",
  "commands": [
    {
      "type": "assert_invalid",
      "line": 6,
      "filename": "array_fill.0.wasm",
      "text": "array is immutable",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 17,
      "filename": "array_fill.1.wasm",
      "text": "type mismatch",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 28,
      "filename": "array_fill.2.wasm",
      "text": "type mismatch",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 38,
      "filename": "array_fill.3.wasm"
    },
    {
      "type": "assert_trap",
      "line": 59,
      "action": {
        "type": "invoke",
        "field": "array_fill-null",
        "args": []
      },
      "text": "null array reference"
    },
    {
      "type": "assert_trap",
      "line": 62,
      "action": {
        "type": "invoke",
        "field": "array_fill",
        "args": [
          {
            "type": "i32",
            "value": "13"
          },
          {
            "type": "i32",
            "value": "0"
          },
          {
            "type": "i32",
            "value": "0"
          }
        ]
      },
      "text": "out of bounds array access"
    },
    {
      "type": "assert_trap",
      "line": 65,
      "action": {
        "type": "invoke",
        "field": "array_fill",
        "args": [
          {
            "type": "i32",
            "value": "0"
          },
          {
            "type": "i32",
            "value": "0"
          },
          {
            "type": "i32",
            "value": "13"
          }
        ]
      },
      "text": "out of bounds array access"
    },
    {
      "type": "assert_return",
      "line": 68,
      "action": {
        "type": "invoke",
        "field": "array_fill",
        "args": [
          {
            "type": "i32",
            "value": "12"
          },
          {
            "type": "i32",
            "value": "0"
          },
          {
            "type": "i32",
            "value": "0"
          }
        ]
      },
      "expected": []
    },
    {
      "type": "assert_return",
      "line": 71,
      "action": {
        "type": "invoke",
        "field": "array_get_nth",
        "args": [
          {
            "type": "i32",
            "value": "0"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "0"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 72,
      "action": {
        "type": "invoke",
        "field": "array_get_nth",
        "args": [
          {
            "type": "i32",
            "value": "5"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "0"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 73,
      "action": {
        "type": "invoke",
        "field": "array_get_nth",
        "args": [
          {
            "type": "i32",
            "value": "11"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "0"
        }
      ]
    },
    {
      "type": "assert_trap",
      "line": 74,
      "action": {
        "type": "invoke",
        "field": "array_get_nth",
        "args": [
          {
            "type": "i32",
            "value": "12"
          }
        ]
      },
      "text": "out of bounds array access"
    },
    {
      "type": "assert_return",
      "line": 77,
      "action": {
        "type": "invoke",
        "field": "array_fill",
        "args": [
          {
            "type": "i32",
            "value": "2"
          },
          {
            "type": "i32",
            "value": "11"
          },
          {
            "type": "i32",
            "value": "2"
          }
        ]
      },
      "expected": []
    },
    {
      "type": "assert_return",
      "line": 78,
      "action": {
        "type": "invoke",
        "field": "array_get_nth",
        "args": [
          {
            "type": "i32",
            "value": "1"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "0"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 79,
      "action": {
        "type": "invoke",
        "field": "array_get_nth",
        "args": [
          {
            "type": "i32",
            "value": "2"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "11"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 80,
      "action": {
        "type": "invoke",
        "field": "array_get_nth",
        "args": [
          {
            "type": "i32",
            "value": "3"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "11"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 81,
      "action": {
        "type": "invoke",
        "field": "array_get_nth",
        "args": [
          {
            "type": "i32",
            "value": "4"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "0"
        }
      ]
    }
  ]
}