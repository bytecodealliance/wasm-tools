(module
  (type $bvec (;0;) (array i8))
  (type $vec (;1;) (array (ref $bvec)))
  (type $mvec (;2;) (array (mut (ref $bvec))))
  (type $nvec (;3;) (array (ref null $bvec)))
  (type $avec (;4;) (array (mut anyref)))
  (type (;5;) (func (result (ref $vec))))
  (type (;6;) (func (result (ref $nvec))))
  (type (;7;) (func (result (ref $avec))))
  (type (;8;) (func (param i32 i32 (ref $vec)) (result i32)))
  (type (;9;) (func (param i32 i32) (result i32)))
  (type (;10;) (func (param i32 i32 (ref $mvec) i32) (result i32)))
  (type (;11;) (func (param i32 i32 i32) (result i32)))
  (type (;12;) (func (param (ref array)) (result i32)))
  (type (;13;) (func (result i32)))
  (type (;14;) (func))
  (export "new" (func $new))
  (export "new-overflow" (func $new-overflow))
  (export "get" (func 5))
  (export "set_get" (func 7))
  (export "len" (func 9))
  (export "drop_segs" (func 10))
  (elem $e (;0;) (ref $bvec) (item i32.const 7 i32.const 3 array.new $bvec) (item i32.const 1 i32.const 2 array.new_fixed $bvec 2))
  (func $new (;0;) (type 5) (result (ref $vec))
    i32.const 0
    i32.const 2
    array.new_elem $vec $e
  )
  (func $new-overflow (;1;) (type 5) (result (ref $vec))
    i32.const -2147483648
    i32.const -2147483648
    array.new_elem $vec $e
  )
  (func $sub1 (;2;) (type 6) (result (ref $nvec))
    i32.const 0
    i32.const 2
    array.new_elem $nvec $e
  )
  (func $sub2 (;3;) (type 7) (result (ref $avec))
    i32.const 0
    i32.const 2
    array.new_elem $avec $e
  )
  (func $get (;4;) (type 8) (param $i i32) (param $j i32) (param $v (ref $vec)) (result i32)
    local.get $v
    local.get $i
    array.get $vec
    local.get $j
    array.get_u $bvec
  )
  (func (;5;) (type 9) (param $i i32) (param $j i32) (result i32)
    local.get $i
    local.get $j
    call $new
    call $get
  )
  (func $set_get (;6;) (type 10) (param $i i32) (param $j i32) (param $v (ref $mvec)) (param $y i32) (result i32)
    local.get $v
    local.get $i
    local.get $v
    local.get $y
    array.get $mvec
    array.set $mvec
    local.get $v
    local.get $i
    array.get $mvec
    local.get $j
    array.get_u $bvec
  )
  (func (;7;) (type 11) (param $i i32) (param $j i32) (param $y i32) (result i32)
    local.get $i
    local.get $j
    i32.const 0
    i32.const 2
    array.new_elem $mvec $e
    local.get $y
    call $set_get
  )
  (func $len (;8;) (type 12) (param $v (ref array)) (result i32)
    local.get $v
    array.len
  )
  (func (;9;) (type 13) (result i32)
    call $new
    call $len
  )
  (func (;10;) (type 14)
    elem.drop $e
  )
)
