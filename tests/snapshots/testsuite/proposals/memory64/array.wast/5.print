(module
  (type $vec (;0;) (array f32))
  (type $mvec (;1;) (array (mut f32)))
  (type (;2;) (func (result (ref $vec))))
  (type (;3;) (func (param i32 (ref $vec)) (result f32)))
  (type (;4;) (func (param i32) (result f32)))
  (type (;5;) (func (param i32 (ref $mvec) f32) (result f32)))
  (type (;6;) (func (param i32 f32) (result f32)))
  (type (;7;) (func (param (ref array)) (result i32)))
  (type (;8;) (func (result i32)))
  (func $new (;0;) (type 2) (result (ref $vec))
    i32.const 3
    array.new_default $vec
  )
  (func $get (;1;) (type 3) (param $i i32) (param $v (ref $vec)) (result f32)
    local.get $v
    local.get $i
    array.get $vec
  )
  (func (;2;) (type 4) (param $i i32) (result f32)
    local.get $i
    call $new
    call $get
  )
  (func $set_get (;3;) (type 5) (param $i i32) (param $v (ref $mvec)) (param $y f32) (result f32)
    local.get $v
    local.get $i
    local.get $y
    array.set $mvec
    local.get $v
    local.get $i
    array.get $mvec
  )
  (func (;4;) (type 6) (param $i i32) (param $y f32) (result f32)
    local.get $i
    i32.const 3
    array.new_default $mvec
    local.get $y
    call $set_get
  )
  (func $len (;5;) (type 7) (param $v (ref array)) (result i32)
    local.get $v
    array.len
  )
  (func (;6;) (type 8) (result i32)
    call $new
    call $len
  )
  (global (;0;) (ref $vec) f32.const 0x1p+0 (;=1;) i32.const 3 array.new $vec)
  (global (;1;) (ref $vec) i32.const 3 array.new_default $vec)
  (export "new" (func $new))
  (export "get" (func 2))
  (export "set_get" (func 4))
  (export "len" (func 6))
)
