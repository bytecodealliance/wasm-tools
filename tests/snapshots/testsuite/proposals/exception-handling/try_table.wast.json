{
  "source_filename": "tests/testsuite/proposals/exception-handling/try_table.wast",
  "commands": [
    {
      "type": "module",
      "line": 3,
      "filename": "try_table.0.wasm"
    },
    {
      "type": "register",
      "line": 8,
      "as": "test"
    },
    {
      "type": "module",
      "line": 10,
      "filename": "try_table.1.wasm"
    },
    {
      "type": "assert_return",
      "line": 243,
      "action": {
        "type": "invoke",
        "field": "simple-throw-catch",
        "args": [
          {
            "type": "i32",
            "value": "0"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "23"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 244,
      "action": {
        "type": "invoke",
        "field": "simple-throw-catch",
        "args": [
          {
            "type": "i32",
            "value": "1"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "42"
        }
      ]
    },
    {
      "type": "assert_trap",
      "line": 246,
      "action": {
        "type": "invoke",
        "field": "unreachable-not-caught",
        "args": []
      },
      "text": "unreachable"
    },
    {
      "type": "assert_return",
      "line": 248,
      "action": {
        "type": "invoke",
        "field": "trap-in-callee",
        "args": [
          {
            "type": "i32",
            "value": "7"
          },
          {
            "type": "i32",
            "value": "2"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "3"
        }
      ]
    },
    {
      "type": "assert_trap",
      "line": 249,
      "action": {
        "type": "invoke",
        "field": "trap-in-callee",
        "args": [
          {
            "type": "i32",
            "value": "1"
          },
          {
            "type": "i32",
            "value": "0"
          }
        ]
      },
      "text": "integer divide by zero"
    },
    {
      "type": "assert_return",
      "line": 251,
      "action": {
        "type": "invoke",
        "field": "catch-complex-1",
        "args": [
          {
            "type": "i32",
            "value": "0"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "3"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 252,
      "action": {
        "type": "invoke",
        "field": "catch-complex-1",
        "args": [
          {
            "type": "i32",
            "value": "1"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "4"
        }
      ]
    },
    {
      "type": "assert_exception",
      "line": 253,
      "action": {
        "type": "invoke",
        "field": "catch-complex-1",
        "args": [
          {
            "type": "i32",
            "value": "2"
          }
        ]
      }
    },
    {
      "type": "assert_return",
      "line": 255,
      "action": {
        "type": "invoke",
        "field": "catch-complex-2",
        "args": [
          {
            "type": "i32",
            "value": "0"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "3"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 256,
      "action": {
        "type": "invoke",
        "field": "catch-complex-2",
        "args": [
          {
            "type": "i32",
            "value": "1"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "4"
        }
      ]
    },
    {
      "type": "assert_exception",
      "line": 257,
      "action": {
        "type": "invoke",
        "field": "catch-complex-2",
        "args": [
          {
            "type": "i32",
            "value": "2"
          }
        ]
      }
    },
    {
      "type": "assert_return",
      "line": 259,
      "action": {
        "type": "invoke",
        "field": "throw-catch-param-i32",
        "args": [
          {
            "type": "i32",
            "value": "0"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "0"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 260,
      "action": {
        "type": "invoke",
        "field": "throw-catch-param-i32",
        "args": [
          {
            "type": "i32",
            "value": "1"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "1"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 261,
      "action": {
        "type": "invoke",
        "field": "throw-catch-param-i32",
        "args": [
          {
            "type": "i32",
            "value": "10"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "10"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 263,
      "action": {
        "type": "invoke",
        "field": "throw-catch-param-f32",
        "args": [
          {
            "type": "f32",
            "value": "1084227584"
          }
        ]
      },
      "expected": [
        {
          "type": "f32",
          "value": "1084227584"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 264,
      "action": {
        "type": "invoke",
        "field": "throw-catch-param-f32",
        "args": [
          {
            "type": "f32",
            "value": "1093140480"
          }
        ]
      },
      "expected": [
        {
          "type": "f32",
          "value": "1093140480"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 266,
      "action": {
        "type": "invoke",
        "field": "throw-catch-param-i64",
        "args": [
          {
            "type": "i64",
            "value": "5"
          }
        ]
      },
      "expected": [
        {
          "type": "i64",
          "value": "5"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 267,
      "action": {
        "type": "invoke",
        "field": "throw-catch-param-i64",
        "args": [
          {
            "type": "i64",
            "value": "0"
          }
        ]
      },
      "expected": [
        {
          "type": "i64",
          "value": "0"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 268,
      "action": {
        "type": "invoke",
        "field": "throw-catch-param-i64",
        "args": [
          {
            "type": "i64",
            "value": "-1"
          }
        ]
      },
      "expected": [
        {
          "type": "i64",
          "value": "-1"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 270,
      "action": {
        "type": "invoke",
        "field": "throw-catch-param-f64",
        "args": [
          {
            "type": "f64",
            "value": "4617315517961601024"
          }
        ]
      },
      "expected": [
        {
          "type": "f64",
          "value": "4617315517961601024"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 271,
      "action": {
        "type": "invoke",
        "field": "throw-catch-param-f64",
        "args": [
          {
            "type": "f64",
            "value": "4622100592565682176"
          }
        ]
      },
      "expected": [
        {
          "type": "f64",
          "value": "4622100592565682176"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 273,
      "action": {
        "type": "invoke",
        "field": "throw-catch_ref-param-i32",
        "args": [
          {
            "type": "i32",
            "value": "0"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "0"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 274,
      "action": {
        "type": "invoke",
        "field": "throw-catch_ref-param-i32",
        "args": [
          {
            "type": "i32",
            "value": "1"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "1"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 275,
      "action": {
        "type": "invoke",
        "field": "throw-catch_ref-param-i32",
        "args": [
          {
            "type": "i32",
            "value": "10"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "10"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 277,
      "action": {
        "type": "invoke",
        "field": "throw-catch_ref-param-f32",
        "args": [
          {
            "type": "f32",
            "value": "1084227584"
          }
        ]
      },
      "expected": [
        {
          "type": "f32",
          "value": "1084227584"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 278,
      "action": {
        "type": "invoke",
        "field": "throw-catch_ref-param-f32",
        "args": [
          {
            "type": "f32",
            "value": "1093140480"
          }
        ]
      },
      "expected": [
        {
          "type": "f32",
          "value": "1093140480"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 280,
      "action": {
        "type": "invoke",
        "field": "throw-catch_ref-param-i64",
        "args": [
          {
            "type": "i64",
            "value": "5"
          }
        ]
      },
      "expected": [
        {
          "type": "i64",
          "value": "5"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 281,
      "action": {
        "type": "invoke",
        "field": "throw-catch_ref-param-i64",
        "args": [
          {
            "type": "i64",
            "value": "0"
          }
        ]
      },
      "expected": [
        {
          "type": "i64",
          "value": "0"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 282,
      "action": {
        "type": "invoke",
        "field": "throw-catch_ref-param-i64",
        "args": [
          {
            "type": "i64",
            "value": "-1"
          }
        ]
      },
      "expected": [
        {
          "type": "i64",
          "value": "-1"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 284,
      "action": {
        "type": "invoke",
        "field": "throw-catch_ref-param-f64",
        "args": [
          {
            "type": "f64",
            "value": "4617315517961601024"
          }
        ]
      },
      "expected": [
        {
          "type": "f64",
          "value": "4617315517961601024"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 285,
      "action": {
        "type": "invoke",
        "field": "throw-catch_ref-param-f64",
        "args": [
          {
            "type": "f64",
            "value": "4622100592565682176"
          }
        ]
      },
      "expected": [
        {
          "type": "f64",
          "value": "4622100592565682176"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 287,
      "action": {
        "type": "invoke",
        "field": "catch-param-i32",
        "args": [
          {
            "type": "i32",
            "value": "5"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "5"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 289,
      "action": {
        "type": "invoke",
        "field": "catch-imported",
        "args": []
      },
      "expected": [
        {
          "type": "i32",
          "value": "2"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 291,
      "action": {
        "type": "invoke",
        "field": "catchless-try",
        "args": [
          {
            "type": "i32",
            "value": "0"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "0"
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 292,
      "action": {
        "type": "invoke",
        "field": "catchless-try",
        "args": [
          {
            "type": "i32",
            "value": "1"
          }
        ]
      },
      "expected": [
        {
          "type": "i32",
          "value": "1"
        }
      ]
    },
    {
      "type": "assert_exception",
      "line": 294,
      "action": {
        "type": "invoke",
        "field": "return-call-in-try-catch",
        "args": []
      }
    },
    {
      "type": "assert_exception",
      "line": 295,
      "action": {
        "type": "invoke",
        "field": "return-call-indirect-in-try-catch",
        "args": []
      }
    },
    {
      "type": "module",
      "line": 297,
      "filename": "try_table.2.wasm"
    },
    {
      "type": "assert_return",
      "line": 319,
      "action": {
        "type": "invoke",
        "field": "imported-mismatch",
        "args": []
      },
      "expected": [
        {
          "type": "i32",
          "value": "3"
        }
      ]
    },
    {
      "type": "assert_malformed",
      "line": 322,
      "filename": "try_table.3.wat",
      "text": "unexpected token",
      "module_type": "text"
    },
    {
      "type": "assert_malformed",
      "line": 327,
      "filename": "try_table.4.wat",
      "text": "unexpected token",
      "module_type": "text"
    },
    {
      "type": "module",
      "line": 331,
      "filename": "try_table.5.wasm"
    },
    {
      "type": "assert_invalid",
      "line": 342,
      "filename": "try_table.6.wasm",
      "text": "type mismatch",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 346,
      "filename": "try_table.7.wasm",
      "text": "type mismatch",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 351,
      "filename": "try_table.8.wasm",
      "text": "type mismatch",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 355,
      "filename": "try_table.9.wasm",
      "text": "type mismatch",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 359,
      "filename": "try_table.10.wasm",
      "text": "type mismatch",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 363,
      "filename": "try_table.11.wasm",
      "text": "type mismatch",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 367,
      "filename": "try_table.12.wasm",
      "text": "type mismatch",
      "module_type": "binary"
    }
  ]
}