(module $m
  (type $T (;0;) (func (param i32 i64 i32) (result i32)))
  (type (;1;) (func))
  (func $f (;0;) (type $T) (param i32 i64) (param $x i32) (result i32)
    (local i32 i32) (local $y i32)
    block (result i32) ;; label = @1
      local.get $x
      local.get 0
      i32.add
    end
  )
  (func $s (;1;) (type 1))
  (table $t (;0;) 10 20 funcref)
  (memory $m (;0;) 1 2)
  (global $g (;0;) i32 i32.const 42)
  (export "g" (global $g))
  (export "t" (table $t))
  (export "m" (memory $m))
  (export "f" (func $f))
  (start $s)
  (elem (;0;) (i32.const 0) func $f $f $f)
  (data (;0;) (i32.const 0) "blaC")
)