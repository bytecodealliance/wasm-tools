(module
  (type (;0;) (func (result f32)))
  (type (;1;) (func (result f64)))
  (func (;0;) (type 0) (result f32)
    (local $x f32) (local $result f32)
    f32.const 0x1p+0 (;=1;)
    local.set $x
    loop $loop ;; label = @1
      local.get $x
      local.tee $result
      f32.const 0x1p-1 (;=0.5;)
      f32.mul
      local.tee $x
      f32.const 0x1p+0 (;=1;)
      f32.add
      f32.const 0x1p+0 (;=1;)
      f32.gt
      br_if 0 (;@1;)
    end
    local.get $result
  )
  (func (;1;) (type 1) (result f64)
    (local $x f64) (local $result f64)
    f64.const 0x1p+0 (;=1;)
    local.set $x
    loop $loop ;; label = @1
      local.get $x
      local.tee $result
      f64.const 0x1p-1 (;=0.5;)
      f64.mul
      local.tee $x
      f64.const 0x1p+0 (;=1;)
      f64.add
      f64.const 0x1p+0 (;=1;)
      f64.gt
      br_if 0 (;@1;)
    end
    local.get $result
  )
  (export "f32.epsilon" (func 0))
  (export "f64.epsilon" (func 1))
)