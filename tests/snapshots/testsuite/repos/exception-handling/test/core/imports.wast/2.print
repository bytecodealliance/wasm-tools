(module
  (type $func_i32 (;0;) (func (param i32)))
  (type $func_i64 (;1;) (func (param i64)))
  (type $func_f32 (;2;) (func (param f32)))
  (type $func_f64 (;3;) (func (param f64)))
  (type $forward (;4;) (func (param i32)))
  (type (;5;) (func (param i32 f32)))
  (type (;6;) (func (param f64 f64)))
  (type (;7;) (func (param i64) (result i64)))
  (import "spectest" "print_i32" (func (;0;) (type $func_i32)))
  (import "spectest" "print_i64" (func (;1;) (type $func_i64)))
  (import "spectest" "print_i32" (func $print_i32 (;2;) (type $func_i32)))
  (import "spectest" "print_i64" (func $print_i64 (;3;) (type $func_i64)))
  (import "spectest" "print_f32" (func $print_f32 (;4;) (type $func_f32)))
  (import "spectest" "print_f64" (func $print_f64 (;5;) (type $func_f64)))
  (import "spectest" "print_i32_f32" (func $print_i32_f32 (;6;) (type 5)))
  (import "spectest" "print_f64_f64" (func $print_f64_f64 (;7;) (type 6)))
  (import "spectest" "print_i32" (func $print_i32-2 (;8;) (type $func_i32)))
  (import "spectest" "print_f64" (func $print_f64-2 (;9;) (type $func_f64)))
  (import "test" "func-i64->i64" (func $i64->i64 (;10;) (type 7)))
  (import "test" "tag-i32" (tag (;0;) (type $func_i32) (param i32)))
  (import "test" "tag-f32" (tag (;1;) (type $func_f32) (param f32)))
  (import "spectest" "print_i32" (func (;11;) (type $func_i32)))
  (import "spectest" "print_i32" (func $p (;12;) (type $func_i32)))
  (import "spectest" "print_i32" (func (;13;) (type $func_i32)))
  (import "spectest" "print_i32" (func (;14;) (type $func_i32)))
  (import "spectest" "print_i32" (func (;15;) (type $func_i32)))
  (import "spectest" "print_i32" (func (;16;) (type $forward)))
  (import "spectest" "print_i32" (func (;17;) (type $forward)))
  (func (;18;) (type $func_i32) (param $i i32)
    (local $x f32)
    local.get $i
    f32.convert_i32_s
    local.set $x
    local.get $i
    call 0
    local.get $i
    i32.const 1
    i32.add
    f32.const 0x1.5p+5 (;=42;)
    call $print_i32_f32
    local.get $i
    call $print_i32
    local.get $i
    call $print_i32-2
    local.get $x
    call $print_f32
    local.get $i
    i32.const 0
    call_indirect (type $func_i32)
  )
  (func (;19;) (type $func_i64) (param $i i64)
    (local $x f64)
    local.get $i
    call $i64->i64
    f64.convert_i64_s
    local.set $x
    local.get $i
    call 1
    local.get $x
    f64.const 0x1p+0 (;=1;)
    f64.add
    f64.const 0x1.a8p+5 (;=53;)
    call $print_f64_f64
    local.get $i
    call $print_i64
    local.get $x
    call $print_f64
    local.get $x
    call $print_f64-2
    local.get $x
    i32.const 1
    call_indirect (type $func_f64)
  )
  (table (;0;) 2 2 funcref)
  (export "p1" (func 11))
  (export "p2" (func $p))
  (export "p3" (func 13))
  (export "p4" (func 13))
  (export "p5" (func 14))
  (export "p6" (func 15))
  (export "print32" (func 18))
  (export "print64" (func 19))
  (elem (;0;) (i32.const 0) func $print_i32 $print_f64)
)