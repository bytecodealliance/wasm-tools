(module
  (type $check (;0;) (func (param i32 i32) (result i32)))
  (type (;1;) (func))
  (type (;2;) (func (param i32 i32 i32) (result i32)))
  (type (;3;) (func (result i32)))
  (type (;4;) (func (param i32)))
  (type (;5;) (func (param i32) (result i32)))
  (type (;6;) (func (param i32 i32)))
  (func $dummy (;0;) (type 1))
  (func $3-ary (;1;) (type 2) (param i32 i32 i32) (result i32)
    local.get 0
    local.get 1
    local.get 2
    i32.sub
    i32.add
  )
  (func (;2;) (type 3) (result i32)
    nop
    i32.const 1
  )
  (func (;3;) (type 3) (result i32)
    call $dummy
    nop
    i32.const 2
  )
  (func (;4;) (type 3) (result i32)
    call $dummy
    i32.const 3
    nop
  )
  (func (;5;) (type 3) (result i32)
    nop
    nop
    call $dummy
    nop
    i32.const 4
    nop
    nop
  )
  (func (;6;) (type 4) (param i32)
    nop
    local.get 0
    drop
  )
  (func (;7;) (type 4) (param i32)
    local.get 0
    nop
    drop
  )
  (func (;8;) (type 4) (param i32)
    nop
    nop
    local.get 0
    nop
    nop
    drop
  )
  (func (;9;) (type 5) (param i32) (result i32)
    nop
    local.get 0
    local.get 0
    local.get 0
    select
  )
  (func (;10;) (type 5) (param i32) (result i32)
    local.get 0
    nop
    local.get 0
    local.get 0
    select
  )
  (func (;11;) (type 5) (param i32) (result i32)
    local.get 0
    local.get 0
    nop
    local.get 0
    select
  )
  (func (;12;) (type 5) (param i32) (result i32)
    local.get 0
    local.get 0
    local.get 0
    nop
    select
  )
  (func (;13;) (type 5) (param i32) (result i32)
    nop
    local.get 0
    nop
    nop
    local.get 0
    nop
    nop
    local.get 0
    nop
    nop
    select
  )
  (func (;14;) (type 3) (result i32)
    block (result i32) ;; label = @1
      nop
      i32.const 2
    end
  )
  (func (;15;) (type 3) (result i32)
    block (result i32) ;; label = @1
      call $dummy
      nop
      i32.const 2
    end
  )
  (func (;16;) (type 3) (result i32)
    block (result i32) ;; label = @1
      nop
      call $dummy
      i32.const 3
      nop
    end
  )
  (func (;17;) (type 3) (result i32)
    block (result i32) ;; label = @1
      nop
      nop
      call $dummy
      nop
      i32.const 4
      nop
      nop
    end
  )
  (func (;18;) (type 3) (result i32)
    loop (result i32) ;; label = @1
      nop
      i32.const 2
    end
  )
  (func (;19;) (type 3) (result i32)
    loop (result i32) ;; label = @1
      call $dummy
      nop
      i32.const 2
    end
  )
  (func (;20;) (type 3) (result i32)
    loop (result i32) ;; label = @1
      call $dummy
      i32.const 3
      nop
    end
  )
  (func (;21;) (type 3) (result i32)
    loop (result i32) ;; label = @1
      nop
      nop
      call $dummy
      nop
      i32.const 4
      nop
      nop
    end
  )
  (func (;22;) (type 4) (param i32)
    local.get 0
    nop
    if ;; label = @1
      call $dummy
    end
  )
  (func (;23;) (type 4) (param i32)
    local.get 0
    if ;; label = @1
      nop
    else
      call $dummy
    end
  )
  (func (;24;) (type 4) (param i32)
    local.get 0
    if ;; label = @1
      call $dummy
    else
      nop
    end
  )
  (func (;25;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      nop
      local.get 0
      br 0 (;@1;)
    end
  )
  (func (;26;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      local.get 0
      nop
      br 0 (;@1;)
    end
  )
  (func (;27;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      nop
      nop
      local.get 0
      nop
      nop
      br 0 (;@1;)
    end
  )
  (func (;28;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      nop
      local.get 0
      local.get 0
      br_if 0 (;@1;)
    end
  )
  (func (;29;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      local.get 0
      nop
      local.get 0
      br_if 0 (;@1;)
    end
  )
  (func (;30;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      local.get 0
      local.get 0
      nop
      br_if 0 (;@1;)
    end
  )
  (func (;31;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      nop
      nop
      local.get 0
      nop
      nop
      local.get 0
      nop
      nop
      br_if 0 (;@1;)
    end
  )
  (func (;32;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      nop
      local.get 0
      local.get 0
      br_table 0 (;@1;) 0 (;@1;)
    end
  )
  (func (;33;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      local.get 0
      nop
      local.get 0
      br_table 0 (;@1;) 0 (;@1;)
    end
  )
  (func (;34;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      local.get 0
      local.get 0
      nop
      br_table 0 (;@1;) 0 (;@1;)
    end
  )
  (func (;35;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      nop
      nop
      local.get 0
      nop
      nop
      local.get 0
      nop
      nop
      br_table 0 (;@1;) 0 (;@1;)
    end
  )
  (func (;36;) (type 5) (param i32) (result i32)
    nop
    local.get 0
    return
  )
  (func (;37;) (type 5) (param i32) (result i32)
    local.get 0
    nop
    return
  )
  (func (;38;) (type 5) (param i32) (result i32)
    nop
    nop
    local.get 0
    nop
    nop
    return
  )
  (func (;39;) (type 2) (param i32 i32 i32) (result i32)
    nop
    local.get 0
    local.get 1
    local.get 2
    call $3-ary
  )
  (func (;40;) (type 2) (param i32 i32 i32) (result i32)
    local.get 0
    nop
    local.get 1
    local.get 2
    call $3-ary
  )
  (func (;41;) (type 2) (param i32 i32 i32) (result i32)
    local.get 0
    local.get 1
    nop
    local.get 2
    call $3-ary
  )
  (func (;42;) (type 2) (param i32 i32 i32) (result i32)
    local.get 0
    local.get 1
    local.get 2
    nop
    call $3-ary
  )
  (func (;43;) (type 2) (param i32 i32 i32) (result i32)
    nop
    nop
    local.get 0
    nop
    nop
    local.get 1
    nop
    nop
    local.get 2
    nop
    nop
    call $3-ary
  )
  (func (;44;) (type 5) (param i32) (result i32)
    nop
    local.get 0
    i32.ctz
  )
  (func (;45;) (type 5) (param i32) (result i32)
    local.get 0
    nop
    i32.ctz
  )
  (func (;46;) (type 5) (param i32) (result i32)
    nop
    nop
    local.get 0
    nop
    nop
    i32.ctz
  )
  (func (;47;) (type 5) (param i32) (result i32)
    nop
    local.get 0
    local.get 0
    i32.add
  )
  (func (;48;) (type 5) (param i32) (result i32)
    local.get 0
    nop
    local.get 0
    i32.add
  )
  (func (;49;) (type 5) (param i32) (result i32)
    local.get 0
    local.get 0
    nop
    i32.add
  )
  (func (;50;) (type 5) (param i32) (result i32)
    nop
    local.get 0
    nop
    nop
    local.get 0
    nop
    nop
    i32.add
  )
  (func (;51;) (type 5) (param i32) (result i32)
    nop
    local.get 0
    i32.eqz
  )
  (func (;52;) (type 5) (param i32) (result i32)
    local.get 0
    nop
    i32.eqz
  )
  (func (;53;) (type 5) (param i32) (result i32)
    nop
    nop
    local.get 0
    nop
    nop
    i32.eqz
  )
  (func (;54;) (type 5) (param i32) (result i32)
    nop
    local.get 0
    local.get 0
    i32.ne
  )
  (func (;55;) (type 5) (param i32) (result i32)
    local.get 0
    nop
    local.get 0
    i32.ne
  )
  (func (;56;) (type 5) (param i32) (result i32)
    local.get 0
    local.get 0
    nop
    i32.lt_u
  )
  (func (;57;) (type 5) (param i32) (result i32)
    nop
    local.get 0
    nop
    nop
    local.get 0
    nop
    nop
    i32.le_s
  )
  (func (;58;) (type 5) (param i32) (result i32)
    nop
    local.get 0
    memory.grow
  )
  (func (;59;) (type 5) (param i32) (result i32)
    local.get 0
    nop
    memory.grow
  )
  (func (;60;) (type 5) (param i32) (result i32)
    nop
    nop
    local.get 0
    nop
    nop
    memory.grow
  )
  (func $func (;61;) (type $check) (param i32 i32) (result i32)
    local.get 0
  )
  (func (;62;) (type 3) (result i32)
    block (result i32) ;; label = @1
      nop
      i32.const 1
      i32.const 2
      i32.const 0
      call_indirect (type $check)
    end
  )
  (func (;63;) (type 3) (result i32)
    block (result i32) ;; label = @1
      i32.const 1
      nop
      i32.const 2
      i32.const 0
      call_indirect (type $check)
    end
  )
  (func (;64;) (type 3) (result i32)
    block (result i32) ;; label = @1
      i32.const 1
      i32.const 2
      nop
      i32.const 0
      call_indirect (type $check)
    end
  )
  (func (;65;) (type 3) (result i32)
    block (result i32) ;; label = @1
      i32.const 1
      i32.const 2
      i32.const 0
      nop
      call_indirect (type $check)
    end
  )
  (func (;66;) (type 3) (result i32)
    block (result i32) ;; label = @1
      nop
      nop
      i32.const 1
      nop
      nop
      i32.const 2
      nop
      nop
      i32.const 0
      nop
      nop
      call_indirect (type $check)
    end
  )
  (func (;67;) (type 5) (param i32) (result i32)
    nop
    i32.const 2
    local.set 0
    local.get 0
  )
  (func (;68;) (type 5) (param i32) (result i32)
    i32.const 2
    nop
    local.set 0
    local.get 0
  )
  (func (;69;) (type 5) (param i32) (result i32)
    nop
    nop
    i32.const 2
    nop
    nop
    local.set 0
    local.get 0
  )
  (func (;70;) (type 5) (param i32) (result i32)
    nop
    i32.const 2
    local.tee 0
  )
  (func (;71;) (type 5) (param i32) (result i32)
    i32.const 2
    nop
    local.tee 0
  )
  (func (;72;) (type 5) (param i32) (result i32)
    nop
    nop
    i32.const 2
    nop
    nop
    local.tee 0
  )
  (func (;73;) (type 3) (result i32)
    nop
    i32.const 2
    global.set $a
    global.get $a
  )
  (func (;74;) (type 3) (result i32)
    i32.const 2
    nop
    global.set $a
    global.get $a
  )
  (func (;75;) (type 3) (result i32)
    nop
    nop
    i32.const 2
    nop
    nop
    global.set $a
    global.get $a
  )
  (func (;76;) (type 5) (param i32) (result i32)
    nop
    local.get 0
    i32.load
  )
  (func (;77;) (type 5) (param i32) (result i32)
    local.get 0
    nop
    i32.load
  )
  (func (;78;) (type 5) (param i32) (result i32)
    nop
    nop
    local.get 0
    nop
    nop
    i32.load
  )
  (func (;79;) (type 6) (param i32 i32)
    nop
    local.get 0
    local.get 1
    i32.store
  )
  (func (;80;) (type 6) (param i32 i32)
    local.get 0
    nop
    local.get 1
    i32.store
  )
  (func (;81;) (type 6) (param i32 i32)
    local.get 0
    local.get 1
    nop
    i32.store
  )
  (func (;82;) (type 6) (param i32 i32)
    nop
    nop
    local.get 0
    nop
    nop
    local.get 1
    nop
    nop
    i32.store
  )
  (table (;0;) 1 1 funcref)
  (memory (;0;) 1)
  (global $a (;0;) (mut i32) i32.const 0)
  (export "as-func-first" (func 2))
  (export "as-func-mid" (func 3))
  (export "as-func-last" (func 4))
  (export "as-func-everywhere" (func 5))
  (export "as-drop-first" (func 6))
  (export "as-drop-last" (func 7))
  (export "as-drop-everywhere" (func 8))
  (export "as-select-first" (func 9))
  (export "as-select-mid1" (func 10))
  (export "as-select-mid2" (func 11))
  (export "as-select-last" (func 12))
  (export "as-select-everywhere" (func 13))
  (export "as-block-first" (func 14))
  (export "as-block-mid" (func 15))
  (export "as-block-last" (func 16))
  (export "as-block-everywhere" (func 17))
  (export "as-loop-first" (func 18))
  (export "as-loop-mid" (func 19))
  (export "as-loop-last" (func 20))
  (export "as-loop-everywhere" (func 21))
  (export "as-if-condition" (func 22))
  (export "as-if-then" (func 23))
  (export "as-if-else" (func 24))
  (export "as-br-first" (func 25))
  (export "as-br-last" (func 26))
  (export "as-br-everywhere" (func 27))
  (export "as-br_if-first" (func 28))
  (export "as-br_if-mid" (func 29))
  (export "as-br_if-last" (func 30))
  (export "as-br_if-everywhere" (func 31))
  (export "as-br_table-first" (func 32))
  (export "as-br_table-mid" (func 33))
  (export "as-br_table-last" (func 34))
  (export "as-br_table-everywhere" (func 35))
  (export "as-return-first" (func 36))
  (export "as-return-last" (func 37))
  (export "as-return-everywhere" (func 38))
  (export "as-call-first" (func 39))
  (export "as-call-mid1" (func 40))
  (export "as-call-mid2" (func 41))
  (export "as-call-last" (func 42))
  (export "as-call-everywhere" (func 43))
  (export "as-unary-first" (func 44))
  (export "as-unary-last" (func 45))
  (export "as-unary-everywhere" (func 46))
  (export "as-binary-first" (func 47))
  (export "as-binary-mid" (func 48))
  (export "as-binary-last" (func 49))
  (export "as-binary-everywhere" (func 50))
  (export "as-test-first" (func 51))
  (export "as-test-last" (func 52))
  (export "as-test-everywhere" (func 53))
  (export "as-compare-first" (func 54))
  (export "as-compare-mid" (func 55))
  (export "as-compare-last" (func 56))
  (export "as-compare-everywhere" (func 57))
  (export "as-memory.grow-first" (func 58))
  (export "as-memory.grow-last" (func 59))
  (export "as-memory.grow-everywhere" (func 60))
  (export "as-call_indirect-first" (func 62))
  (export "as-call_indirect-mid1" (func 63))
  (export "as-call_indirect-mid2" (func 64))
  (export "as-call_indirect-last" (func 65))
  (export "as-call_indirect-everywhere" (func 66))
  (export "as-local.set-first" (func 67))
  (export "as-local.set-last" (func 68))
  (export "as-local.set-everywhere" (func 69))
  (export "as-local.tee-first" (func 70))
  (export "as-local.tee-last" (func 71))
  (export "as-local.tee-everywhere" (func 72))
  (export "as-global.set-first" (func 73))
  (export "as-global.set-last" (func 74))
  (export "as-global.set-everywhere" (func 75))
  (export "as-load-first" (func 76))
  (export "as-load-last" (func 77))
  (export "as-load-everywhere" (func 78))
  (export "as-store-first" (func 79))
  (export "as-store-mid" (func 80))
  (export "as-store-last" (func 81))
  (export "as-store-everywhere" (func 82))
  (elem (;0;) (i32.const 0) func $func)
)