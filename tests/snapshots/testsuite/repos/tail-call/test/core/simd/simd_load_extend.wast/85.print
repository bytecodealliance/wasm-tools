(module
  (type (;0;) (func (result v128)))
  (type (;1;) (func (result i32)))
  (func (;0;) (type 0) (result v128)
    block (result v128) ;; label = @1
      block (result v128) ;; label = @2
        i32.const 0
        v128.load8x8_s
      end
    end
  )
  (func (;1;) (type 0) (result v128)
    block (result v128) ;; label = @1
      block (result v128) ;; label = @2
        i32.const 1
        v128.load8x8_u
      end
    end
  )
  (func (;2;) (type 0) (result v128)
    block (result v128) ;; label = @1
      block (result v128) ;; label = @2
        i32.const 2
        v128.load16x4_s
      end
    end
  )
  (func (;3;) (type 0) (result v128)
    block (result v128) ;; label = @1
      block (result v128) ;; label = @2
        i32.const 3
        v128.load16x4_u
      end
    end
  )
  (func (;4;) (type 0) (result v128)
    block (result v128) ;; label = @1
      block (result v128) ;; label = @2
        i32.const 4
        v128.load32x2_s
      end
    end
  )
  (func (;5;) (type 0) (result v128)
    block (result v128) ;; label = @1
      block (result v128) ;; label = @2
        i32.const 5
        v128.load32x2_u
      end
    end
  )
  (func (;6;) (type 0) (result v128)
    block (result v128) ;; label = @1
      i32.const 6
      v128.load8x8_s
      br 0 (;@1;)
    end
  )
  (func (;7;) (type 0) (result v128)
    block (result v128) ;; label = @1
      i32.const 7
      v128.load8x8_u
      br 0 (;@1;)
    end
  )
  (func (;8;) (type 0) (result v128)
    block (result v128) ;; label = @1
      i32.const 8
      v128.load16x4_s
      br 0 (;@1;)
    end
  )
  (func (;9;) (type 0) (result v128)
    block (result v128) ;; label = @1
      i32.const 9
      v128.load16x4_u
      br 0 (;@1;)
    end
  )
  (func (;10;) (type 0) (result v128)
    block (result v128) ;; label = @1
      i32.const 10
      v128.load32x2_s
      br 0 (;@1;)
    end
  )
  (func (;11;) (type 0) (result v128)
    block (result v128) ;; label = @1
      i32.const 11
      v128.load32x2_u
      br 0 (;@1;)
    end
  )
  (func (;12;) (type 1) (result i32)
    i32.const 12
    v128.load8x8_s
    i8x16.extract_lane_s 0
  )
  (func (;13;) (type 1) (result i32)
    i32.const 13
    v128.load8x8_u
    i8x16.extract_lane_s 0
  )
  (func (;14;) (type 1) (result i32)
    i32.const 14
    v128.load16x4_s
    i8x16.extract_lane_s 0
  )
  (func (;15;) (type 1) (result i32)
    i32.const 15
    v128.load16x4_u
    i8x16.extract_lane_s 0
  )
  (func (;16;) (type 1) (result i32)
    i32.const 16
    v128.load32x2_s
    i8x16.extract_lane_s 0
  )
  (func (;17;) (type 1) (result i32)
    i32.const 17
    v128.load32x2_u
    i8x16.extract_lane_s 0
  )
  (memory (;0;) 1)
  (export "v128.load8x8_s-in-block" (func 0))
  (export "v128.load8x8_u-in-block" (func 1))
  (export "v128.load16x4_s-in-block" (func 2))
  (export "v128.load16x4_u-in-block" (func 3))
  (export "v128.load32x2_s-in-block" (func 4))
  (export "v128.load32x2_u-in-block" (func 5))
  (export "v128.load8x8_s-as-br-value" (func 6))
  (export "v128.load8x8_u-as-br-value" (func 7))
  (export "v128.load16x4_s-as-br-value" (func 8))
  (export "v128.load16x4_u-as-br-value" (func 9))
  (export "v128.load32x2_s-as-br-value" (func 10))
  (export "v128.load32x2_u-as-br-value" (func 11))
  (export "v128.load8x8_s-extract_lane_s-operand" (func 12))
  (export "v128.load8x8_u-extract_lane_s-operand" (func 13))
  (export "v128.load16x4_s-extract_lane_s-operand" (func 14))
  (export "v128.load16x4_u-extract_lane_s-operand" (func 15))
  (export "v128.load32x2_s-extract_lane_s-operand" (func 16))
  (export "v128.load32x2_u-extract_lane_s-operand" (func 17))
  (data (;0;) (i32.const 0) "\00\01\02\03\04\05\06\07\08\09\0a\0b\0c\0d\0e\0f\80\81\82\83\84\85\86\87\88\89")
)