(module
  (type (;0;) (func (result i32)))
  (type (;1;) (func))
  (type (;2;) (func (param i32) (result i32)))
  (import "a" "ef0" (func (;0;) (type 0)))
  (import "a" "ef1" (func (;1;) (type 0)))
  (import "a" "ef2" (func (;2;) (type 0)))
  (import "a" "ef3" (func (;3;) (type 0)))
  (import "a" "ef4" (func (;4;) (type 0)))
  (func (;5;) (type 0) (result i32)
    i32.const 5
  )
  (func (;6;) (type 0) (result i32)
    i32.const 6
  )
  (func (;7;) (type 0) (result i32)
    i32.const 7
  )
  (func (;8;) (type 0) (result i32)
    i32.const 8
  )
  (func (;9;) (type 0) (result i32)
    i32.const 9
  )
  (func (;10;) (type 1)
    i32.const 10
    i32.const 12
    i32.const 7
    table.copy
  )
  (func (;11;) (type 2) (param i32) (result i32)
    local.get 0
    call_indirect (type 0)
  )
  (func (;12;) (type 2) (param i32) (result i32)
    local.get 0
    call_indirect $t1 (type 0)
  )
  (table $t0 (;0;) 30 30 funcref)
  (table $t1 (;1;) 30 30 funcref)
  (export "test" (func 10))
  (export "check_t0" (func 11))
  (export "check_t1" (func 12))
  (elem (;0;) (i32.const 2) func 3 1 4 1)
  (elem (;1;) funcref (ref.func 2) (ref.func 7) (ref.func 1) (ref.func 8))
  (elem (;2;) (i32.const 12) func 7 5 2 3 6)
  (elem (;3;) funcref (ref.func 5) (ref.func 9) (ref.func 2) (ref.func 7) (ref.func 6))
  (elem (;4;) (table $t1) (i32.const 3) func 1 3 1 4)
  (elem (;5;) (table $t1) (i32.const 11) func 6 3 2 5 7)
)