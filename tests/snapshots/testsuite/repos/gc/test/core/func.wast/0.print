(module
  (type $sig (;0;) (func))
  (type $sig-1 (;1;) (func))
  (type $sig-2 (;2;) (func (result i32)))
  (type $sig-3 (;3;) (func (param i32)))
  (type $sig-4 (;4;) (func (param i32 f64 i32) (result i32)))
  (type $forward (;5;) (func))
  (type (;6;) (func (param i32 f64 i64)))
  (type (;7;) (func (param i32 f64)))
  (type (;8;) (func (param i32 f32 i64 i32 f64)))
  (type (;9;) (func (result i32 f64 f32)))
  (type (;10;) (func (result i32 f64)))
  (type (;11;) (func (result i32 f32 i64 i32 f64)))
  (type (;12;) (func (param i32 f32 i64 i32) (result i32 i64 i32)))
  (type (;13;) (func (result i64)))
  (type (;14;) (func (result f32)))
  (type (;15;) (func (result f64)))
  (type (;16;) (func (param i32 i32) (result i32)))
  (type (;17;) (func (param i64 i64) (result i64)))
  (type (;18;) (func (param f32 f32) (result f32)))
  (type (;19;) (func (param f64 f64) (result f64)))
  (type (;20;) (func (param f32 i32 i64 i32 f64 i32) (result f64)))
  (type (;21;) (func (result i32 i32 i32)))
  (type (;22;) (func (result i32 i64)))
  (type (;23;) (func (param i32) (result i32)))
  (type (;24;) (func (param i32) (result i32 i64)))
  (type (;25;) (func (param i32) (result f32 i64)))
  (type (;26;) (func (param i32) (result i32 i32)))
  (type (;27;) (func (result i32 i32)))
  (type (;28;) (func (param i32 i64 f32 f32 i32 f64 f32 i32 i32 i32 f32 f64 f64 f64 i32 i32 f32) (result f64 f32 i32 i32 i32 i64 f32 i32 i32 f32 f64 f64 i32 f32 i32 f64)))
  (func $dummy (;0;) (type $sig))
  (func (;1;) (type $sig))
  (func (;2;) (type $sig))
  (func $f (;3;) (type $sig))
  (func $h (;4;) (type $sig))
  (func (;5;) (type $sig))
  (func (;6;) (type $sig))
  (func (;7;) (type $sig)
    (local i32)
  )
  (func (;8;) (type $sig)
    (local $x i32)
  )
  (func (;9;) (type $sig)
    (local i32 f64 i64)
  )
  (func (;10;) (type $sig)
    (local i32 f64)
  )
  (func (;11;) (type $sig)
    (local i32 f32) (local $x i64) (local i32 f64)
  )
  (func (;12;) (type $sig))
  (func (;13;) (type $sig))
  (func (;14;) (type $sig-3) (param i32))
  (func (;15;) (type $sig-3) (param $x i32))
  (func (;16;) (type 6) (param i32 f64 i64))
  (func (;17;) (type 7) (param i32 f64))
  (func (;18;) (type 8) (param i32 f32) (param $x i64) (param i32 f64))
  (func (;19;) (type $sig))
  (func (;20;) (type $sig))
  (func (;21;) (type $sig-2) (result i32)
    unreachable
  )
  (func (;22;) (type 9) (result i32 f64 f32)
    unreachable
  )
  (func (;23;) (type 10) (result i32 f64)
    unreachable
  )
  (func (;24;) (type 11) (result i32 f32 i64 i32 f64)
    unreachable
  )
  (func (;25;) (type $sig-1))
  (func (;26;) (type $sig-2) (result i32)
    i32.const 0
  )
  (func (;27;) (type $sig-3) (param i32))
  (func (;28;) (type $sig-4) (param i32 f64 i32) (result i32)
    i32.const 0
  )
  (func (;29;) (type $sig-2) (result i32)
    i32.const 0
  )
  (func (;30;) (type $sig-3) (param i32))
  (func (;31;) (type $sig-4) (param i32 f64 i32) (result i32)
    i32.const 0
  )
  (func (;32;) (type $sig))
  (func (;33;) (type $forward))
  (func $complex (;34;) (type 12) (param i32 f32) (param $x i64) (param i32) (result i32 i64 i32)
    (local f32) (local $y i32) (local i64 i32 f64 i32)
    unreachable
    unreachable
  )
  (func $complex-sig (;35;) (type $sig)
    (local f32) (local $y i32) (local i64 i32 f64 i32)
    unreachable
    unreachable
  )
  (func (;36;) (type $sig-2) (result i32)
    (local i32 i32)
    local.get 0
  )
  (func (;37;) (type 13) (result i64)
    (local i64 i64)
    local.get 0
  )
  (func (;38;) (type 14) (result f32)
    (local f32 f32)
    local.get 0
  )
  (func (;39;) (type 15) (result f64)
    (local f64 f64)
    local.get 0
  )
  (func (;40;) (type $sig-2) (result i32)
    (local i32 i32)
    local.get 1
  )
  (func (;41;) (type 13) (result i64)
    (local i64 i64)
    local.get 1
  )
  (func (;42;) (type 14) (result f32)
    (local f32 f32)
    local.get 1
  )
  (func (;43;) (type 15) (result f64)
    (local f64 f64)
    local.get 1
  )
  (func (;44;) (type 15) (result f64)
    (local f32) (local $x i32) (local i64 i32 f64 i32)
    local.get 0
    f32.neg
    drop
    local.get $x
    i32.eqz
    drop
    local.get 2
    i64.eqz
    drop
    local.get 3
    i32.eqz
    drop
    local.get 4
    f64.neg
    drop
    local.get 5
    i32.eqz
    drop
    local.get 4
  )
  (func (;45;) (type 16) (param i32 i32) (result i32)
    local.get 0
  )
  (func (;46;) (type 17) (param i64 i64) (result i64)
    local.get 0
  )
  (func (;47;) (type 18) (param f32 f32) (result f32)
    local.get 0
  )
  (func (;48;) (type 19) (param f64 f64) (result f64)
    local.get 0
  )
  (func (;49;) (type 16) (param i32 i32) (result i32)
    local.get 1
  )
  (func (;50;) (type 17) (param i64 i64) (result i64)
    local.get 1
  )
  (func (;51;) (type 18) (param f32 f32) (result f32)
    local.get 1
  )
  (func (;52;) (type 19) (param f64 f64) (result f64)
    local.get 1
  )
  (func (;53;) (type 20) (param f32 i32) (param $x i64) (param i32 f64 i32) (result f64)
    local.get 0
    f32.neg
    drop
    local.get 1
    i32.eqz
    drop
    local.get $x
    i64.eqz
    drop
    local.get 3
    i32.eqz
    drop
    local.get 4
    f64.neg
    drop
    local.get 5
    i32.eqz
    drop
    local.get 4
  )
  (func (;54;) (type $sig))
  (func (;55;) (type $sig)
    call $dummy
  )
  (func (;56;) (type $sig-2) (result i32)
    i32.const 77
  )
  (func (;57;) (type 13) (result i64)
    i64.const 7777
  )
  (func (;58;) (type 14) (result f32)
    f32.const 0x1.36ccccp+6 (;=77.7;)
  )
  (func (;59;) (type 15) (result f64)
    f64.const 0x1.37147ae147ae1p+6 (;=77.77;)
  )
  (func (;60;) (type 10) (result i32 f64)
    i32.const 77
    f64.const 0x1.cp+2 (;=7;)
  )
  (func (;61;) (type 21) (result i32 i32 i32)
    i32.const 1
    i32.const 2
    i32.const 3
  )
  (func (;62;) (type $sig)
    block ;; label = @1
      call $dummy
      call $dummy
    end
  )
  (func (;63;) (type $sig-2) (result i32)
    block (result i32) ;; label = @1
      call $dummy
      i32.const 77
    end
  )
  (func (;64;) (type 22) (result i32 i64)
    block (type 22) (result i32 i64) ;; label = @1
      call $dummy
      i32.const 1
      i64.const 2
    end
  )
  (func (;65;) (type $sig)
    return
  )
  (func (;66;) (type $sig-2) (result i32)
    i32.const 78
    return
  )
  (func (;67;) (type 13) (result i64)
    i64.const 7878
    return
  )
  (func (;68;) (type 14) (result f32)
    f32.const 0x1.3accccp+6 (;=78.7;)
    return
  )
  (func (;69;) (type 15) (result f64)
    f64.const 0x1.3b1eb851eb852p+6 (;=78.78;)
    return
  )
  (func (;70;) (type 10) (result i32 f64)
    i32.const 78
    f64.const 0x1.3b1eb851eb852p+6 (;=78.78;)
    return
  )
  (func (;71;) (type 21) (result i32 i32 i32)
    i32.const 1
    i32.const 2
    i32.const 3
    return
  )
  (func (;72;) (type $sig-2) (result i32)
    block (result i32) ;; label = @1
      call $dummy
      i32.const 77
    end
    return
  )
  (func (;73;) (type 22) (result i32 i64)
    block (type 22) (result i32 i64) ;; label = @1
      call $dummy
      i32.const 1
      i64.const 2
    end
    return
  )
  (func (;74;) (type $sig)
    br 0 (;@0;)
  )
  (func (;75;) (type $sig-2) (result i32)
    i32.const 79
    br 0 (;@0;)
  )
  (func (;76;) (type 13) (result i64)
    i64.const 7979
    br 0 (;@0;)
  )
  (func (;77;) (type 14) (result f32)
    f32.const 0x1.3f999ap+6 (;=79.9;)
    br 0 (;@0;)
  )
  (func (;78;) (type 15) (result f64)
    f64.const 0x1.3f28f5c28f5c3p+6 (;=79.79;)
    br 0 (;@0;)
  )
  (func (;79;) (type 10) (result i32 f64)
    i32.const 79
    f64.const 0x1.3f28f5c28f5c3p+6 (;=79.79;)
    br 0 (;@0;)
  )
  (func (;80;) (type 21) (result i32 i32 i32)
    i32.const 1
    i32.const 2
    i32.const 3
    br 0 (;@0;)
  )
  (func (;81;) (type $sig-2) (result i32)
    block (result i32) ;; label = @1
      call $dummy
      i32.const 77
    end
    br 0 (;@0;)
  )
  (func (;82;) (type 22) (result i32 i64)
    block (type 22) (result i32 i64) ;; label = @1
      call $dummy
      i32.const 1
      i64.const 2
    end
    br 0 (;@0;)
  )
  (func (;83;) (type $sig-3) (param i32)
    local.get 0
    br_if 0 (;@0;)
  )
  (func (;84;) (type 23) (param i32) (result i32)
    i32.const 50
    local.get 0
    br_if 0 (;@0;)
    drop
    i32.const 51
  )
  (func (;85;) (type 24) (param i32) (result i32 i64)
    i32.const 50
    i64.const 51
    local.get 0
    br_if 0 (;@0;)
    drop
    drop
    i32.const 51
    i64.const 52
  )
  (func (;86;) (type $sig-3) (param i32)
    local.get 0
    br_table 0 (;@0;) 0 (;@0;) 0 (;@0;)
  )
  (func (;87;) (type 23) (param i32) (result i32)
    i32.const 50
    local.get 0
    br_table 0 (;@0;) 0 (;@0;)
    i32.const 51
  )
  (func (;88;) (type 25) (param i32) (result f32 i64)
    f32.const 0x1.9p+5 (;=50;)
    i64.const 51
    local.get 0
    br_table 0 (;@0;) 0 (;@0;)
    f32.const 0x1.98p+5 (;=51;)
    i64.const 52
  )
  (func (;89;) (type $sig-3) (param i32)
    block ;; label = @1
      local.get 0
      br_table 0 (;@1;) 1 (;@0;) 0 (;@1;)
    end
  )
  (func (;90;) (type 23) (param i32) (result i32)
    block (result i32) ;; label = @1
      i32.const 50
      local.get 0
      br_table 0 (;@1;) 1 (;@0;) 0 (;@1;)
      i32.const 51
    end
    i32.const 2
    i32.add
  )
  (func (;91;) (type 26) (param i32) (result i32 i32)
    block (type 27) (result i32 i32) ;; label = @1
      i32.const 50
      i32.const 51
      local.get 0
      br_table 0 (;@1;) 1 (;@0;) 0 (;@1;)
      i32.const 51
      i32.const -3
    end
    i32.add
    i32.const 52
  )
  (func (;92;) (type 28) (param i32 i64 f32 f32 i32 f64 f32 i32 i32 i32 f32 f64 f64 f64 i32 i32 f32) (result f64 f32 i32 i32 i32 i64 f32 i32 i32 f32 f64 f64 i32 f32 i32 f64)
    local.get 5
    local.get 2
    local.get 0
    local.get 8
    local.get 7
    local.get 1
    local.get 3
    local.get 9
    local.get 4
    local.get 6
    local.get 13
    local.get 11
    local.get 15
    local.get 16
    local.get 14
    local.get 12
  )
  (func (;93;) (type $sig-2) (result i32)
    (local i32)
    local.get 0
  )
  (func (;94;) (type 13) (result i64)
    (local i64)
    local.get 0
  )
  (func (;95;) (type 14) (result f32)
    (local f32)
    local.get 0
  )
  (func (;96;) (type 15) (result f64)
    (local f64)
    local.get 0
  )
  (export "f" (func 2))
  (export "g" (func $h))
  (export "type-use-1" (func 25))
  (export "type-use-2" (func 26))
  (export "type-use-3" (func 27))
  (export "type-use-4" (func 28))
  (export "type-use-5" (func 29))
  (export "type-use-6" (func 30))
  (export "type-use-7" (func 31))
  (export "local-first-i32" (func 36))
  (export "local-first-i64" (func 37))
  (export "local-first-f32" (func 38))
  (export "local-first-f64" (func 39))
  (export "local-second-i32" (func 40))
  (export "local-second-i64" (func 41))
  (export "local-second-f32" (func 42))
  (export "local-second-f64" (func 43))
  (export "local-mixed" (func 44))
  (export "param-first-i32" (func 45))
  (export "param-first-i64" (func 46))
  (export "param-first-f32" (func 47))
  (export "param-first-f64" (func 48))
  (export "param-second-i32" (func 49))
  (export "param-second-i64" (func 50))
  (export "param-second-f32" (func 51))
  (export "param-second-f64" (func 52))
  (export "param-mixed" (func 53))
  (export "empty" (func 54))
  (export "value-void" (func 55))
  (export "value-i32" (func 56))
  (export "value-i64" (func 57))
  (export "value-f32" (func 58))
  (export "value-f64" (func 59))
  (export "value-i32-f64" (func 60))
  (export "value-i32-i32-i32" (func 61))
  (export "value-block-void" (func 62))
  (export "value-block-i32" (func 63))
  (export "value-block-i32-i64" (func 64))
  (export "return-empty" (func 65))
  (export "return-i32" (func 66))
  (export "return-i64" (func 67))
  (export "return-f32" (func 68))
  (export "return-f64" (func 69))
  (export "return-i32-f64" (func 70))
  (export "return-i32-i32-i32" (func 71))
  (export "return-block-i32" (func 72))
  (export "return-block-i32-i64" (func 73))
  (export "break-empty" (func 74))
  (export "break-i32" (func 75))
  (export "break-i64" (func 76))
  (export "break-f32" (func 77))
  (export "break-f64" (func 78))
  (export "break-i32-f64" (func 79))
  (export "break-i32-i32-i32" (func 80))
  (export "break-block-i32" (func 81))
  (export "break-block-i32-i64" (func 82))
  (export "break-br_if-empty" (func 83))
  (export "break-br_if-num" (func 84))
  (export "break-br_if-num-num" (func 85))
  (export "break-br_table-empty" (func 86))
  (export "break-br_table-num" (func 87))
  (export "break-br_table-num-num" (func 88))
  (export "break-br_table-nested-empty" (func 89))
  (export "break-br_table-nested-num" (func 90))
  (export "break-br_table-nested-num-num" (func 91))
  (export "large-sig" (func 92))
  (export "init-local-i32" (func 93))
  (export "init-local-i64" (func 94))
  (export "init-local-f32" (func 95))
  (export "init-local-f64" (func 96))
)