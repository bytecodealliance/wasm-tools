(module
  (type (;0;) (func (param v128 v128 v128) (result v128)))
  (type (;1;) (func (param v128 v128) (result v128)))
  (func (;0;) (type 0) (param v128 v128 v128) (result v128)
    local.get 0
    local.get 1
    f64x2.sub
    local.get 2
    f64x2.add
  )
  (func (;1;) (type 0) (param v128 v128 v128) (result v128)
    local.get 0
    local.get 1
    f64x2.add
    local.get 2
    f64x2.div
  )
  (func (;2;) (type 0) (param v128 v128 v128) (result v128)
    local.get 0
    local.get 1
    f64x2.mul
    local.get 2
    f64x2.div
  )
  (func (;3;) (type 0) (param v128 v128 v128) (result v128)
    local.get 0
    local.get 1
    f64x2.sub
    local.get 2
    f64x2.div
  )
  (func (;4;) (type 0) (param v128 v128 v128) (result v128)
    local.get 0
    local.get 1
    f64x2.add
    local.get 2
    f64x2.mul
  )
  (func (;5;) (type 0) (param v128 v128 v128) (result v128)
    local.get 0
    local.get 1
    f64x2.div
    local.get 2
    f64x2.mul
  )
  (func (;6;) (type 0) (param v128 v128 v128) (result v128)
    local.get 0
    local.get 1
    f64x2.sub
    local.get 2
    f64x2.mul
  )
  (func (;7;) (type 0) (param v128 v128 v128) (result v128)
    local.get 0
    local.get 1
    f64x2.add
    local.get 2
    f64x2.sub
  )
  (func (;8;) (type 1) (param v128 v128) (result v128)
    local.get 0
    f64x2.neg
    local.get 1
    f64x2.add
  )
  (func (;9;) (type 1) (param v128 v128) (result v128)
    local.get 0
    f64x2.sqrt
    local.get 1
    f64x2.add
  )
  (func (;10;) (type 1) (param v128 v128) (result v128)
    local.get 0
    f64x2.neg
    local.get 1
    f64x2.div
  )
  (func (;11;) (type 1) (param v128 v128) (result v128)
    local.get 0
    f64x2.sqrt
    local.get 1
    f64x2.div
  )
  (func (;12;) (type 1) (param v128 v128) (result v128)
    local.get 0
    f64x2.neg
    local.get 1
    f64x2.mul
  )
  (func (;13;) (type 1) (param v128 v128) (result v128)
    local.get 0
    f64x2.sqrt
    local.get 1
    f64x2.mul
  )
  (func (;14;) (type 1) (param v128 v128) (result v128)
    local.get 0
    f64x2.neg
    local.get 1
    f64x2.sub
  )
  (func (;15;) (type 1) (param v128 v128) (result v128)
    local.get 0
    f64x2.sqrt
    local.get 1
    f64x2.sub
  )
  (export "add-sub" (func 0))
  (export "div-add" (func 1))
  (export "div-mul" (func 2))
  (export "div-sub" (func 3))
  (export "mul-add" (func 4))
  (export "mul-div" (func 5))
  (export "mul-sub" (func 6))
  (export "sub-add" (func 7))
  (export "add-neg" (func 8))
  (export "add-sqrt" (func 9))
  (export "div-neg" (func 10))
  (export "div-sqrt" (func 11))
  (export "mul-neg" (func 12))
  (export "mul-sqrt" (func 13))
  (export "sub-neg" (func 14))
  (export "sub-sqrt" (func 15))
)