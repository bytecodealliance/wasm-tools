(module
  (type (;0;) (func (param i32) (result f64)))
  (func (;0;) (type 0) (param i32) (result f64)
    (local f64 f64 f64 f64)
    f64.const 0x0p+0 (;=0;)
    local.set 1
    block ;; label = @1
      local.get 0
      i32.const 1
      i32.lt_s
      br_if 0 (;@1;)
      f64.const 0x1p+0 (;=1;)
      local.set 2
      f64.const 0x0p+0 (;=0;)
      local.set 3
      loop ;; label = @2
        local.get 1
        local.get 2
        f64.const 0x1p+3 (;=8;)
        local.get 3
        f64.const 0x1p+3 (;=8;)
        f64.mul
        local.tee 4
        f64.const 0x1p+0 (;=1;)
        f64.add
        f64.div
        f64.const 0x1p+2 (;=4;)
        local.get 4
        f64.const 0x1p+2 (;=4;)
        f64.add
        f64.div
        f64.sub
        f64.const 0x1p+1 (;=2;)
        local.get 4
        f64.const 0x1.4p+2 (;=5;)
        f64.add
        f64.div
        f64.sub
        f64.const 0x1p+1 (;=2;)
        local.get 4
        f64.const 0x1.8p+2 (;=6;)
        f64.add
        f64.div
        f64.sub
        f64.mul
        f64.add
        local.set 1
        local.get 3
        f64.const 0x1p+0 (;=1;)
        f64.add
        local.set 3
        local.get 2
        f64.const 0x1p-4 (;=0.0625;)
        f64.mul
        local.set 2
        local.get 0
        i32.const -1
        i32.add
        local.tee 0
        br_if 0 (;@2;)
      end
    end
    local.get 1
  )
  (export "tau" (func 0))
)