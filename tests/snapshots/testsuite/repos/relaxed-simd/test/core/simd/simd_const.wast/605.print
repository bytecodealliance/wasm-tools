(module
  (type (;0;) (func (result v128)))
  (func (;0;) (type 0) (result v128)
    v128.const i32x4 0x0badd00d 0x0badd00d 0x0badd00d 0x0badd00d
    return
  )
  (func (;1;) (type 0) (result v128)
    v128.const i32x4 0x7fffffff 0x7fffffff 0x7fffffff 0x7fffffff
    return
  )
  (func (;2;) (type 0) (result v128)
    v128.const i32x4 0x80000001 0x80000001 0x80000001 0x80000001
    return
  )
  (func (;3;) (type 0) (result v128)
    v128.const i32x4 0x80000000 0x80000000 0x80000000 0x80000000
    v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
    i32x4.add
    return
  )
  (func (;4;) (type 0) (result v128)
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000
    return
  )
  (func (;5;) (type 0) (result v128)
    v128.const i32x4 0x0000000a 0x0000000a 0x0000000a 0x0000000a
    return
  )
  (func (;6;) (type 0) (result v128)
    v128.const i32x4 0x0000002a 0x0000002a 0x0000002a 0x0000002a
    return
  )
  (func (;7;) (type 0) (result v128)
    v128.const i32x4 0x000f4240 0x000f4240 0x000f4240 0x000f4240
  )
  (func (;8;) (type 0) (result v128)
    v128.const i32x4 0x000003e8 0x000003e8 0x000003e8 0x000003e8
  )
  (func (;9;) (type 0) (result v128)
    v128.const i32x4 0x0a0f0099 0x0a0f0099 0x0a0f0099 0x0a0f0099
  )
  (func (;10;) (type 0) (result v128)
    v128.const i32x4 0x0001aa0f 0x0001aa0f 0x0001aa0f 0x0001aa0f
  )
  (func (;11;) (type 0) (result v128)
    v128.const i32x4 0x0badd00d 0x0badd00d 0x0badd00d 0x0badd00d
    return
  )
  (func (;12;) (type 0) (result v128)
    v128.const i32x4 0xffffffff 0x7fffffff 0xffffffff 0x7fffffff
    return
  )
  (func (;13;) (type 0) (result v128)
    v128.const i32x4 0x00000001 0x80000000 0x00000001 0x80000000
    return
  )
  (func (;14;) (type 0) (result v128)
    v128.const i32x4 0x00000000 0x80000000 0x00000000 0x80000000
    v128.const i32x4 0x00000001 0x00000000 0x00000001 0x00000000
    i64x2.add
    return
  )
  (func (;15;) (type 0) (result v128)
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000
    return
  )
  (func (;16;) (type 0) (result v128)
    v128.const i32x4 0x0000271a 0x00000000 0x0000271a 0x00000000
    return
  )
  (func (;17;) (type 0) (result v128)
    v128.const i32x4 0x0000002a 0x00000000 0x0000002a 0x00000000
    return
  )
  (func (;18;) (type 0) (result v128)
    v128.const i32x4 0x4e72a000 0x00000918 0x4e72a000 0x00000918
  )
  (func (;19;) (type 0) (result v128)
    v128.const i32x4 0x00989680 0x00000000 0x00989680 0x00000000
  )
  (func (;20;) (type 0) (result v128)
    v128.const i32x4 0x0a0f0099 0x0a0f0099 0x0a0f0099 0x0a0f0099
  )
  (func (;21;) (type 0) (result v128)
    v128.const i32x4 0xa0f1aa0f 0x0000001a 0xa0f1aa0f 0x0000001a
  )
  (export "i32x4.test" (func 0))
  (export "i32x4.smax" (func 1))
  (export "i32x4.neg_smax" (func 2))
  (export "i32x4.inc_smin" (func 3))
  (export "i32x4.neg_zero" (func 4))
  (export "i32x4.not_octal" (func 5))
  (export "i32x4.plus_sign" (func 6))
  (export "i32x4-dec-sep1" (func 7))
  (export "i32x4-dec-sep2" (func 8))
  (export "i32x4-hex-sep1" (func 9))
  (export "i32x4-hex-sep2" (func 10))
  (export "i64x2.test" (func 11))
  (export "i64x2.smax" (func 12))
  (export "i64x2.neg_smax" (func 13))
  (export "i64x2.inc_smin" (func 14))
  (export "i64x2.neg_zero" (func 15))
  (export "i64x2.not_octal" (func 16))
  (export "i64x2.plus_sign" (func 17))
  (export "i64x2-dec-sep1" (func 18))
  (export "i64x2-dec-sep2" (func 19))
  (export "i64x2-hex-sep1" (func 20))
  (export "i64x2-hex-sep2" (func 21))
)