(module
  (type (;0;) (func (param f32) (result f32)))
  (type (;1;) (func (param f64) (result f64)))
  (func (;0;) (type 0) (param $x f32) (result f32)
    local.get $x
    f32.neg
    local.get $x
    local.get $x
    f32.const 0x0p+0 (;=0;)
    f32.lt
    select
  )
  (func (;1;) (type 0) (param $x f32) (result f32)
    local.get $x
    f32.neg
    local.get $x
    local.get $x
    f32.const -0x0p+0 (;=-0;)
    f32.le
    select
  )
  (func (;2;) (type 0) (param $x f32) (result f32)
    local.get $x
    local.get $x
    f32.neg
    local.get $x
    f32.const -0x0p+0 (;=-0;)
    f32.gt
    select
  )
  (func (;3;) (type 0) (param $x f32) (result f32)
    local.get $x
    local.get $x
    f32.neg
    local.get $x
    f32.const 0x0p+0 (;=0;)
    f32.ge
    select
  )
  (func (;4;) (type 1) (param $x f64) (result f64)
    local.get $x
    f64.neg
    local.get $x
    local.get $x
    f64.const 0x0p+0 (;=0;)
    f64.lt
    select
  )
  (func (;5;) (type 1) (param $x f64) (result f64)
    local.get $x
    f64.neg
    local.get $x
    local.get $x
    f64.const -0x0p+0 (;=-0;)
    f64.le
    select
  )
  (func (;6;) (type 1) (param $x f64) (result f64)
    local.get $x
    local.get $x
    f64.neg
    local.get $x
    f64.const -0x0p+0 (;=-0;)
    f64.gt
    select
  )
  (func (;7;) (type 1) (param $x f64) (result f64)
    local.get $x
    local.get $x
    f64.neg
    local.get $x
    f64.const 0x0p+0 (;=0;)
    f64.ge
    select
  )
  (export "f32.no_fold_lt_select_to_abs" (func 0))
  (export "f32.no_fold_le_select_to_abs" (func 1))
  (export "f32.no_fold_gt_select_to_abs" (func 2))
  (export "f32.no_fold_ge_select_to_abs" (func 3))
  (export "f64.no_fold_lt_select_to_abs" (func 4))
  (export "f64.no_fold_le_select_to_abs" (func 5))
  (export "f64.no_fold_gt_select_to_abs" (func 6))
  (export "f64.no_fold_ge_select_to_abs" (func 7))
)