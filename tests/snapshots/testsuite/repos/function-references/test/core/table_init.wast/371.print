(module
  (type (;0;) (func (result i32)))
  (type (;1;) (func (param i32) (result i32)))
  (type (;2;) (func (param i32 i32)))
  (func $f0 (;0;) (type 0) (result i32)
    i32.const 0
  )
  (func $f1 (;1;) (type 0) (result i32)
    i32.const 1
  )
  (func $f2 (;2;) (type 0) (result i32)
    i32.const 2
  )
  (func $f3 (;3;) (type 0) (result i32)
    i32.const 3
  )
  (func $f4 (;4;) (type 0) (result i32)
    i32.const 4
  )
  (func $f5 (;5;) (type 0) (result i32)
    i32.const 5
  )
  (func $f6 (;6;) (type 0) (result i32)
    i32.const 6
  )
  (func $f7 (;7;) (type 0) (result i32)
    i32.const 7
  )
  (func $f8 (;8;) (type 0) (result i32)
    i32.const 8
  )
  (func $f9 (;9;) (type 0) (result i32)
    i32.const 9
  )
  (func $f10 (;10;) (type 0) (result i32)
    i32.const 10
  )
  (func $f11 (;11;) (type 0) (result i32)
    i32.const 11
  )
  (func $f12 (;12;) (type 0) (result i32)
    i32.const 12
  )
  (func $f13 (;13;) (type 0) (result i32)
    i32.const 13
  )
  (func $f14 (;14;) (type 0) (result i32)
    i32.const 14
  )
  (func $f15 (;15;) (type 0) (result i32)
    i32.const 15
  )
  (func (;16;) (type 1) (param $n i32) (result i32)
    local.get $n
    call_indirect (type 0)
  )
  (func (;17;) (type 2) (param $offs i32) (param $len i32)
    local.get $offs
    i32.const 0
    local.get $len
    table.init 0
  )
  (table (;0;) 160 320 funcref)
  (export "f0" (func $f0))
  (export "f1" (func $f1))
  (export "f2" (func $f2))
  (export "f3" (func $f3))
  (export "f4" (func $f4))
  (export "f5" (func $f5))
  (export "f6" (func $f6))
  (export "f7" (func $f7))
  (export "f8" (func $f8))
  (export "f9" (func $f9))
  (export "f10" (func $f10))
  (export "f11" (func $f11))
  (export "f12" (func $f12))
  (export "f13" (func $f13))
  (export "f14" (func $f14))
  (export "f15" (func $f15))
  (export "test" (func 16))
  (export "run" (func 17))
  (elem (;0;) funcref (ref.func $f0) (ref.func $f1) (ref.func $f2) (ref.func $f3) (ref.func $f4) (ref.func $f5) (ref.func $f6) (ref.func $f7) (ref.func $f8) (ref.func $f9) (ref.func $f10) (ref.func $f11) (ref.func $f12) (ref.func $f13) (ref.func $f14) (ref.func $f15))
)