(module
  (type (;0;) (func (param v128) (result v128)))
  (type (;1;) (func (param v128 i32 v128 i32) (result v128)))
  (type (;2;) (func (param v128 i64 v128 i64) (result v128)))
  (type (;3;) (func (param v128 v128 v128 v128) (result v128)))
  (type (;4;) (func (param v128 i32) (result i32)))
  (type (;5;) (func (param v128 i64) (result i32)))
  (type (;6;) (func (param v128 v128) (result i32)))
  (func (;0;) (type 0) (param v128) (result v128)
    local.get 0
    i8x16.extract_lane_s 0
    i8x16.splat
  )
  (func (;1;) (type 0) (param v128) (result v128)
    local.get 0
    i16x8.extract_lane_u 0
    i16x8.splat
  )
  (func (;2;) (type 0) (param v128) (result v128)
    local.get 0
    i32x4.extract_lane 0
    i32x4.splat
  )
  (func (;3;) (type 0) (param v128) (result v128)
    local.get 0
    f32x4.extract_lane 0
    f32x4.splat
  )
  (func (;4;) (type 0) (param v128) (result v128)
    local.get 0
    i64x2.extract_lane 0
    i64x2.splat
  )
  (func (;5;) (type 0) (param v128) (result v128)
    local.get 0
    f64x2.extract_lane 0
    f64x2.splat
  )
  (func (;6;) (type 1) (param v128 i32 v128 i32) (result v128)
    local.get 0
    local.get 1
    i8x16.replace_lane 0
    local.get 2
    local.get 3
    i8x16.replace_lane 15
    i8x16.add
  )
  (func (;7;) (type 1) (param v128 i32 v128 i32) (result v128)
    local.get 0
    local.get 1
    i16x8.replace_lane 0
    local.get 2
    local.get 3
    i16x8.replace_lane 7
    i16x8.add
  )
  (func (;8;) (type 1) (param v128 i32 v128 i32) (result v128)
    local.get 0
    local.get 1
    i32x4.replace_lane 0
    local.get 2
    local.get 3
    i32x4.replace_lane 3
    i32x4.add
  )
  (func (;9;) (type 2) (param v128 i64 v128 i64) (result v128)
    local.get 0
    local.get 1
    i64x2.replace_lane 0
    local.get 2
    local.get 3
    i64x2.replace_lane 1
    i64x2.add
  )
  (func (;10;) (type 3) (param v128 v128 v128 v128) (result v128)
    local.get 0
    local.get 1
    i8x16.swizzle
    local.get 2
    local.get 3
    i8x16.swizzle
    i8x16.add
  )
  (func (;11;) (type 3) (param v128 v128 v128 v128) (result v128)
    local.get 0
    local.get 1
    i8x16.shuffle 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    local.get 2
    local.get 3
    i8x16.shuffle 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
    i8x16.sub
  )
  (func (;12;) (type 4) (param v128 i32) (result i32)
    local.get 0
    local.get 1
    i8x16.replace_lane 0
    v128.any_true
  )
  (func (;13;) (type 4) (param v128 i32) (result i32)
    local.get 0
    local.get 1
    i16x8.replace_lane 0
    v128.any_true
  )
  (func (;14;) (type 4) (param v128 i32) (result i32)
    local.get 0
    local.get 1
    i32x4.replace_lane 0
    v128.any_true
  )
  (func (;15;) (type 5) (param v128 i64) (result i32)
    local.get 0
    local.get 1
    i64x2.replace_lane 0
    v128.any_true
  )
  (func (;16;) (type 6) (param v128 v128) (result i32)
    local.get 0
    local.get 1
    i8x16.swizzle
    i8x16.all_true
  )
  (func (;17;) (type 6) (param v128 v128) (result i32)
    local.get 0
    local.get 1
    i8x16.shuffle 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    v128.any_true
  )
  (export "as-i8x16_splat-operand" (func 0))
  (export "as-i16x8_splat-operand" (func 1))
  (export "as-i32x4_splat-operand" (func 2))
  (export "as-f32x4_splat-operand" (func 3))
  (export "as-i64x2_splat-operand" (func 4))
  (export "as-f64x2_splat-operand" (func 5))
  (export "as-i8x16_add-operands" (func 6))
  (export "as-i16x8_add-operands" (func 7))
  (export "as-i32x4_add-operands" (func 8))
  (export "as-i64x2_add-operands" (func 9))
  (export "swizzle-as-i8x16_add-operands" (func 10))
  (export "shuffle-as-i8x16_sub-operands" (func 11))
  (export "as-i8x16_any_true-operand" (func 12))
  (export "as-i16x8_any_true-operand" (func 13))
  (export "as-i32x4_any_true-operand1" (func 14))
  (export "as-i32x4_any_true-operand2" (func 15))
  (export "swizzle-as-i8x16_all_true-operands" (func 16))
  (export "shuffle-as-i8x16_any_true-operands" (func 17))
)