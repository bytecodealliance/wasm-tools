(module
  (type (;0;) (func (param i32 i32) (result i32)))
  (type (;1;) (func (param i32) (result i32)))
  (type (;2;) (func (param i64 i64) (result i64)))
  (type (;3;) (func (param i64) (result i64)))
  (func (;0;) (type 0) (param $x i32) (param $y i32) (result i32)
    local.get $x
    f32.reinterpret_i32
    local.get $y
    f32.reinterpret_i32
    f32.div
    i32.reinterpret_f32
    i32.const 2143289344
    i32.and
  )
  (func (;1;) (type 0) (param $x i32) (param $y i32) (result i32)
    local.get $x
    f32.reinterpret_i32
    local.get $y
    f32.reinterpret_i32
    f32.div
    i32.reinterpret_f32
    i32.const 2147483647
    i32.and
  )
  (func (;2;) (type 1) (param $x i32) (result i32)
    local.get $x
    f32.reinterpret_i32
    f32.neg
    i32.reinterpret_f32
  )
  (func (;3;) (type 2) (param $x i64) (param $y i64) (result i64)
    local.get $x
    f64.reinterpret_i64
    local.get $y
    f64.reinterpret_i64
    f64.div
    i64.reinterpret_f64
    i64.const 9221120237041090560
    i64.and
  )
  (func (;4;) (type 2) (param $x i64) (param $y i64) (result i64)
    local.get $x
    f64.reinterpret_i64
    local.get $y
    f64.reinterpret_i64
    f64.div
    i64.reinterpret_f64
    i64.const 9223372036854775807
    i64.and
  )
  (func (;5;) (type 3) (param $x i64) (result i64)
    local.get $x
    f64.reinterpret_i64
    f64.neg
    i64.reinterpret_f64
  )
  (func (;6;) (type 1) (param $x i32) (result i32)
    local.get $x
    f32.reinterpret_i32
    f32.const 0x0p+0 (;=0;)
    f32.sub
    i32.reinterpret_f32
    i32.const 2143289344
    i32.and
  )
  (func (;7;) (type 1) (param $x i32) (result i32)
    f32.const -0x0p+0 (;=-0;)
    local.get $x
    f32.reinterpret_i32
    f32.sub
    i32.reinterpret_f32
    i32.const 2143289344
    i32.and
  )
  (func (;8;) (type 1) (param $x i32) (result i32)
    local.get $x
    f32.reinterpret_i32
    f32.const 0x1p+0 (;=1;)
    f32.mul
    i32.reinterpret_f32
    i32.const 2143289344
    i32.and
  )
  (func (;9;) (type 1) (param $x i32) (result i32)
    f32.const -0x1p+0 (;=-1;)
    local.get $x
    f32.reinterpret_i32
    f32.mul
    i32.reinterpret_f32
    i32.const 2143289344
    i32.and
  )
  (func (;10;) (type 1) (param $x i32) (result i32)
    local.get $x
    f32.reinterpret_i32
    f32.const 0x1p+0 (;=1;)
    f32.div
    i32.reinterpret_f32
    i32.const 2143289344
    i32.and
  )
  (func (;11;) (type 1) (param $x i32) (result i32)
    local.get $x
    f32.reinterpret_i32
    f32.const -0x1p+0 (;=-1;)
    f32.div
    i32.reinterpret_f32
    i32.const 2143289344
    i32.and
  )
  (func (;12;) (type 3) (param $x i64) (result i64)
    local.get $x
    f64.reinterpret_i64
    f64.const 0x0p+0 (;=0;)
    f64.sub
    i64.reinterpret_f64
    i64.const 9221120237041090560
    i64.and
  )
  (func (;13;) (type 3) (param $x i64) (result i64)
    f64.const -0x0p+0 (;=-0;)
    local.get $x
    f64.reinterpret_i64
    f64.sub
    i64.reinterpret_f64
    i64.const 9221120237041090560
    i64.and
  )
  (func (;14;) (type 3) (param $x i64) (result i64)
    local.get $x
    f64.reinterpret_i64
    f64.const 0x1p+0 (;=1;)
    f64.mul
    i64.reinterpret_f64
    i64.const 9221120237041090560
    i64.and
  )
  (func (;15;) (type 3) (param $x i64) (result i64)
    f64.const -0x1p+0 (;=-1;)
    local.get $x
    f64.reinterpret_i64
    f64.mul
    i64.reinterpret_f64
    i64.const 9221120237041090560
    i64.and
  )
  (func (;16;) (type 3) (param $x i64) (result i64)
    local.get $x
    f64.reinterpret_i64
    f64.const 0x1p+0 (;=1;)
    f64.div
    i64.reinterpret_f64
    i64.const 9221120237041090560
    i64.and
  )
  (func (;17;) (type 3) (param $x i64) (result i64)
    local.get $x
    f64.reinterpret_i64
    f64.const -0x1p+0 (;=-1;)
    f64.div
    i64.reinterpret_f64
    i64.const 9221120237041090560
    i64.and
  )
  (func (;18;) (type 1) (param $x i32) (result i32)
    local.get $x
    f32.reinterpret_i32
    f64.promote_f32
    f32.demote_f64
    i32.reinterpret_f32
    i32.const 2143289344
    i32.and
  )
  (export "f32.arithmetic_nan_bitpattern" (func 0))
  (export "f32.canonical_nan_bitpattern" (func 1))
  (export "f32.nonarithmetic_nan_bitpattern" (func 2))
  (export "f64.arithmetic_nan_bitpattern" (func 3))
  (export "f64.canonical_nan_bitpattern" (func 4))
  (export "f64.nonarithmetic_nan_bitpattern" (func 5))
  (export "f32.no_fold_sub_zero" (func 6))
  (export "f32.no_fold_neg0_sub" (func 7))
  (export "f32.no_fold_mul_one" (func 8))
  (export "f32.no_fold_neg1_mul" (func 9))
  (export "f32.no_fold_div_one" (func 10))
  (export "f32.no_fold_div_neg1" (func 11))
  (export "f64.no_fold_sub_zero" (func 12))
  (export "f64.no_fold_neg0_sub" (func 13))
  (export "f64.no_fold_mul_one" (func 14))
  (export "f64.no_fold_neg1_mul" (func 15))
  (export "f64.no_fold_div_one" (func 16))
  (export "f64.no_fold_div_neg1" (func 17))
  (export "no_fold_promote_demote" (func 18))
)