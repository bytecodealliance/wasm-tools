(module
  (type (;0;) (func))
  (func (;0;) (type 0)
    block ;; label = @1
      block (result v128) ;; label = @2
        block (result v128) ;; label = @3
          i32.const 0
          v128.load
        end
        block (result v128) ;; label = @3
          i32.const 1
          v128.load
        end
        f32x4.eq
      end
      drop
    end
  )
  (func (;1;) (type 0)
    block ;; label = @1
      block (result v128) ;; label = @2
        block (result v128) ;; label = @3
          i32.const 0
          v128.load
        end
        block (result v128) ;; label = @3
          i32.const 1
          v128.load
        end
        f32x4.ne
      end
      drop
    end
  )
  (func (;2;) (type 0)
    block ;; label = @1
      block (result v128) ;; label = @2
        block (result v128) ;; label = @3
          i32.const 0
          v128.load
        end
        block (result v128) ;; label = @3
          i32.const 1
          v128.load
        end
        f32x4.lt
      end
      drop
    end
  )
  (func (;3;) (type 0)
    block ;; label = @1
      block (result v128) ;; label = @2
        block (result v128) ;; label = @3
          i32.const 0
          v128.load
        end
        block (result v128) ;; label = @3
          i32.const 1
          v128.load
        end
        f32x4.le
      end
      drop
    end
  )
  (func (;4;) (type 0)
    block ;; label = @1
      block (result v128) ;; label = @2
        block (result v128) ;; label = @3
          i32.const 0
          v128.load
        end
        block (result v128) ;; label = @3
          i32.const 1
          v128.load
        end
        f32x4.gt
      end
      drop
    end
  )
  (func (;5;) (type 0)
    block ;; label = @1
      block (result v128) ;; label = @2
        block (result v128) ;; label = @3
          i32.const 0
          v128.load
        end
        block (result v128) ;; label = @3
          i32.const 1
          v128.load
        end
        f32x4.ge
      end
      drop
    end
  )
  (func (;6;) (type 0)
    i32.const 0
    v128.load
    i32.const 1
    v128.load
    f32x4.eq
    i32.const 2
    v128.load
    i32.const 3
    v128.load
    f32x4.eq
    f32x4.eq
    i32.const 0
    v128.load
    i32.const 1
    v128.load
    f32x4.eq
    i32.const 2
    v128.load
    i32.const 3
    v128.load
    f32x4.eq
    f32x4.eq
    f32x4.eq
    drop
  )
  (func (;7;) (type 0)
    i32.const 0
    v128.load
    i32.const 1
    v128.load
    f32x4.ne
    i32.const 2
    v128.load
    i32.const 3
    v128.load
    f32x4.ne
    f32x4.ne
    i32.const 0
    v128.load
    i32.const 1
    v128.load
    f32x4.ne
    i32.const 2
    v128.load
    i32.const 3
    v128.load
    f32x4.ne
    f32x4.ne
    f32x4.ne
    drop
  )
  (func (;8;) (type 0)
    i32.const 0
    v128.load
    i32.const 1
    v128.load
    f32x4.lt
    i32.const 2
    v128.load
    i32.const 3
    v128.load
    f32x4.lt
    f32x4.lt
    i32.const 0
    v128.load
    i32.const 1
    v128.load
    f32x4.lt
    i32.const 2
    v128.load
    i32.const 3
    v128.load
    f32x4.lt
    f32x4.lt
    f32x4.lt
    drop
  )
  (func (;9;) (type 0)
    i32.const 0
    v128.load
    i32.const 1
    v128.load
    f32x4.le
    i32.const 2
    v128.load
    i32.const 3
    v128.load
    f32x4.le
    f32x4.le
    i32.const 0
    v128.load
    i32.const 1
    v128.load
    f32x4.le
    i32.const 2
    v128.load
    i32.const 3
    v128.load
    f32x4.le
    f32x4.le
    f32x4.le
    drop
  )
  (func (;10;) (type 0)
    i32.const 0
    v128.load
    i32.const 1
    v128.load
    f32x4.gt
    i32.const 2
    v128.load
    i32.const 3
    v128.load
    f32x4.gt
    f32x4.gt
    i32.const 0
    v128.load
    i32.const 1
    v128.load
    f32x4.gt
    i32.const 2
    v128.load
    i32.const 3
    v128.load
    f32x4.gt
    f32x4.gt
    f32x4.gt
    drop
  )
  (func (;11;) (type 0)
    i32.const 0
    v128.load
    i32.const 1
    v128.load
    f32x4.ge
    i32.const 2
    v128.load
    i32.const 3
    v128.load
    f32x4.ge
    f32x4.ge
    i32.const 0
    v128.load
    i32.const 1
    v128.load
    f32x4.ge
    i32.const 2
    v128.load
    i32.const 3
    v128.load
    f32x4.ge
    f32x4.ge
    f32x4.ge
    drop
  )
  (func (;12;) (type 0)
    i32.const 0
    v128.load
    i32.const 1
    v128.load
    f32x4.lt
    i32.const 2
    v128.load
    i32.const 3
    v128.load
    f32x4.le
    f32x4.eq
    i32.const 0
    v128.load
    i32.const 1
    v128.load
    f32x4.gt
    i32.const 2
    v128.load
    i32.const 3
    v128.load
    f32x4.lt
    f32x4.ne
    f32x4.ge
    drop
  )
  (memory (;0;) 1)
  (export "eq-in-block" (func 0))
  (export "ne-in-block" (func 1))
  (export "lt-in-block" (func 2))
  (export "le-in-block" (func 3))
  (export "gt-in-block" (func 4))
  (export "ge-in-block" (func 5))
  (export "nested-eq" (func 6))
  (export "nested-ne" (func 7))
  (export "nested-lt" (func 8))
  (export "nested-le" (func 9))
  (export "nested-gt" (func 10))
  (export "nested-ge" (func 11))
  (export "as-param" (func 12))
)