{
  "source_filename": "tests/testsuite/simd_align.wast",
  "commands": [
    {
      "type": "module",
      "line": 3,
      "filename": "simd_align.0.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 4,
      "filename": "simd_align.1.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 5,
      "filename": "simd_align.2.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 6,
      "filename": "simd_align.3.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 7,
      "filename": "simd_align.4.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 9,
      "filename": "simd_align.5.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 10,
      "filename": "simd_align.6.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 11,
      "filename": "simd_align.7.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 12,
      "filename": "simd_align.8.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 13,
      "filename": "simd_align.9.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 15,
      "filename": "simd_align.10.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 16,
      "filename": "simd_align.11.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 17,
      "filename": "simd_align.12.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 18,
      "filename": "simd_align.13.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 19,
      "filename": "simd_align.14.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 20,
      "filename": "simd_align.15.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 21,
      "filename": "simd_align.16.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 22,
      "filename": "simd_align.17.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 23,
      "filename": "simd_align.18.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 24,
      "filename": "simd_align.19.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 25,
      "filename": "simd_align.20.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 26,
      "filename": "simd_align.21.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 27,
      "filename": "simd_align.22.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 28,
      "filename": "simd_align.23.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 29,
      "filename": "simd_align.24.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 30,
      "filename": "simd_align.25.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 31,
      "filename": "simd_align.26.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 32,
      "filename": "simd_align.27.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 33,
      "filename": "simd_align.28.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 34,
      "filename": "simd_align.29.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 35,
      "filename": "simd_align.30.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 36,
      "filename": "simd_align.31.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 37,
      "filename": "simd_align.32.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 38,
      "filename": "simd_align.33.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 40,
      "filename": "simd_align.34.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 41,
      "filename": "simd_align.35.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 42,
      "filename": "simd_align.36.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 43,
      "filename": "simd_align.37.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 44,
      "filename": "simd_align.38.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 45,
      "filename": "simd_align.39.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 46,
      "filename": "simd_align.40.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 47,
      "filename": "simd_align.41.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 48,
      "filename": "simd_align.42.wasm",
      "module_type": "binary"
    },
    {
      "type": "module",
      "line": 49,
      "filename": "simd_align.43.wasm",
      "module_type": "binary"
    },
    {
      "type": "assert_invalid",
      "line": 54,
      "filename": "simd_align.44.wasm",
      "module_type": "binary",
      "text": "alignment must not be larger than natural"
    },
    {
      "type": "assert_invalid",
      "line": 58,
      "filename": "simd_align.45.wasm",
      "module_type": "binary",
      "text": "alignment must not be larger than natural"
    },
    {
      "type": "assert_invalid",
      "line": 62,
      "filename": "simd_align.46.wasm",
      "module_type": "binary",
      "text": "alignment must not be larger than natural"
    },
    {
      "type": "assert_invalid",
      "line": 66,
      "filename": "simd_align.47.wasm",
      "module_type": "binary",
      "text": "alignment must not be larger than natural"
    },
    {
      "type": "assert_invalid",
      "line": 70,
      "filename": "simd_align.48.wasm",
      "module_type": "binary",
      "text": "alignment must not be larger than natural"
    },
    {
      "type": "assert_invalid",
      "line": 74,
      "filename": "simd_align.49.wasm",
      "module_type": "binary",
      "text": "alignment must not be larger than natural"
    },
    {
      "type": "assert_invalid",
      "line": 78,
      "filename": "simd_align.50.wasm",
      "module_type": "binary",
      "text": "alignment must not be larger than natural"
    },
    {
      "type": "assert_invalid",
      "line": 82,
      "filename": "simd_align.51.wasm",
      "module_type": "binary",
      "text": "alignment must not be larger than natural"
    },
    {
      "type": "assert_invalid",
      "line": 86,
      "filename": "simd_align.52.wasm",
      "module_type": "binary",
      "text": "alignment must not be larger than natural"
    },
    {
      "type": "assert_invalid",
      "line": 90,
      "filename": "simd_align.53.wasm",
      "module_type": "binary",
      "text": "alignment must not be larger than natural"
    },
    {
      "type": "assert_invalid",
      "line": 94,
      "filename": "simd_align.54.wasm",
      "module_type": "binary",
      "text": "alignment must not be larger than natural"
    },
    {
      "type": "assert_invalid",
      "line": 98,
      "filename": "simd_align.55.wasm",
      "module_type": "binary",
      "text": "alignment must not be larger than natural"
    },
    {
      "type": "assert_malformed",
      "line": 105,
      "filename": "simd_align.56.wat",
      "module_type": "text",
      "text": "unknown operator"
    },
    {
      "type": "assert_malformed",
      "line": 111,
      "filename": "simd_align.57.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 117,
      "filename": "simd_align.58.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 123,
      "filename": "simd_align.59.wat",
      "module_type": "text",
      "text": "unknown operator"
    },
    {
      "type": "assert_malformed",
      "line": 129,
      "filename": "simd_align.60.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 135,
      "filename": "simd_align.61.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 141,
      "filename": "simd_align.62.wat",
      "module_type": "text",
      "text": "unknown operator"
    },
    {
      "type": "assert_malformed",
      "line": 147,
      "filename": "simd_align.63.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 153,
      "filename": "simd_align.64.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 159,
      "filename": "simd_align.65.wat",
      "module_type": "text",
      "text": "unknown operator"
    },
    {
      "type": "assert_malformed",
      "line": 165,
      "filename": "simd_align.66.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 171,
      "filename": "simd_align.67.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 177,
      "filename": "simd_align.68.wat",
      "module_type": "text",
      "text": "unknown operator"
    },
    {
      "type": "assert_malformed",
      "line": 183,
      "filename": "simd_align.69.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 189,
      "filename": "simd_align.70.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 195,
      "filename": "simd_align.71.wat",
      "module_type": "text",
      "text": "unknown operator"
    },
    {
      "type": "assert_malformed",
      "line": 201,
      "filename": "simd_align.72.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 207,
      "filename": "simd_align.73.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 213,
      "filename": "simd_align.74.wat",
      "module_type": "text",
      "text": "unknown operator"
    },
    {
      "type": "assert_malformed",
      "line": 219,
      "filename": "simd_align.75.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 225,
      "filename": "simd_align.76.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 231,
      "filename": "simd_align.77.wat",
      "module_type": "text",
      "text": "unknown operator"
    },
    {
      "type": "assert_malformed",
      "line": 237,
      "filename": "simd_align.78.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 243,
      "filename": "simd_align.79.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 249,
      "filename": "simd_align.80.wat",
      "module_type": "text",
      "text": "unknown operator"
    },
    {
      "type": "assert_malformed",
      "line": 255,
      "filename": "simd_align.81.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 261,
      "filename": "simd_align.82.wat",
      "module_type": "text",
      "text": "unknown operator"
    },
    {
      "type": "assert_malformed",
      "line": 267,
      "filename": "simd_align.83.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 273,
      "filename": "simd_align.84.wat",
      "module_type": "text",
      "text": "unknown operator"
    },
    {
      "type": "assert_malformed",
      "line": 279,
      "filename": "simd_align.85.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 285,
      "filename": "simd_align.86.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 291,
      "filename": "simd_align.87.wat",
      "module_type": "text",
      "text": "unknown operator"
    },
    {
      "type": "assert_malformed",
      "line": 297,
      "filename": "simd_align.88.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "assert_malformed",
      "line": 303,
      "filename": "simd_align.89.wat",
      "module_type": "text",
      "text": "alignment must be a power of two"
    },
    {
      "type": "module",
      "line": 311,
      "filename": "simd_align.90.wasm",
      "module_type": "binary"
    },
    {
      "type": "assert_return",
      "line": 321,
      "action": {
        "type": "invoke",
        "field": "v128.load align=16",
        "args": [
          {
            "type": "i32",
            "value": "0"
          }
        ]
      },
      "expected": [
        {
          "type": "v128",
          "lane_type": "i32",
          "value": [
            "0",
            "0",
            "0",
            "0"
          ]
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 322,
      "action": {
        "type": "invoke",
        "field": "v128.load align=16",
        "args": [
          {
            "type": "i32",
            "value": "1"
          }
        ]
      },
      "expected": [
        {
          "type": "v128",
          "lane_type": "i32",
          "value": [
            "0",
            "0",
            "0",
            "0"
          ]
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 323,
      "action": {
        "type": "invoke",
        "field": "v128.store align=16",
        "args": [
          {
            "type": "i32",
            "value": "1"
          },
          {
            "type": "v128",
            "lane_type": "i8",
            "value": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16"
            ]
          }
        ]
      },
      "expected": []
    },
    {
      "type": "assert_return",
      "line": 324,
      "action": {
        "type": "invoke",
        "field": "v128.load align=16",
        "args": [
          {
            "type": "i32",
            "value": "0"
          }
        ]
      },
      "expected": [
        {
          "type": "v128",
          "lane_type": "i8",
          "value": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15"
          ]
        }
      ]
    },
    {
      "type": "module",
      "line": 328,
      "filename": "simd_align.91.wasm",
      "module_type": "binary"
    },
    {
      "type": "assert_return",
      "line": 352,
      "action": {
        "type": "invoke",
        "field": "v128_unaligned_read_and_write",
        "args": []
      },
      "expected": [
        {
          "type": "v128",
          "lane_type": "i8",
          "value": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15"
          ]
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 353,
      "action": {
        "type": "invoke",
        "field": "v128_aligned_read_and_write",
        "args": []
      },
      "expected": [
        {
          "type": "v128",
          "lane_type": "i16",
          "value": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7"
          ]
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 354,
      "action": {
        "type": "invoke",
        "field": "v128_aligned_read_and_unaligned_write",
        "args": []
      },
      "expected": [
        {
          "type": "v128",
          "lane_type": "i32",
          "value": [
            "0",
            "1",
            "2",
            "3"
          ]
        }
      ]
    },
    {
      "type": "assert_return",
      "line": 355,
      "action": {
        "type": "invoke",
        "field": "v128_unaligned_read_and_aligned_write",
        "args": []
      },
      "expected": [
        {
          "type": "v128",
          "lane_type": "i32",
          "value": [
            "0",
            "1",
            "2",
            "3"
          ]
        }
      ]
    }
  ]
}