(module
  (type (;0;) (func))
  (type (;1;) (func (result i32)))
  (type (;2;) (func (param i32)))
  (type (;3;) (func (param i32) (result i32)))
  (type (;4;) (func (param i32 i32) (result i32)))
  (func (;0;) (type 1) (result i32)
    try (result i32) ;; label = @1
      try (result i32) ;; label = @2
        i32.const 1
      delegate 0 (;@1;)
    catch $e0
      i32.const 2
    end
  )
  (func $throw-if (;1;) (type 2) (param i32)
    local.get 0
    if ;; label = @1
      throw $e0
    else
    end
  )
  (func (;2;) (type 3) (param i32) (result i32)
    try (result i32) ;; label = @1
      try (result i32) ;; label = @2
        local.get 0
        call $throw-if
        i32.const 1
      delegate 0 (;@1;)
    catch $e0
      i32.const 2
    end
  )
  (func (;3;) (type 1) (result i32)
    try (result i32) ;; label = @1
      try (result i32) ;; label = @2
        try (result i32) ;; label = @3
          throw $e0
          i32.const 1
        delegate 1 (;@1;)
      catch $e0
        i32.const 2
      end
    catch $e0
      i32.const 3
    end
  )
  (func (;4;) (type 1) (result i32)
    try (result i32) ;; label = @1
      block ;; label = @2
        try ;; label = @3
          throw $e0
        delegate 0 (;@2;)
      end
      i32.const 0
    catch_all
      i32.const 1
    end
  )
  (func (;5;) (type 1) (result i32)
    try (result i32) ;; label = @1
      try ;; label = @2
        throw $e0
      catch $e0
        try ;; label = @3
          rethrow 1 (;@2;)
        delegate 0 (;@2;)
      end
      i32.const 0
    catch_all
      i32.const 1
    end
  )
  (func (;6;) (type 0)
    try ;; label = @1
      throw $e0
    delegate 0
  )
  (func (;7;) (type 0)
    try ;; label = @1
      try ;; label = @2
        throw $e0
      delegate 1
    catch_all
    end
  )
  (func $select-tag (;8;) (type 2) (param i32)
    block ;; label = @1
      block ;; label = @2
        block ;; label = @3
          local.get 0
          br_table 0 (;@3;) 1 (;@2;) 2 (;@1;)
        end
        return
      end
      throw $e0
    end
    throw $e1
  )
  (func (;9;) (type 4) (param i32 i32) (result i32)
    try (result i32) ;; label = @1
      local.get 0
      call $select-tag
      try (result i32) ;; label = @2
        local.get 1
        call $select-tag
        i32.const 1
      delegate 0 (;@1;)
    catch $e0
      i32.const 2
    end
  )
  (func (;10;) (type 1) (result i32)
    try (result i32) ;; label = @1
      try (result i32) ;; label = @2
        throw $e0
        i32.const 1
      delegate 0 (;@1;)
    catch $e1
      i32.const 2
    end
  )
  (func (;11;) (type 1) (result i32)
    try (result i32) ;; label = @1
      try ;; label = @2
        try ;; label = @3
          try ;; label = @4
            try ;; label = @5
              try ;; label = @6
                throw $e0
              delegate 1 (;@4;)
            catch_all
              unreachable
            end
          delegate 1 (;@2;)
        catch_all
          unreachable
        end
      catch_all
        try ;; label = @3
          throw $e0
        delegate 0 (;@2;)
      end
      unreachable
    catch_all
      i32.const 1
    end
  )
  (func $throw-void (;12;) (type 0)
    throw $e0
  )
  (func (;13;) (type 0)
    try ;; label = @1
      try ;; label = @2
        return_call $throw-void
      delegate 0 (;@1;)
    catch $e0
    end
  )
  (func (;14;) (type 0)
    try ;; label = @1
      try ;; label = @2
        i32.const 0
        return_call_indirect (type 0)
      delegate 0 (;@1;)
    catch $e0
    end
  )
  (func (;15;) (type 0)
    try ;; label = @1
      br 0 (;@1;)
    delegate 0
  )
  (func (;16;) (type 1) (result i32)
    try (result i32) ;; label = @1
      try (result i32) ;; label = @2
        block ;; label = @3
          try ;; label = @4
            br 1 (;@3;)
          delegate 2 (;@1;)
        end
        call $throw-void
        i32.const 0
      catch $e0
        i32.const 1
      end
    catch $e0
      i32.const 2
    end
  )
  (func (;17;) (type 1) (result i32)
    try (result i32) ;; label = @1
      try (result i32) ;; label = @2
        block ;; label = @3
          try ;; label = @4
            br 1 (;@3;)
          delegate 2 (;@1;)
        end
        throw $e0
        i32.const 0
      catch $e0
        i32.const 1
      end
    catch $e0
      i32.const 2
    end
  )
  (table (;0;) 1 1 funcref)
  (tag $e0 (;0;) (type 0))
  (tag $e1 (;1;) (type 0))
  (export "delegate-no-throw" (func 0))
  (export "delegate-throw" (func 2))
  (export "delegate-skip" (func 3))
  (export "delegate-to-block" (func 4))
  (export "delegate-to-catch" (func 5))
  (export "delegate-to-caller-trivial" (func 6))
  (export "delegate-to-caller-skipping" (func 7))
  (export "delegate-merge" (func 9))
  (export "delegate-throw-no-catch" (func 10))
  (export "delegate-correct-targets" (func 11))
  (export "return-call-in-try-delegate" (func 13))
  (export "return-call-indirect-in-try-delegate" (func 14))
  (export "break-try-delegate" (func 15))
  (export "break-and-call-throw" (func 16))
  (export "break-and-throw" (func 17))
  (elem (;0;) (i32.const 0) func $throw-void)
)
