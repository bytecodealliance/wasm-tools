(component
  (type $Wasi (;0;)
    (instance)
  )
  (import "wasi" (instance $wasi (;0;) (type $Wasi)))
  (component $A (;0;)
    (type $Wasi (;0;)
      (instance)
    )
    (import "wasi" (instance (;0;) (type $Wasi)))
    (core module $m (;0;)
      (type (;0;) (func))
      (func (;0;) (type 0))
      (export "a" (func 0))
    )
    (core instance $i (;0;) (instantiate $m))
    (type (;1;) (func))
    (alias core export $i "a" (core func (;0;)))
    (func (;0;) (type 1) (canon lift (core func 0)))
    (export (;1;) "a" (func 0))
  )
  (component $B (;1;)
    (type $Wasi (;0;)
      (instance)
    )
    (import "wasi" (instance $wasi (;0;) (type $Wasi)))
    (type (;1;)
      (component
        (alias outer $B $Wasi (type (;0;)))
        (import "wasi" (instance (type 0)))
        (type (;1;) (func))
        (export (;0;) "a" (func (type 1)))
      )
    )
    (import "a1-x" (component $A (;0;) (type 1)))
    (instance $a (;1;) (instantiate $A
        (with "wasi" (instance $wasi))
      )
    )
    (alias export $a "a" (func (;0;)))
    (core func $lower (;0;) (canon lower (func 0)))
    (core module $b (;0;)
      (type (;0;) (func))
      (import "a" "a" (func (;0;) (type 0)))
      (func (;1;) (type 0))
      (export "b" (func 1))
    )
    (core instance (;0;)
      (export "a" (func $lower))
    )
    (core instance $b (;1;) (instantiate $b
        (with "a" (instance 0))
      )
    )
    (type (;2;) (func))
    (alias core export $b "b" (core func (;1;)))
    (func (;1;) (type 2) (canon lift (core func 1)))
    (export (;2;) "b" (func 1))
  )
  (component $B_wrap (;2;)
    (type $Wasi (;0;)
      (instance)
    )
    (import "wasi" (instance $wasi (;0;) (type $Wasi)))
    (alias outer 1 $B (component $B (;0;)))
    (alias outer 1 $A (component $A (;1;)))
    (instance $b (;1;) (instantiate $B
        (with "wasi" (instance $wasi))
        (with "a1-x" (component $A))
      )
    )
    (alias export $b "b" (func (;0;)))
    (export (;1;) "b" (func 0))
  )
  (component $C (;3;)
    (type $Wasi (;0;)
      (instance)
    )
    (import "wasi" (instance $wasi (;0;) (type $Wasi)))
    (type (;1;)
      (component
        (alias outer $C $Wasi (type (;0;)))
        (import "wasi" (instance (type 0)))
        (type (;1;) (func))
        (export (;0;) "b" (func (type 1)))
      )
    )
    (import "b1-x" (component $B (;0;) (type 1)))
    (instance $b (;1;) (instantiate $B
        (with "wasi" (instance $wasi))
      )
    )
    (alias export $b "b" (func (;0;)))
    (export (;1;) "c" (func 0))
  )
  (component $C_wrap (;4;)
    (type $Wasi (;0;)
      (instance)
    )
    (import "wasi" (instance $wasi (;0;) (type $Wasi)))
    (alias outer 1 $C (component $C (;0;)))
    (alias outer 1 $B_wrap (component $B_wrap (;1;)))
    (instance $c (;1;) (instantiate $C
        (with "wasi" (instance $wasi))
        (with "b1-x" (component $B_wrap))
      )
    )
    (alias export $c "c" (func (;0;)))
    (export (;1;) "c" (func 0))
  )
  (component $D (;5;)
    (type $Wasi (;0;)
      (instance)
    )
    (import "wasi" (instance $wasi (;0;) (type $Wasi)))
    (type (;1;)
      (component
        (alias outer $D $Wasi (type (;0;)))
        (import "wasi" (instance (type 0)))
        (type (;1;) (func))
        (export (;0;) "c" (func (type 1)))
      )
    )
    (import "c1-x" (component $C (;0;) (type 1)))
    (instance $c (;1;) (instantiate $C
        (with "wasi" (instance $wasi))
      )
    )
    (alias export $c "c" (func (;0;)))
    (export (;1;) "d" (func 0))
  )
  (instance $d (;1;) (instantiate $D
      (with "wasi" (instance $wasi))
      (with "c1-x" (component $C_wrap))
    )
  )
  (alias export $d "d" (func (;0;)))
  (export (;1;) "d" (func 0))
)