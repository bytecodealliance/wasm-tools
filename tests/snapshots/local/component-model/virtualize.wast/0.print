(component
  (core module $libc (;0;)
    (type (;0;) (func (param i32 i32 i32 i32) (result i32)))
    (func (;0;) (type 0) (param i32 i32 i32 i32) (result i32)
      unreachable
    )
    (memory (;0;) 0)
    (export "mem" (memory 0))
    (export "realloc" (func 0))
  )
  (core instance $libc (;0;) (instantiate $libc))
  (component $child (;0;)
    (type (;0;)
      (instance
        (type (;0;) (list u8))
        (type (;1;) (func (param "count" u32) (result 0)))
        (export (;0;) "read" (func (type 1)))
        (type (;2;) (list u8))
        (type (;3;) (func (param "bytes" 2) (result u32)))
        (export (;1;) "write" (func (type 3)))
      )
    )
    (import "wasi-file" (instance $wasi-file (;0;) (type 0)))
    (alias outer 1 $libc (core module $libc (;0;)))
    (core instance $libc (;0;) (instantiate $libc))
    (core module $m (;1;)
      (type (;0;) (func (param i32 i32)))
      (type (;1;) (func))
      (import "wasi-file" "read" (func $read (;0;) (type 0)))
      (func $play (;1;) (type 1)
        unreachable
      )
      (export "play" (func $play))
    )
    (alias export $wasi-file "read" (func (;0;)))
    (alias core export $libc "mem" (core memory (;0;)))
    (alias core export $libc "realloc" (core func (;0;)))
    (core func $wasi_file_read (;1;) (canon lower (func 0) (memory 0) (realloc 0)))
    (core instance (;1;)
      (export "read" (func $wasi_file_read))
    )
    (core instance $i (;2;) (instantiate $m
        (with "wasi-file" (instance 1))
      )
    )
    (type (;1;) (func))
    (alias core export $i "play" (core func (;2;)))
    (func (;1;) (type 1) (canon lift (core func 2)))
    (export (;2;) "play" (func 1))
  )
  (component $virtualize (;1;)
    (type (;0;)
      (instance
        (type (;0;) (list u8))
        (type (;1;) (func (param "len" u32) (result 0)))
        (export (;0;) "read" (func (type 1)))
        (type (;2;) (list u8))
        (type (;3;) (func (param "buf" 2) (result u32)))
        (export (;1;) "write" (func (type 3)))
      )
    )
    (import "wasi-file" (instance $wasi-file (;0;) (type 0)))
    (alias export $wasi-file "read" (func (;0;)))
    (export (;1;) "read" (func 0))
    (alias export $wasi-file "write" (func (;2;)))
    (export (;3;) "write" (func 2))
  )
  (component (;2;)
    (type $WasiFile (;0;)
      (instance
        (type (;0;) (list u8))
        (type (;1;) (func (param "len" u32) (result 0)))
        (export (;0;) "read" (func (type 1)))
        (type (;2;) (list u8))
        (type (;3;) (func (param "buf" 2) (result u32)))
        (export (;1;) "write" (func (type 3)))
      )
    )
    (import "wasi-file" (instance $real-wasi (;0;) (type $WasiFile)))
    (type (;1;)
      (component
        (alias outer 1 $WasiFile (type (;0;)))
        (import "wasi-file" (instance (type 0)))
        (type (;1;) (list u8))
        (type (;2;) (func (param "len" u32) (result 1)))
        (export (;0;) "read" (func (type 2)))
        (type (;3;) (list u8))
        (type (;4;) (func (param "buf" 3) (result u32)))
        (export (;1;) "write" (func (type 4)))
      )
    )
    (import "virtualize" (component $VIRTUALIZE (;0;) (type 1)))
    (type (;2;)
      (component
        (alias outer 1 $WasiFile (type (;0;)))
        (import "wasi-file" (instance (type 0)))
        (type (;1;) (func))
        (export (;0;) "play" (func (type 1)))
      )
    )
    (import "child" (component $CHILD (;1;) (type 2)))
    (instance $virt-wasi (;1;) (instantiate $VIRTUALIZE
        (with "wasi-file" (instance $real-wasi))
      )
    )
    (instance $child (;2;) (instantiate $CHILD
        (with "wasi-file" (instance $virt-wasi))
      )
    )
    (alias export $child "play" (func (;0;)))
    (export (;1;) "work" (func 0))
  )
  (component (;3;)
    (type $WasiFile (;0;)
      (instance
        (type (;0;) (list u8))
        (type (;1;) (func (param "len" u32) (result 0)))
        (export (;0;) "read" (func (type 1)))
        (type (;2;) (list u8))
        (type (;3;) (func (param "buf" 2) (result u32)))
        (export (;1;) "write" (func (type 3)))
      )
    )
    (import "wasi-file" (instance $real-wasi (;0;) (type $WasiFile)))
    (alias outer 1 $libc (core module $libc (;0;)))
    (core instance $libc (;0;) (instantiate $libc))
    (core module $CHILD (;1;)
      (type (;0;) (func (param i32 i32)))
      (type (;1;) (func))
      (import "wasi-file" "read" (func $wasi-file (;0;) (type 0)))
      (func $play (;1;) (type 1)
        unreachable
      )
      (export "play" (func $play))
    )
    (core module $VIRTUALIZE (;2;)
      (type (;0;) (func (param i32 i32)))
      (type (;1;) (func (param i32 i32 i32)))
      (import "wasi-file" "read" (func (;0;) (type 0)))
      (func (;1;) (type 0) (param i32 i32)
        unreachable
      )
      (func (;2;) (type 1) (param i32 i32 i32)
        unreachable
      )
      (export "read" (func 1))
      (export "write" (func 2))
    )
    (alias export $real-wasi "read" (func (;0;)))
    (alias core export $libc "mem" (core memory (;0;)))
    (alias core export $libc "realloc" (core func (;0;)))
    (core func $real-wasi-read (;1;) (canon lower (func 0) (memory 0) (realloc 0)))
    (core instance (;1;)
      (export "read" (func $real-wasi-read))
    )
    (core instance $virt-wasi (;2;) (instantiate $VIRTUALIZE
        (with "wasi-file" (instance 1))
      )
    )
    (core instance $child (;3;) (instantiate $CHILD
        (with "wasi-file" (instance $virt-wasi))
      )
    )
    (type (;1;) (func))
    (alias core export $child "play" (core func (;2;)))
    (alias core export $libc "mem" (core memory (;1;)))
    (alias core export $libc "realloc" (core func (;3;)))
    (func (;1;) (type 1) (canon lift (core func 2) (memory 1) (realloc 3)))
    (export (;2;) "work" (func 1))
  )
)