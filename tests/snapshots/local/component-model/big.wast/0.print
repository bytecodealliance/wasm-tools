(component
  (type (;0;)
    (instance
      (type (;0;) (func (param "msg" string)))
      (export (;0;) "log" (func (type 0)))
    )
  )
  (import "wasi-logging" (instance $logging (;0;) (type 0)))
  (core type (;0;)
    (module
      (export "memory" (memory 1))
      (type (;0;) (func (param i32 i32 i32 i32) (result i32)))
      (export "realloc" (func (type 0)))
    )
  )
  (import "libc" (core module $Libc (;0;) (type 0)))
  (core instance $libc (;0;) (instantiate $Libc))
  (alias export $logging "log" (func (;0;)))
  (alias core export $libc "memory" (core memory (;0;)))
  (alias core export $libc "realloc" (core func (;0;)))
  (core func $log (;1;) (canon lower (func 0) (memory 0) (realloc 0)))
  (core module $Main (;1;)
    (type (;0;) (func (param i32 i32 i32 i32) (result i32)))
    (type (;1;) (func (param i32 i32)))
    (type (;2;) (func (param i32 i32) (result i32)))
    (import "libc" "memory" (memory (;0;) 1))
    (import "libc" "realloc" (func (;0;) (type 0)))
    (import "wasi-logging" "log" (func $log (;1;) (type 1)))
    (func (;2;) (type 2) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      call $log
      unreachable
    )
    (export "run" (func 2))
  )
  (core instance (;1;)
    (export "log" (func $log))
  )
  (core instance $main (;2;) (instantiate $Main
      (with "libc" (instance $libc))
      (with "wasi-logging" (instance 1))
    )
  )
  (type (;1;) (func (param "in" string) (result string)))
  (alias core export $main "run" (core func (;2;)))
  (alias core export $libc "memory" (core memory (;1;)))
  (alias core export $libc "realloc" (core func (;3;)))
  (func $run (;1;) (type 1) (canon lift (core func 2) (memory 1) (realloc 3)))
  (export (;2;) "run" (func $run))
)