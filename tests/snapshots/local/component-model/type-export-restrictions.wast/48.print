(component
  (type (;0;)
    (instance
      (type (;0;) (enum "qux"))
      (export (;1;) "baz" (type (eq 0)))
      (type (;2;) (record (field "bar" 1)))
      (export (;3;) "foo" (type (eq 2)))
    )
  )
  (import (interface "demo:component/types") (instance (;0;) (type 0)))
  (component (;0;)
    (type (;0;)
      (instance
        (type (;0;) (enum "qux"))
        (export (;1;) "baz" (type (eq 0)))
        (type (;2;) (record (field "bar" 1)))
        (export (;3;) "foo" (type (eq 2)))
      )
    )
    (import (interface "demo:component/types") (instance (;0;) (type 0)))
    (component (;0;)
      (type (;0;) (enum "qux"))
      (import "import-type-baz" (type (;1;) (eq 0)))
      (type (;2;) (record (field "bar" 1)))
      (import "import-type-bar" (type (;3;) (eq 2)))
      (export (;4;) "foo" (type 3))
    )
    (alias export 0 "baz" (type (;1;)))
    (alias export 0 "foo" (type (;2;)))
    (instance (;1;) (instantiate 0
        (with "import-type-baz" (type 1))
        (with "import-type-bar" (type 2))
      )
    )
    (export (;2;) (interface "demo:component/types") (instance 1))
  )
  (instance (;1;) (instantiate 0
      (with "demo:component/types" (instance 0))
    )
  )
  (alias export 1 "demo:component/types" (instance (;2;)))
  (export (;3;) (interface "demo:component/types") (instance 2))
)