(module
  (type $ft0 (;0;) (func))
  (type $ct0 (;1;) (cont $ft0))
  (type $ft1 (;2;) (func (param f32) (result f64)))
  (type $ct1 (;3;) (cont $ft1))
  (type $ft2 (;4;) (func (param i64) (result f64)))
  (type $ct2 (;5;) (cont $ft2))
  (type $ft3 (;6;) (func (param i32) (result f64)))
  (type $ct3 (;7;) (cont $ft3))
  (type (;8;) (func (param i32) (result i64)))
  (type (;9;) (func (param i64) (result i32)))
  (type (;10;) (func (param (ref $ct1)) (result f64)))
  (type (;11;) (func (result i32 (ref $ct2))))
  (type (;12;) (func (result i64 (ref $ct3))))
  (type (;13;) (func (param (ref null $ct0))))
  (type (;14;) (func (param (ref $ct0))))
  (type (;15;) (func (param (ref $ct0)) (result (ref $ct0))))
  (tag $t0 (;0;) (type $ft0))
  (tag $t1 (;1;) (type $ft0))
  (tag $t2 (;2;) (type 8) (param i32) (result i64))
  (tag $t3 (;3;) (type 9) (param i64) (result i32))
  (func $test0 (;0;) (type 10) (param $x (ref $ct1)) (result f64)
    block $handler0 (type 11) (result i32 (ref $ct2))
      block $handler1 (type 12) (result i64 (ref $ct3))
        f32.const 0x1.3ae148p+0 (;=1.23;)
        local.get $x
        resume $ct1 (on $t2 $handler0) (on $t3 $handler1)
        return
      end
      unreachable
    end
    unreachable
  )
  (func $test1 (;1;) (type 10) (param $x (ref $ct1)) (result f64)
    block $handler0 (type 11) (result i32 (ref $ct2))
      block $handler1 (type 11) (result i32 (ref $ct2))
        f32.const 0x1.3ae148p+0 (;=1.23;)
        local.get $x
        resume $ct1 (on $t2 $handler0) (on $t2 $handler1)
        return
      end
      unreachable
    end
    unreachable
  )
  (func $test2 (;2;) (type 13) (param $x (ref null $ct0))
    local.get $x
    resume $ct0
  )
  (func $test3 (;3;) (type 14) (param $x (ref $ct0))
    block $handler (result (ref null $ct0))
      local.get $x
      resume $ct0 (on $t0 $handler)
      return
    end
    unreachable
  )
  (func $test4 (;4;) (type 14) (param $x (ref $ct0))
    block $handler (result (ref null $ct0))
      local.get $x
      resume $ct0 (on $t0 $handler) (on $t1 $handler)
      return
    end
    unreachable
  )
  (func $test5 (;5;) (type 14) (param $x (ref $ct0))
    local.get $x
    block $handler (type 15) (param (ref $ct0)) (result (ref $ct0))
      resume $ct0 (on $t0 $handler)
      return
    end
    unreachable
  )
)
