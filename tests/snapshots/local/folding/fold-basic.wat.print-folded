(module
  (type (;0;) (func (result i32)))
  (type (;1;) (func (result f32)))
  (type (;2;) (func (result i64)))
  (func $fold-binary (;0;) (type 0) (result i32)
    (i32.add
      (i32.const 1)
      (i32.const 2))
  )
  (func $fold-binary-chain (;1;) (type 0) (result i32)
    (i32.sub
      (i32.const 1)
      (i32.add
        (i32.const 1)
        (i32.const 1)))
  )
  (func $fold-compare (;2;) (type 0) (result i32)
    (f32.le
      (f32.const 0x1p+0 (;=1;))
      (f32.const 0x1p+1 (;=2;)))
  )
  (func $fold-unary (;3;) (type 1) (result f32)
    (f32.neg
      (f32.neg
        (f32.const 0x1p+0 (;=1;))))
  )
  (func $fold-convert (;4;) (type 2) (result i64)
    (i64.extend_i32_s
      (i32.trunc_f32_s
        (f32.demote_f64
          (f64.const 0x0p+0 (;=0;)))))
  )
  (func $fold-select (;5;) (type 1) (result f32)
    (select
      (f32.const 0x1p+0 (;=1;))
      (f32.const 0x1p+1 (;=2;))
      (i32.const 3))
  )
)
