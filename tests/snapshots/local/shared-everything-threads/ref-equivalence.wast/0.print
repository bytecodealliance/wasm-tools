(module
  (type $st (;0;) (sub (shared(struct))))
  (type $st' (;1;) (sub (shared(struct (field i32)))))
  (type $at (;2;) (shared(array i8)))
  (type $st-sub1 (;3;) (sub $st (shared(struct))))
  (type $st-sub2 (;4;) (sub $st (shared(struct))))
  (type $st'-sub1 (;5;) (sub $st' (shared(struct (field i32)))))
  (type $st'-sub2 (;6;) (sub $st' (shared(struct (field i32)))))
  (type (;7;) (func))
  (type (;8;) (func (param i32 i32) (result i32)))
  (func (;0;) (type 7)
    i32.const 0
    ref.null (shared eq)
    table.set 0
    i32.const 1
    ref.null (shared i31)
    table.set 0
    i32.const 2
    i32.const 7
    ref.i31_shared
    table.set 0
    i32.const 3
    i32.const 7
    ref.i31_shared
    table.set 0
    i32.const 4
    i32.const 8
    ref.i31_shared
    table.set 0
    i32.const 5
    struct.new_default $st
    table.set 0
    i32.const 6
    struct.new_default $st
    table.set 0
    i32.const 7
    i32.const 0
    array.new_default $at
    table.set 0
    i32.const 8
    i32.const 0
    array.new_default $at
    table.set 0
  )
  (func (;1;) (type 8) (param $i i32) (param $j i32) (result i32)
    local.get $i
    table.get 0
    local.get $j
    table.get 0
    ref.eq
  )
  (table (;0;) 20 (ref null (shared eq)))
  (export "init" (func 0))
  (export "eq" (func 1))
)
