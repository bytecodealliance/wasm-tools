interface foo {}
interface bar {}

world the-world {
  import foo: self.foo
  import bar: self.bar
  import baz: interface {
    foo: func()
  }
  export foo: self.foo
  export bar: self.bar
  export baz: interface {
    foo: func()
  }
}

default world a-different-world {
  import foo: self.foo
}

interface i1 {
  type t = u32
}
interface i2 {
  use self.i1.{t}
}
interface i3 {
  use self.i2.{t}
}

world test {
  import i3: self.i3

  export i1: self.i1

  // This should insert an implicit dependency on `i2` as an import, and then
  // i2's dependency on i1 should be wired up to i3's implicit imported
  // dependency on i1.
  export i3: self.i3
}
