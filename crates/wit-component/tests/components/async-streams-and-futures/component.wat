(component
  (type (;0;)
    (instance
      (type (;0;) (future u32))
      (type (;1;) (future 0))
      (type (;2;) (stream string))
      (type (;3;) (func (param "x" 1) (param "y" u32) (result 2)))
      (export (;0;) "foo" (func (type 3)))
    )
  )
  (import "foo:foo/bar" (instance (;0;) (type 0)))
  (type (;1;) (future u32))
  (type (;2;) (future 1))
  (type (;3;) (stream string))
  (type (;4;) (func (param "x" 2) (param "y" u32) (result 3)))
  (import "foo" (func (;0;) (type 4)))
  (core module (;0;)
    (type (;0;) (func (param i32 i32) (result i32)))
    (type (;1;) (func (result i32)))
    (type (;2;) (func (param i32 i32 i32) (result i32)))
    (type (;3;) (func (param i32) (result i32)))
    (type (;4;) (func (param i32)))
    (type (;5;) (func (param i32 i32)))
    (type (;6;) (func (param i32 i32 i32 i32) (result i32)))
    (import "$root" "[async]foo" (func (;0;) (type 0)))
    (import "foo:foo/bar" "[async]foo" (func (;1;) (type 0)))
    (import "[import-payload]$root" "[stream-new-2]foo" (func (;2;) (type 1)))
    (import "[import-payload]$root" "[stream-read-2]foo" (func (;3;) (type 2)))
    (import "[import-payload]$root" "[stream-write-2]foo" (func (;4;) (type 2)))
    (import "[import-payload]$root" "[stream-cancel-read-2]foo" (func (;5;) (type 3)))
    (import "[import-payload]$root" "[stream-cancel-write-2]foo" (func (;6;) (type 3)))
    (import "[import-payload]$root" "[stream-close-readable-2]foo" (func (;7;) (type 4)))
    (import "[import-payload]$root" "[stream-close-writable-2]foo" (func (;8;) (type 5)))
    (import "[import-payload]foo:foo/bar" "[stream-new-2]foo" (func (;9;) (type 1)))
    (import "[import-payload]foo:foo/bar" "[stream-read-2]foo" (func (;10;) (type 2)))
    (import "[import-payload]foo:foo/bar" "[stream-write-2]foo" (func (;11;) (type 2)))
    (import "[import-payload]foo:foo/bar" "[stream-cancel-read-2]foo" (func (;12;) (type 3)))
    (import "[import-payload]foo:foo/bar" "[stream-cancel-write-2]foo" (func (;13;) (type 3)))
    (import "[import-payload]foo:foo/bar" "[stream-close-readable-2]foo" (func (;14;) (type 4)))
    (import "[import-payload]foo:foo/bar" "[stream-close-writable-2]foo" (func (;15;) (type 5)))
    (import "[import-payload]$root" "[future-new-0]foo" (func (;16;) (type 1)))
    (import "[import-payload]$root" "[future-read-0]foo" (func (;17;) (type 0)))
    (import "[import-payload]$root" "[future-write-0]foo" (func (;18;) (type 0)))
    (import "[import-payload]$root" "[future-cancel-read-0]foo" (func (;19;) (type 3)))
    (import "[import-payload]$root" "[future-cancel-write-0]foo" (func (;20;) (type 3)))
    (import "[import-payload]$root" "[future-close-readable-0]foo" (func (;21;) (type 4)))
    (import "[import-payload]$root" "[future-close-writable-0]foo" (func (;22;) (type 5)))
    (import "[import-payload]foo:foo/bar" "[future-new-0]foo" (func (;23;) (type 1)))
    (import "[import-payload]foo:foo/bar" "[future-read-0]foo" (func (;24;) (type 0)))
    (import "[import-payload]foo:foo/bar" "[future-write-0]foo" (func (;25;) (type 0)))
    (import "[import-payload]foo:foo/bar" "[future-cancel-read-0]foo" (func (;26;) (type 3)))
    (import "[import-payload]foo:foo/bar" "[future-cancel-write-0]foo" (func (;27;) (type 3)))
    (import "[import-payload]foo:foo/bar" "[future-close-readable-0]foo" (func (;28;) (type 4)))
    (import "[import-payload]foo:foo/bar" "[future-close-writable-0]foo" (func (;29;) (type 5)))
    (import "[import-payload]$root" "[future-new-1]foo" (func (;30;) (type 1)))
    (import "[import-payload]$root" "[future-read-1]foo" (func (;31;) (type 0)))
    (import "[import-payload]$root" "[future-write-1]foo" (func (;32;) (type 0)))
    (import "[import-payload]$root" "[future-cancel-read-1]foo" (func (;33;) (type 3)))
    (import "[import-payload]$root" "[future-cancel-write-1]foo" (func (;34;) (type 3)))
    (import "[import-payload]$root" "[future-close-readable-1]foo" (func (;35;) (type 4)))
    (import "[import-payload]$root" "[future-close-writable-1]foo" (func (;36;) (type 5)))
    (import "[import-payload]foo:foo/bar" "[future-new-1]foo" (func (;37;) (type 1)))
    (import "[import-payload]foo:foo/bar" "[future-read-1]foo" (func (;38;) (type 0)))
    (import "[import-payload]foo:foo/bar" "[future-write-1]foo" (func (;39;) (type 0)))
    (import "[import-payload]foo:foo/bar" "[future-cancel-read-1]foo" (func (;40;) (type 3)))
    (import "[import-payload]foo:foo/bar" "[future-cancel-write-1]foo" (func (;41;) (type 3)))
    (import "[import-payload]foo:foo/bar" "[future-close-readable-1]foo" (func (;42;) (type 4)))
    (import "[import-payload]foo:foo/bar" "[future-close-writable-1]foo" (func (;43;) (type 5)))
    (import "[export-payload]$root" "[stream-new-2]foo" (func (;44;) (type 1)))
    (import "[export-payload]$root" "[stream-read-2]foo" (func (;45;) (type 2)))
    (import "[export-payload]$root" "[stream-write-2]foo" (func (;46;) (type 2)))
    (import "[export-payload]$root" "[stream-cancel-read-2]foo" (func (;47;) (type 3)))
    (import "[export-payload]$root" "[stream-cancel-write-2]foo" (func (;48;) (type 3)))
    (import "[export-payload]$root" "[stream-close-readable-2]foo" (func (;49;) (type 4)))
    (import "[export-payload]$root" "[stream-close-writable-2]foo" (func (;50;) (type 5)))
    (import "[export-payload]foo:foo/bar" "[stream-new-2]foo" (func (;51;) (type 1)))
    (import "[export-payload]foo:foo/bar" "[stream-read-2]foo" (func (;52;) (type 2)))
    (import "[export-payload]foo:foo/bar" "[stream-write-2]foo" (func (;53;) (type 2)))
    (import "[export-payload]foo:foo/bar" "[stream-cancel-read-2]foo" (func (;54;) (type 3)))
    (import "[export-payload]foo:foo/bar" "[stream-cancel-write-2]foo" (func (;55;) (type 3)))
    (import "[export-payload]foo:foo/bar" "[stream-close-readable-2]foo" (func (;56;) (type 4)))
    (import "[export-payload]foo:foo/bar" "[stream-close-writable-2]foo" (func (;57;) (type 5)))
    (import "[export-payload]$root" "[future-new-0]foo" (func (;58;) (type 1)))
    (import "[export-payload]$root" "[future-read-0]foo" (func (;59;) (type 0)))
    (import "[export-payload]$root" "[future-write-0]foo" (func (;60;) (type 0)))
    (import "[export-payload]$root" "[future-cancel-read-0]foo" (func (;61;) (type 3)))
    (import "[export-payload]$root" "[future-cancel-write-0]foo" (func (;62;) (type 3)))
    (import "[export-payload]$root" "[future-close-readable-0]foo" (func (;63;) (type 4)))
    (import "[export-payload]$root" "[future-close-writable-0]foo" (func (;64;) (type 5)))
    (import "[export-payload]foo:foo/bar" "[future-new-0]foo" (func (;65;) (type 1)))
    (import "[export-payload]foo:foo/bar" "[future-read-0]foo" (func (;66;) (type 0)))
    (import "[export-payload]foo:foo/bar" "[future-write-0]foo" (func (;67;) (type 0)))
    (import "[export-payload]foo:foo/bar" "[future-cancel-read-0]foo" (func (;68;) (type 3)))
    (import "[export-payload]foo:foo/bar" "[future-cancel-write-0]foo" (func (;69;) (type 3)))
    (import "[export-payload]foo:foo/bar" "[future-close-readable-0]foo" (func (;70;) (type 4)))
    (import "[export-payload]foo:foo/bar" "[future-close-writable-0]foo" (func (;71;) (type 5)))
    (import "[export-payload]$root" "[future-new-1]foo" (func (;72;) (type 1)))
    (import "[export-payload]$root" "[future-read-1]foo" (func (;73;) (type 0)))
    (import "[export-payload]$root" "[future-write-1]foo" (func (;74;) (type 0)))
    (import "[export-payload]$root" "[future-cancel-read-1]foo" (func (;75;) (type 3)))
    (import "[export-payload]$root" "[future-cancel-write-1]foo" (func (;76;) (type 3)))
    (import "[export-payload]$root" "[future-close-readable-1]foo" (func (;77;) (type 4)))
    (import "[export-payload]$root" "[future-close-writable-1]foo" (func (;78;) (type 5)))
    (import "[export-payload]foo:foo/bar" "[future-new-1]foo" (func (;79;) (type 1)))
    (import "[export-payload]foo:foo/bar" "[future-read-1]foo" (func (;80;) (type 0)))
    (import "[export-payload]foo:foo/bar" "[future-write-1]foo" (func (;81;) (type 0)))
    (import "[export-payload]foo:foo/bar" "[future-cancel-read-1]foo" (func (;82;) (type 3)))
    (import "[export-payload]foo:foo/bar" "[future-cancel-write-1]foo" (func (;83;) (type 3)))
    (import "[export-payload]foo:foo/bar" "[future-close-readable-1]foo" (func (;84;) (type 4)))
    (import "[export-payload]foo:foo/bar" "[future-close-writable-1]foo" (func (;85;) (type 5)))
    (memory (;0;) 1)
    (export "[async-stackful]foo" (func 86))
    (export "[async-stackful]foo:foo/bar#foo" (func 87))
    (export "memory" (memory 0))
    (export "cabi_realloc" (func 88))
    (func (;86;) (type 5) (param i32 i32)
      unreachable
    )
    (func (;87;) (type 5) (param i32 i32)
      unreachable
    )
    (func (;88;) (type 6) (param i32 i32 i32 i32) (result i32)
      unreachable
    )
    (@producers
      (processed-by "wit-component" "$CARGO_PKG_VERSION")
      (processed-by "my-fake-bindgen" "123.45")
    )
  )
  (core module (;1;)
    (type (;0;) (func (param i32 i32) (result i32)))
    (type (;1;) (func (param i32 i32 i32) (result i32)))
    (type (;2;) (func (param i32 i32) (result i32)))
    (table (;0;) 26 26 funcref)
    (export "0" (func $"indirect-$root-[async]foo"))
    (export "1" (func $"indirect-foo:foo/bar-[async]foo"))
    (export "2" (func $"[import-payload]$root-[stream-read-2]foo"))
    (export "3" (func $"[import-payload]$root-[stream-write-2]foo"))
    (export "4" (func $"[import-payload]$root-[future-read-0]foo"))
    (export "5" (func $"[import-payload]$root-[future-write-0]foo"))
    (export "6" (func $"[import-payload]$root-[future-read-1]foo"))
    (export "7" (func $"[import-payload]$root-[future-write-1]foo"))
    (export "8" (func $"[import-payload]foo:foo/bar-[stream-read-2]foo"))
    (export "9" (func $"[import-payload]foo:foo/bar-[stream-write-2]foo"))
    (export "10" (func $"[import-payload]foo:foo/bar-[future-read-0]foo"))
    (export "11" (func $"[import-payload]foo:foo/bar-[future-write-0]foo"))
    (export "12" (func $"[import-payload]foo:foo/bar-[future-read-1]foo"))
    (export "13" (func $"[import-payload]foo:foo/bar-[future-write-1]foo"))
    (export "14" (func $"[export-payload]$root-[stream-read-2]foo"))
    (export "15" (func $"[export-payload]$root-[stream-write-2]foo"))
    (export "16" (func $"[export-payload]$root-[future-read-0]foo"))
    (export "17" (func $"[export-payload]$root-[future-write-0]foo"))
    (export "18" (func $"[export-payload]$root-[future-read-1]foo"))
    (export "19" (func $"[export-payload]$root-[future-write-1]foo"))
    (export "20" (func $"[export-payload]foo:foo/bar-[stream-read-2]foo"))
    (export "21" (func $"[export-payload]foo:foo/bar-[stream-write-2]foo"))
    (export "22" (func $"[export-payload]foo:foo/bar-[future-read-0]foo"))
    (export "23" (func $"[export-payload]foo:foo/bar-[future-write-0]foo"))
    (export "24" (func $"[export-payload]foo:foo/bar-[future-read-1]foo"))
    (export "25" (func $"[export-payload]foo:foo/bar-[future-write-1]foo"))
    (export "$imports" (table 0))
    (func $"indirect-$root-[async]foo" (;0;) (type 0) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 0
      call_indirect (type 0)
    )
    (func $"indirect-foo:foo/bar-[async]foo" (;1;) (type 0) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 1
      call_indirect (type 0)
    )
    (func $"[import-payload]$root-[stream-read-2]foo" (;2;) (type 1) (param i32 i32 i32) (result i32)
      local.get 0
      local.get 1
      local.get 2
      i32.const 2
      call_indirect (type 1)
    )
    (func $"[import-payload]$root-[stream-write-2]foo" (;3;) (type 1) (param i32 i32 i32) (result i32)
      local.get 0
      local.get 1
      local.get 2
      i32.const 3
      call_indirect (type 1)
    )
    (func $"[import-payload]$root-[future-read-0]foo" (;4;) (type 2) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 4
      call_indirect (type 2)
    )
    (func $"[import-payload]$root-[future-write-0]foo" (;5;) (type 2) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 5
      call_indirect (type 2)
    )
    (func $"[import-payload]$root-[future-read-1]foo" (;6;) (type 2) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 6
      call_indirect (type 2)
    )
    (func $"[import-payload]$root-[future-write-1]foo" (;7;) (type 2) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 7
      call_indirect (type 2)
    )
    (func $"[import-payload]foo:foo/bar-[stream-read-2]foo" (;8;) (type 1) (param i32 i32 i32) (result i32)
      local.get 0
      local.get 1
      local.get 2
      i32.const 8
      call_indirect (type 1)
    )
    (func $"[import-payload]foo:foo/bar-[stream-write-2]foo" (;9;) (type 1) (param i32 i32 i32) (result i32)
      local.get 0
      local.get 1
      local.get 2
      i32.const 9
      call_indirect (type 1)
    )
    (func $"[import-payload]foo:foo/bar-[future-read-0]foo" (;10;) (type 2) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 10
      call_indirect (type 2)
    )
    (func $"[import-payload]foo:foo/bar-[future-write-0]foo" (;11;) (type 2) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 11
      call_indirect (type 2)
    )
    (func $"[import-payload]foo:foo/bar-[future-read-1]foo" (;12;) (type 2) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 12
      call_indirect (type 2)
    )
    (func $"[import-payload]foo:foo/bar-[future-write-1]foo" (;13;) (type 2) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 13
      call_indirect (type 2)
    )
    (func $"[export-payload]$root-[stream-read-2]foo" (;14;) (type 1) (param i32 i32 i32) (result i32)
      local.get 0
      local.get 1
      local.get 2
      i32.const 14
      call_indirect (type 1)
    )
    (func $"[export-payload]$root-[stream-write-2]foo" (;15;) (type 1) (param i32 i32 i32) (result i32)
      local.get 0
      local.get 1
      local.get 2
      i32.const 15
      call_indirect (type 1)
    )
    (func $"[export-payload]$root-[future-read-0]foo" (;16;) (type 2) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 16
      call_indirect (type 2)
    )
    (func $"[export-payload]$root-[future-write-0]foo" (;17;) (type 2) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 17
      call_indirect (type 2)
    )
    (func $"[export-payload]$root-[future-read-1]foo" (;18;) (type 2) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 18
      call_indirect (type 2)
    )
    (func $"[export-payload]$root-[future-write-1]foo" (;19;) (type 2) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 19
      call_indirect (type 2)
    )
    (func $"[export-payload]foo:foo/bar-[stream-read-2]foo" (;20;) (type 1) (param i32 i32 i32) (result i32)
      local.get 0
      local.get 1
      local.get 2
      i32.const 20
      call_indirect (type 1)
    )
    (func $"[export-payload]foo:foo/bar-[stream-write-2]foo" (;21;) (type 1) (param i32 i32 i32) (result i32)
      local.get 0
      local.get 1
      local.get 2
      i32.const 21
      call_indirect (type 1)
    )
    (func $"[export-payload]foo:foo/bar-[future-read-0]foo" (;22;) (type 2) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 22
      call_indirect (type 2)
    )
    (func $"[export-payload]foo:foo/bar-[future-write-0]foo" (;23;) (type 2) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 23
      call_indirect (type 2)
    )
    (func $"[export-payload]foo:foo/bar-[future-read-1]foo" (;24;) (type 2) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 24
      call_indirect (type 2)
    )
    (func $"[export-payload]foo:foo/bar-[future-write-1]foo" (;25;) (type 2) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 25
      call_indirect (type 2)
    )
    (@producers
      (processed-by "wit-component" "$CARGO_PKG_VERSION")
    )
  )
  (core module (;2;)
    (type (;0;) (func (param i32 i32) (result i32)))
    (type (;1;) (func (param i32 i32 i32) (result i32)))
    (type (;2;) (func (param i32 i32) (result i32)))
    (import "" "0" (func (;0;) (type 0)))
    (import "" "1" (func (;1;) (type 0)))
    (import "" "2" (func (;2;) (type 1)))
    (import "" "3" (func (;3;) (type 1)))
    (import "" "4" (func (;4;) (type 2)))
    (import "" "5" (func (;5;) (type 2)))
    (import "" "6" (func (;6;) (type 2)))
    (import "" "7" (func (;7;) (type 2)))
    (import "" "8" (func (;8;) (type 1)))
    (import "" "9" (func (;9;) (type 1)))
    (import "" "10" (func (;10;) (type 2)))
    (import "" "11" (func (;11;) (type 2)))
    (import "" "12" (func (;12;) (type 2)))
    (import "" "13" (func (;13;) (type 2)))
    (import "" "14" (func (;14;) (type 1)))
    (import "" "15" (func (;15;) (type 1)))
    (import "" "16" (func (;16;) (type 2)))
    (import "" "17" (func (;17;) (type 2)))
    (import "" "18" (func (;18;) (type 2)))
    (import "" "19" (func (;19;) (type 2)))
    (import "" "20" (func (;20;) (type 1)))
    (import "" "21" (func (;21;) (type 1)))
    (import "" "22" (func (;22;) (type 2)))
    (import "" "23" (func (;23;) (type 2)))
    (import "" "24" (func (;24;) (type 2)))
    (import "" "25" (func (;25;) (type 2)))
    (import "" "$imports" (table (;0;) 26 26 funcref))
    (elem (;0;) (i32.const 0) func 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25)
    (@producers
      (processed-by "wit-component" "$CARGO_PKG_VERSION")
    )
  )
  (core instance (;0;) (instantiate 1))
  (alias core export 0 "0" (core func (;0;)))
  (core instance (;1;)
    (export "[async]foo" (func 0))
  )
  (alias core export 0 "1" (core func (;1;)))
  (core instance (;2;)
    (export "[async]foo" (func 1))
  )
  (core func (;2;) (canon stream.new 3))
  (alias core export 0 "2" (core func (;3;)))
  (alias core export 0 "3" (core func (;4;)))
  (core func (;5;) (canon stream.cancel-read 3))
  (core func (;6;) (canon stream.cancel-write 3))
  (core func (;7;) (canon stream.close-readable 3))
  (core func (;8;) (canon stream.close-writable 3))
  (core func (;9;) (canon future.new 1))
  (alias core export 0 "4" (core func (;10;)))
  (alias core export 0 "5" (core func (;11;)))
  (core func (;12;) (canon future.cancel-read 1))
  (core func (;13;) (canon future.cancel-write 1))
  (core func (;14;) (canon future.close-readable 1))
  (core func (;15;) (canon future.close-writable 1))
  (core func (;16;) (canon future.new 2))
  (alias core export 0 "6" (core func (;17;)))
  (alias core export 0 "7" (core func (;18;)))
  (core func (;19;) (canon future.cancel-read 2))
  (core func (;20;) (canon future.cancel-write 2))
  (core func (;21;) (canon future.close-readable 2))
  (core func (;22;) (canon future.close-writable 2))
  (core instance (;3;)
    (export "[stream-new-2]foo" (func 2))
    (export "[stream-read-2]foo" (func 3))
    (export "[stream-write-2]foo" (func 4))
    (export "[stream-cancel-read-2]foo" (func 5))
    (export "[stream-cancel-write-2]foo" (func 6))
    (export "[stream-close-readable-2]foo" (func 7))
    (export "[stream-close-writable-2]foo" (func 8))
    (export "[future-new-0]foo" (func 9))
    (export "[future-read-0]foo" (func 10))
    (export "[future-write-0]foo" (func 11))
    (export "[future-cancel-read-0]foo" (func 12))
    (export "[future-cancel-write-0]foo" (func 13))
    (export "[future-close-readable-0]foo" (func 14))
    (export "[future-close-writable-0]foo" (func 15))
    (export "[future-new-1]foo" (func 16))
    (export "[future-read-1]foo" (func 17))
    (export "[future-write-1]foo" (func 18))
    (export "[future-cancel-read-1]foo" (func 19))
    (export "[future-cancel-write-1]foo" (func 20))
    (export "[future-close-readable-1]foo" (func 21))
    (export "[future-close-writable-1]foo" (func 22))
  )
  (type (;5;) (stream string))
  (core func (;23;) (canon stream.new 5))
  (alias core export 0 "8" (core func (;24;)))
  (alias core export 0 "9" (core func (;25;)))
  (core func (;26;) (canon stream.cancel-read 5))
  (core func (;27;) (canon stream.cancel-write 5))
  (core func (;28;) (canon stream.close-readable 5))
  (core func (;29;) (canon stream.close-writable 5))
  (type (;6;) (future u32))
  (core func (;30;) (canon future.new 6))
  (alias core export 0 "10" (core func (;31;)))
  (alias core export 0 "11" (core func (;32;)))
  (core func (;33;) (canon future.cancel-read 6))
  (core func (;34;) (canon future.cancel-write 6))
  (core func (;35;) (canon future.close-readable 6))
  (core func (;36;) (canon future.close-writable 6))
  (type (;7;) (future 6))
  (core func (;37;) (canon future.new 7))
  (alias core export 0 "12" (core func (;38;)))
  (alias core export 0 "13" (core func (;39;)))
  (core func (;40;) (canon future.cancel-read 7))
  (core func (;41;) (canon future.cancel-write 7))
  (core func (;42;) (canon future.close-readable 7))
  (core func (;43;) (canon future.close-writable 7))
  (core instance (;4;)
    (export "[stream-new-2]foo" (func 23))
    (export "[stream-read-2]foo" (func 24))
    (export "[stream-write-2]foo" (func 25))
    (export "[stream-cancel-read-2]foo" (func 26))
    (export "[stream-cancel-write-2]foo" (func 27))
    (export "[stream-close-readable-2]foo" (func 28))
    (export "[stream-close-writable-2]foo" (func 29))
    (export "[future-new-0]foo" (func 30))
    (export "[future-read-0]foo" (func 31))
    (export "[future-write-0]foo" (func 32))
    (export "[future-cancel-read-0]foo" (func 33))
    (export "[future-cancel-write-0]foo" (func 34))
    (export "[future-close-readable-0]foo" (func 35))
    (export "[future-close-writable-0]foo" (func 36))
    (export "[future-new-1]foo" (func 37))
    (export "[future-read-1]foo" (func 38))
    (export "[future-write-1]foo" (func 39))
    (export "[future-cancel-read-1]foo" (func 40))
    (export "[future-cancel-write-1]foo" (func 41))
    (export "[future-close-readable-1]foo" (func 42))
    (export "[future-close-writable-1]foo" (func 43))
  )
  (type (;8;) (stream string))
  (core func (;44;) (canon stream.new 8))
  (alias core export 0 "14" (core func (;45;)))
  (alias core export 0 "15" (core func (;46;)))
  (core func (;47;) (canon stream.cancel-read 8))
  (core func (;48;) (canon stream.cancel-write 8))
  (core func (;49;) (canon stream.close-readable 8))
  (core func (;50;) (canon stream.close-writable 8))
  (type (;9;) (future u32))
  (core func (;51;) (canon future.new 9))
  (alias core export 0 "16" (core func (;52;)))
  (alias core export 0 "17" (core func (;53;)))
  (core func (;54;) (canon future.cancel-read 9))
  (core func (;55;) (canon future.cancel-write 9))
  (core func (;56;) (canon future.close-readable 9))
  (core func (;57;) (canon future.close-writable 9))
  (type (;10;) (future 9))
  (core func (;58;) (canon future.new 10))
  (alias core export 0 "18" (core func (;59;)))
  (alias core export 0 "19" (core func (;60;)))
  (core func (;61;) (canon future.cancel-read 10))
  (core func (;62;) (canon future.cancel-write 10))
  (core func (;63;) (canon future.close-readable 10))
  (core func (;64;) (canon future.close-writable 10))
  (core instance (;5;)
    (export "[stream-new-2]foo" (func 44))
    (export "[stream-read-2]foo" (func 45))
    (export "[stream-write-2]foo" (func 46))
    (export "[stream-cancel-read-2]foo" (func 47))
    (export "[stream-cancel-write-2]foo" (func 48))
    (export "[stream-close-readable-2]foo" (func 49))
    (export "[stream-close-writable-2]foo" (func 50))
    (export "[future-new-0]foo" (func 51))
    (export "[future-read-0]foo" (func 52))
    (export "[future-write-0]foo" (func 53))
    (export "[future-cancel-read-0]foo" (func 54))
    (export "[future-cancel-write-0]foo" (func 55))
    (export "[future-close-readable-0]foo" (func 56))
    (export "[future-close-writable-0]foo" (func 57))
    (export "[future-new-1]foo" (func 58))
    (export "[future-read-1]foo" (func 59))
    (export "[future-write-1]foo" (func 60))
    (export "[future-cancel-read-1]foo" (func 61))
    (export "[future-cancel-write-1]foo" (func 62))
    (export "[future-close-readable-1]foo" (func 63))
    (export "[future-close-writable-1]foo" (func 64))
  )
  (type (;11;) (stream string))
  (core func (;65;) (canon stream.new 11))
  (alias core export 0 "20" (core func (;66;)))
  (alias core export 0 "21" (core func (;67;)))
  (core func (;68;) (canon stream.cancel-read 11))
  (core func (;69;) (canon stream.cancel-write 11))
  (core func (;70;) (canon stream.close-readable 11))
  (core func (;71;) (canon stream.close-writable 11))
  (type (;12;) (future u32))
  (core func (;72;) (canon future.new 12))
  (alias core export 0 "22" (core func (;73;)))
  (alias core export 0 "23" (core func (;74;)))
  (core func (;75;) (canon future.cancel-read 12))
  (core func (;76;) (canon future.cancel-write 12))
  (core func (;77;) (canon future.close-readable 12))
  (core func (;78;) (canon future.close-writable 12))
  (type (;13;) (future 12))
  (core func (;79;) (canon future.new 13))
  (alias core export 0 "24" (core func (;80;)))
  (alias core export 0 "25" (core func (;81;)))
  (core func (;82;) (canon future.cancel-read 13))
  (core func (;83;) (canon future.cancel-write 13))
  (core func (;84;) (canon future.close-readable 13))
  (core func (;85;) (canon future.close-writable 13))
  (core instance (;6;)
    (export "[stream-new-2]foo" (func 65))
    (export "[stream-read-2]foo" (func 66))
    (export "[stream-write-2]foo" (func 67))
    (export "[stream-cancel-read-2]foo" (func 68))
    (export "[stream-cancel-write-2]foo" (func 69))
    (export "[stream-close-readable-2]foo" (func 70))
    (export "[stream-close-writable-2]foo" (func 71))
    (export "[future-new-0]foo" (func 72))
    (export "[future-read-0]foo" (func 73))
    (export "[future-write-0]foo" (func 74))
    (export "[future-cancel-read-0]foo" (func 75))
    (export "[future-cancel-write-0]foo" (func 76))
    (export "[future-close-readable-0]foo" (func 77))
    (export "[future-close-writable-0]foo" (func 78))
    (export "[future-new-1]foo" (func 79))
    (export "[future-read-1]foo" (func 80))
    (export "[future-write-1]foo" (func 81))
    (export "[future-cancel-read-1]foo" (func 82))
    (export "[future-cancel-write-1]foo" (func 83))
    (export "[future-close-readable-1]foo" (func 84))
    (export "[future-close-writable-1]foo" (func 85))
  )
  (core instance (;7;) (instantiate 0
      (with "$root" (instance 1))
      (with "foo:foo/bar" (instance 2))
      (with "[import-payload]$root" (instance 3))
      (with "[import-payload]foo:foo/bar" (instance 4))
      (with "[export-payload]$root" (instance 5))
      (with "[export-payload]foo:foo/bar" (instance 6))
    )
  )
  (alias core export 7 "memory" (core memory (;0;)))
  (alias core export 0 "$imports" (core table (;0;)))
  (alias core export 7 "cabi_realloc" (core func (;86;)))
  (core func (;87;) (canon lower (func 0) (memory 0) async))
  (alias export 0 "foo" (func (;1;)))
  (core func (;88;) (canon lower (func 1) (memory 0) async))
  (core func (;89;) (canon stream.read 3 (memory 0) (realloc 86) string-encoding=utf8))
  (core func (;90;) (canon stream.write 3 (memory 0) string-encoding=utf8))
  (core func (;91;) (canon future.read 1 (memory 0)))
  (core func (;92;) (canon future.write 1 (memory 0)))
  (core func (;93;) (canon future.read 2 (memory 0)))
  (core func (;94;) (canon future.write 2 (memory 0)))
  (core func (;95;) (canon stream.read 5 (memory 0) (realloc 86) string-encoding=utf8))
  (core func (;96;) (canon stream.write 5 (memory 0) string-encoding=utf8))
  (core func (;97;) (canon future.read 6 (memory 0)))
  (core func (;98;) (canon future.write 6 (memory 0)))
  (core func (;99;) (canon future.read 7 (memory 0)))
  (core func (;100;) (canon future.write 7 (memory 0)))
  (core func (;101;) (canon stream.read 8 (memory 0) (realloc 86) string-encoding=utf8))
  (core func (;102;) (canon stream.write 8 (memory 0) string-encoding=utf8))
  (core func (;103;) (canon future.read 9 (memory 0)))
  (core func (;104;) (canon future.write 9 (memory 0)))
  (core func (;105;) (canon future.read 10 (memory 0)))
  (core func (;106;) (canon future.write 10 (memory 0)))
  (core func (;107;) (canon stream.read 11 (memory 0) (realloc 86) string-encoding=utf8))
  (core func (;108;) (canon stream.write 11 (memory 0) string-encoding=utf8))
  (core func (;109;) (canon future.read 12 (memory 0)))
  (core func (;110;) (canon future.write 12 (memory 0)))
  (core func (;111;) (canon future.read 13 (memory 0)))
  (core func (;112;) (canon future.write 13 (memory 0)))
  (core instance (;8;)
    (export "$imports" (table 0))
    (export "0" (func 87))
    (export "1" (func 88))
    (export "2" (func 89))
    (export "3" (func 90))
    (export "4" (func 91))
    (export "5" (func 92))
    (export "6" (func 93))
    (export "7" (func 94))
    (export "8" (func 95))
    (export "9" (func 96))
    (export "10" (func 97))
    (export "11" (func 98))
    (export "12" (func 99))
    (export "13" (func 100))
    (export "14" (func 101))
    (export "15" (func 102))
    (export "16" (func 103))
    (export "17" (func 104))
    (export "18" (func 105))
    (export "19" (func 106))
    (export "20" (func 107))
    (export "21" (func 108))
    (export "22" (func 109))
    (export "23" (func 110))
    (export "24" (func 111))
    (export "25" (func 112))
  )
  (core instance (;9;) (instantiate 2
      (with "" (instance 8))
    )
  )
  (alias core export 7 "[async-stackful]foo" (core func (;113;)))
  (func (;2;) (type 4) (canon lift (core func 113) async))
  (export (;3;) "foo" (func 2))
  (type (;14;) (func (param "x" 13) (param "y" u32) (result 11)))
  (alias core export 7 "[async-stackful]foo:foo/bar#foo" (core func (;114;)))
  (func (;4;) (type 14) (canon lift (core func 114) async))
  (component (;0;)
    (type (;0;) (future u32))
    (type (;1;) (future 0))
    (type (;2;) (stream string))
    (type (;3;) (func (param "x" 1) (param "y" u32) (result 2)))
    (import "import-func-foo" (func (;0;) (type 3)))
    (type (;4;) (future u32))
    (type (;5;) (future 4))
    (type (;6;) (stream string))
    (type (;7;) (func (param "x" 5) (param "y" u32) (result 6)))
    (export (;1;) "foo" (func 0) (func (type 7)))
  )
  (instance (;1;) (instantiate 0
      (with "import-func-foo" (func 4))
    )
  )
  (export (;2;) "foo:foo/bar" (instance 1))
  (@producers
    (processed-by "wit-component" "$CARGO_PKG_VERSION")
  )
)
