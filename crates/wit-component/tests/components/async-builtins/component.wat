(component
  (core module $main (;0;)
    (type (;0;) (func (param i32)))
    (type (;1;) (func))
    (type (;2;) (func (param i32 i32)))
    (type (;3;) (func (result i32)))
    (type (;4;) (func (param i32 i32) (result i32)))
    (type (;5;) (func (param i32) (result i32)))
    (type (;6;) (func (param i32 i32 i32 i32) (result i32)))
    (import "$root" "[backpressure-set]" (func (;0;) (type 0)))
    (import "$root" "[backpressure-inc]" (func (;1;) (type 1)))
    (import "$root" "[backpressure-dec]" (func (;2;) (type 1)))
    (import "[export]$root" "[task-cancel]" (func (;3;) (type 1)))
    (import "[export]$root" "[task-return]foo" (func (;4;) (type 2)))
    (import "[export]foo:foo/bar" "[task-return]foo" (func (;5;) (type 2)))
    (import "$root" "[waitable-set-new]" (func (;6;) (type 3)))
    (import "$root" "[waitable-set-wait]" (func (;7;) (type 4)))
    (import "$root" "[waitable-set-poll]" (func (;8;) (type 4)))
    (import "$root" "[waitable-set-drop]" (func (;9;) (type 0)))
    (import "$root" "[waitable-join]" (func (;10;) (type 2)))
    (import "$root" "[thread-yield]" (func (;11;) (type 3)))
    (import "$root" "[subtask-drop]" (func (;12;) (type 0)))
    (import "$root" "[subtask-cancel]" (func (;13;) (type 5)))
    (import "$root" "[error-context-new-utf8]" (func (;14;) (type 4)))
    (import "$root" "[error-context-new-utf16]" (func (;15;) (type 4)))
    (import "$root" "[error-context-new-latin1+utf16]" (func (;16;) (type 4)))
    (import "$root" "[error-context-debug-message-utf8]" (func (;17;) (type 2)))
    (import "$root" "[error-context-debug-message-utf16]" (func (;18;) (type 2)))
    (import "$root" "[error-context-debug-message-latin1+utf16]" (func (;19;) (type 2)))
    (import "$root" "[error-context-drop]" (func (;20;) (type 0)))
    (import "$root" "[context-get-0]" (func (;21;) (type 3)))
    (import "$root" "[context-set-0]" (func (;22;) (type 0)))
    (memory (;0;) 1)
    (export "[async-lift-stackful]foo" (func 23))
    (export "[async-lift-stackful]foo:foo/bar#foo" (func 24))
    (export "memory" (memory 0))
    (export "cabi_realloc" (func 25))
    (func (;23;) (type 2) (param i32 i32)
      unreachable
    )
    (func (;24;) (type 2) (param i32 i32)
      unreachable
    )
    (func (;25;) (type 6) (param i32 i32 i32 i32) (result i32)
      unreachable
    )
    (@producers
      (processed-by "wit-component" "$CARGO_PKG_VERSION")
      (processed-by "my-fake-bindgen" "123.45")
    )
  )
  (core module $wit-component-shim-module (;1;)
    (type (;0;) (func (param i32 i32) (result i32)))
    (type (;1;) (func (param i32 i32)))
    (type (;2;) (func (param i32 i32)))
    (table (;0;) 10 10 funcref)
    (export "0" (func $waitable-set.wait))
    (export "1" (func $waitable-set.poll))
    (export "2" (func $error-new))
    (export "3" (func $"#func3 error-new"))
    (export "4" (func $"#func4 error-new"))
    (export "5" (func $error-debug-message))
    (export "6" (func $"#func6 error-debug-message"))
    (export "7" (func $"#func7 error-debug-message"))
    (export "8" (func $task-return-foo))
    (export "9" (func $"#func9 task-return-foo"))
    (export "$imports" (table 0))
    (func $waitable-set.wait (;0;) (type 0) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 0
      call_indirect (type 0)
    )
    (func $waitable-set.poll (;1;) (type 0) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 1
      call_indirect (type 0)
    )
    (func $error-new (;2;) (type 0) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 2
      call_indirect (type 0)
    )
    (func $"#func3 error-new" (@name "error-new") (;3;) (type 0) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 3
      call_indirect (type 0)
    )
    (func $"#func4 error-new" (@name "error-new") (;4;) (type 0) (param i32 i32) (result i32)
      local.get 0
      local.get 1
      i32.const 4
      call_indirect (type 0)
    )
    (func $error-debug-message (;5;) (type 1) (param i32 i32)
      local.get 0
      local.get 1
      i32.const 5
      call_indirect (type 1)
    )
    (func $"#func6 error-debug-message" (@name "error-debug-message") (;6;) (type 1) (param i32 i32)
      local.get 0
      local.get 1
      i32.const 6
      call_indirect (type 1)
    )
    (func $"#func7 error-debug-message" (@name "error-debug-message") (;7;) (type 1) (param i32 i32)
      local.get 0
      local.get 1
      i32.const 7
      call_indirect (type 1)
    )
    (func $task-return-foo (;8;) (type 2) (param i32 i32)
      local.get 0
      local.get 1
      i32.const 8
      call_indirect (type 2)
    )
    (func $"#func9 task-return-foo" (@name "task-return-foo") (;9;) (type 2) (param i32 i32)
      local.get 0
      local.get 1
      i32.const 9
      call_indirect (type 2)
    )
    (@producers
      (processed-by "wit-component" "$CARGO_PKG_VERSION")
    )
  )
  (core module $wit-component-fixup (;2;)
    (type (;0;) (func (param i32 i32) (result i32)))
    (type (;1;) (func (param i32 i32)))
    (type (;2;) (func (param i32 i32)))
    (import "" "0" (func (;0;) (type 0)))
    (import "" "1" (func (;1;) (type 0)))
    (import "" "2" (func (;2;) (type 0)))
    (import "" "3" (func (;3;) (type 0)))
    (import "" "4" (func (;4;) (type 0)))
    (import "" "5" (func (;5;) (type 1)))
    (import "" "6" (func (;6;) (type 1)))
    (import "" "7" (func (;7;) (type 1)))
    (import "" "8" (func (;8;) (type 2)))
    (import "" "9" (func (;9;) (type 2)))
    (import "" "$imports" (table (;0;) 10 10 funcref))
    (elem (;0;) (i32.const 0) func 0 1 2 3 4 5 6 7 8 9)
    (@producers
      (processed-by "wit-component" "$CARGO_PKG_VERSION")
    )
  )
  (core instance $wit-component-shim-instance (;0;) (instantiate $wit-component-shim-module))
  (core func $backpressure.set (;0;) (canon backpressure.set))
  (core func $backpressure.inc (;1;) (canon backpressure.inc))
  (core func $backpressure.dec (;2;) (canon backpressure.dec))
  (core func $waitable-set.new (;3;) (canon waitable-set.new))
  (alias core export $wit-component-shim-instance "0" (core func $waitable-set.wait (;4;)))
  (alias core export $wit-component-shim-instance "1" (core func $waitable-set.poll (;5;)))
  (core func $waitable-set.drop (;6;) (canon waitable-set.drop))
  (core func $waitable.join (;7;) (canon waitable.join))
  (core func $thread.yield (;8;) (canon thread.yield))
  (core func $subtask.drop (;9;) (canon subtask.drop))
  (core func $subtask.cancel (;10;) (canon subtask.cancel))
  (alias core export $wit-component-shim-instance "2" (core func $error-new (;11;)))
  (alias core export $wit-component-shim-instance "3" (core func $"#core-func12 error-new" (@name "error-new") (;12;)))
  (alias core export $wit-component-shim-instance "4" (core func $"#core-func13 error-new" (@name "error-new") (;13;)))
  (alias core export $wit-component-shim-instance "5" (core func $error-debug-message (;14;)))
  (alias core export $wit-component-shim-instance "6" (core func $"#core-func15 error-debug-message" (@name "error-debug-message") (;15;)))
  (alias core export $wit-component-shim-instance "7" (core func $"#core-func16 error-debug-message" (@name "error-debug-message") (;16;)))
  (core func $error-context.drop (;17;) (canon error-context.drop))
  (core func $"context.get 0" (;18;) (canon context.get i32 0))
  (core func $"context.set 0" (;19;) (canon context.set i32 0))
  (core instance $$root (;1;)
    (export "[backpressure-set]" (func $backpressure.set))
    (export "[backpressure-inc]" (func $backpressure.inc))
    (export "[backpressure-dec]" (func $backpressure.dec))
    (export "[waitable-set-new]" (func $waitable-set.new))
    (export "[waitable-set-wait]" (func $waitable-set.wait))
    (export "[waitable-set-poll]" (func $waitable-set.poll))
    (export "[waitable-set-drop]" (func $waitable-set.drop))
    (export "[waitable-join]" (func $waitable.join))
    (export "[thread-yield]" (func $thread.yield))
    (export "[subtask-drop]" (func $subtask.drop))
    (export "[subtask-cancel]" (func $subtask.cancel))
    (export "[error-context-new-utf8]" (func $error-new))
    (export "[error-context-new-utf16]" (func $"#core-func12 error-new"))
    (export "[error-context-new-latin1+utf16]" (func $"#core-func13 error-new"))
    (export "[error-context-debug-message-utf8]" (func $error-debug-message))
    (export "[error-context-debug-message-utf16]" (func $"#core-func15 error-debug-message"))
    (export "[error-context-debug-message-latin1+utf16]" (func $"#core-func16 error-debug-message"))
    (export "[error-context-drop]" (func $error-context.drop))
    (export "[context-get-0]" (func $"context.get 0"))
    (export "[context-set-0]" (func $"context.set 0"))
  )
  (core func $task.cancel (;20;) (canon task.cancel))
  (alias core export $wit-component-shim-instance "8" (core func $task-return-foo (;21;)))
  (core instance $"[export]$root" (;2;)
    (export "[task-cancel]" (func $task.cancel))
    (export "[task-return]foo" (func $task-return-foo))
  )
  (alias core export $wit-component-shim-instance "9" (core func $"#core-func22 task-return-foo" (@name "task-return-foo") (;22;)))
  (core instance $"[export]foo:foo/bar" (;3;)
    (export "[task-return]foo" (func $"#core-func22 task-return-foo"))
  )
  (core instance $main (;4;) (instantiate $main
      (with "$root" (instance $$root))
      (with "[export]$root" (instance $"[export]$root"))
      (with "[export]foo:foo/bar" (instance $"[export]foo:foo/bar"))
    )
  )
  (alias core export $main "memory" (core memory $memory (;0;)))
  (alias core export $wit-component-shim-instance "$imports" (core table $"shim table" (;0;)))
  (core func $"#core-func23 waitable-set.wait" (@name "waitable-set.wait") (;23;) (canon waitable-set.wait (memory $memory)))
  (core func $"#core-func24 waitable-set.poll" (@name "waitable-set.poll") (;24;) (canon waitable-set.poll (memory $memory)))
  (core func $error-context.new (;25;) (canon error-context.new (memory $memory) string-encoding=utf8))
  (core func $"#core-func26 error-context.new" (@name "error-context.new") (;26;) (canon error-context.new (memory $memory) string-encoding=utf16))
  (core func $"#core-func27 error-context.new" (@name "error-context.new") (;27;) (canon error-context.new (memory $memory) string-encoding=latin1+utf16))
  (alias core export $main "cabi_realloc" (core func $realloc (;28;)))
  (core func $error-context.debug-message (;29;) (canon error-context.debug-message (memory $memory) (realloc $realloc) string-encoding=utf8))
  (core func $"#core-func30 error-context.debug-message" (@name "error-context.debug-message") (;30;) (canon error-context.debug-message (memory $memory) (realloc $realloc) string-encoding=utf16))
  (core func $"#core-func31 error-context.debug-message" (@name "error-context.debug-message") (;31;) (canon error-context.debug-message (memory $memory) (realloc $realloc) string-encoding=latin1+utf16))
  (core func $task.return (;32;) (canon task.return (result string) (memory $memory) string-encoding=utf8))
  (core func $"#core-func33 task.return" (@name "task.return") (;33;) (canon task.return (result string) (memory $memory) string-encoding=utf8))
  (core instance $fixup-args (;5;)
    (export "$imports" (table $"shim table"))
    (export "0" (func $"#core-func23 waitable-set.wait"))
    (export "1" (func $"#core-func24 waitable-set.poll"))
    (export "2" (func $error-context.new))
    (export "3" (func $"#core-func26 error-context.new"))
    (export "4" (func $"#core-func27 error-context.new"))
    (export "5" (func $error-context.debug-message))
    (export "6" (func $"#core-func30 error-context.debug-message"))
    (export "7" (func $"#core-func31 error-context.debug-message"))
    (export "8" (func $task.return))
    (export "9" (func $"#core-func33 task.return"))
  )
  (core instance $fixup (;6;) (instantiate $wit-component-fixup
      (with "" (instance $fixup-args))
    )
  )
  (type (;0;) (func (param "s" string) (result string)))
  (alias core export $main "[async-lift-stackful]foo" (core func $"[async-lift-stackful]foo" (;34;)))
  (func $foo (;0;) (type 0) (canon lift (core func $"[async-lift-stackful]foo") (memory $memory) (realloc $realloc) string-encoding=utf8 async))
  (export $"#func1 foo" (@name "foo") (;1;) "foo" (func $foo))
  (type (;1;) (func (param "s" string) (result string)))
  (alias core export $main "[async-lift-stackful]foo:foo/bar#foo" (core func $"[async-lift-stackful]foo:foo/bar#foo" (;35;)))
  (func $"#func2 foo" (@name "foo") (;2;) (type 1) (canon lift (core func $"[async-lift-stackful]foo:foo/bar#foo") (memory $memory) (realloc $realloc) string-encoding=utf8 async))
  (component $foo:foo/bar-shim-component (;0;)
    (type (;0;) (func (param "s" string) (result string)))
    (import "import-func-foo" (func (;0;) (type 0)))
    (type (;1;) (func (param "s" string) (result string)))
    (export (;1;) "foo" (func 0) (func (type 1)))
  )
  (instance $foo:foo/bar-shim-instance (;0;) (instantiate $foo:foo/bar-shim-component
      (with "import-func-foo" (func $"#func2 foo"))
    )
  )
  (export $foo:foo/bar (;1;) "foo:foo/bar" (instance $foo:foo/bar-shim-instance))
  (@producers
    (processed-by "wit-component" "$CARGO_PKG_VERSION")
  )
)
