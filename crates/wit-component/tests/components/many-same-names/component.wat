(component
  (core module $main (;0;)
    (type (;0;) (func))
    (export "name#a" (func 0))
    (func (;0;) (type 0))
    (@producers
      (processed-by "wit-component" "$CARGO_PKG_VERSION")
      (processed-by "my-fake-bindgen" "123.45")
    )
  )
  (type (;0;) (record (field "f" u8)))
  (type (;1;) (record (field "x" 0)))
  (core instance $main (;0;) (instantiate $main))
  (component $foo:foo/name-shim-component (;0;)
    (type (;0;) (record (field "f" u8)))
    (export (;1;) "r1" (type 0))
    (type (;2;) (record (field "x" 1)))
    (export (;3;) "r2" (type 2))
  )
  (instance $foo:foo/name-shim-instance (;0;) (instantiate $foo:foo/name-shim-component))
  (export $foo:foo/name (;1;) "foo:foo/name" (instance $foo:foo/name-shim-instance))
  (type (;2;) (func))
  (alias core export $main "name#a" (core func $name#a (;0;)))
  (func $a (;0;) (type 2) (canon lift (core func $name#a)))
  (alias export $foo:foo/name "r1" (type $r1 (;3;)))
  (alias export $foo:foo/name "r2" (type $r2 (;4;)))
  (component $name-shim-component (;1;)
    (type (;0;) (record (field "f" u8)))
    (import "import-type-r1" (type (;1;) (eq 0)))
    (type (;2;) (record (field "x" 1)))
    (import "import-type-r2" (type (;3;) (eq 2)))
    (type (;4;) (func))
    (import "import-func-a" (func (;0;) (type 4)))
    (export (;5;) "r2" (type 3))
    (type (;6;) (func))
    (export (;1;) "a" (func 0) (func (type 6)))
  )
  (instance $name-shim-instance (;2;) (instantiate $name-shim-component
      (with "import-func-a" (func $a))
      (with "import-type-r1" (type $r1))
      (with "import-type-r2" (type $r2))
    )
  )
  (export $name (;3;) "name" (instance $name-shim-instance))
  (@producers
    (processed-by "wit-component" "$CARGO_PKG_VERSION")
  )
)
