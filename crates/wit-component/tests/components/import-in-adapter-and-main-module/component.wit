interface shared-dependency {
  f1: func()

  f2: func()

  f3: func()

  g1: func() -> string

  g2: func() -> string

  g3: func() -> string
}

interface types {
  type a-typedef = u32

}

interface main-dep {
  use self.types.{a-typedef}
  foo: func() -> a-typedef
}

interface adapter-dep {
  use self.types.{a-typedef}
  foo: func() -> a-typedef
}

default world component {
  import shared-dependency: self.shared-dependency
  import types: self.types
  import main-dep: self.main-dep
  import adapter-dep: self.adapter-dep
}
