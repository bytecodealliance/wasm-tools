(component
  (type $ty-foo:foo/name1 (;0;)
    (instance
      (type (;0;) (record (field "f" u8)))
      (export (;1;) "name" (type (eq 0)))
    )
  )
  (import "foo:foo/name1" (instance $foo:foo/name1 (;0;) (type $ty-foo:foo/name1)))
  (alias export $foo:foo/name1 "name" (type $name (;1;)))
  (type $ty-foo:foo/name2 (;2;)
    (instance
      (alias outer 1 $name (type (;0;)))
      (export (;1;) "name" (type (eq 0)))
    )
  )
  (import "foo:foo/name2" (instance $foo:foo/name2 (;1;) (type $ty-foo:foo/name2)))
  (core module $main (;0;)
    (@producers
      (processed-by "wit-component" "$CARGO_PKG_VERSION")
      (processed-by "my-fake-bindgen" "123.45")
    )
  )
  (alias export $foo:foo/name1 "name" (type $"#type3 name" (@name "name") (;3;)))
  (alias export $foo:foo/name2 "name" (type $"#type4 name" (@name "name") (;4;)))
  (core instance $main (;0;) (instantiate $main))
  (alias export $foo:foo/name1 "name" (type $"#type5 name" (@name "name") (;5;)))
  (alias export $foo:foo/name2 "name" (type $"#type6 name" (@name "name") (;6;)))
  (component $name-shim-component (;0;)
    (type (;0;) (record (field "f" u8)))
    (import "import-type-name" (type (;1;) (eq 0)))
    (import "import-type-name0" (type (;2;) (eq 1)))
    (export (;3;) "name" (type 1))
    (export (;4;) "name1" (type 2))
  )
  (instance $name-shim-instance (;2;) (instantiate $name-shim-component
      (with "import-type-name" (type $"#type5 name"))
      (with "import-type-name0" (type $"#type6 name"))
    )
  )
  (export $name (;3;) "name" (instance $name-shim-instance))
  (@producers
    (processed-by "wit-component" "$CARGO_PKG_VERSION")
  )
)
