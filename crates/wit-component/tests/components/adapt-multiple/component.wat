(component
  (type $ty-other1 (;0;)
    (instance
      (type (;0;) (func))
      (export (;0;) "foo" (func (type 0)))
    )
  )
  (import "other1" (instance $other1 (;0;) (type $ty-other1)))
  (type $ty-other2 (;1;)
    (instance
      (type (;0;) (func))
      (export (;0;) "bar" (func (type 0)))
    )
  )
  (import "other2" (instance $other2 (;1;) (type $ty-other2)))
  (core module $main (;0;)
    (type (;0;) (func))
    (import "foo" "foo" (func (;0;) (type 0)))
    (import "foo" "bar" (func (;1;) (type 0)))
    (@producers
      (processed-by "wit-component" "$CARGO_PKG_VERSION")
      (processed-by "my-fake-bindgen" "123.45")
    )
  )
  (core module $wit-component:adapter:foo (;1;)
    (type (;0;) (func))
    (import "other1" "foo" (func $foo (;0;) (type 0)))
    (import "other2" "bar" (func $bar (;1;) (type 0)))
    (export "foo" (func 2))
    (export "bar" (func 3))
    (func (;2;) (type 0)
      call $foo
    )
    (func (;3;) (type 0)
      call $bar
    )
  )
  (core module $wit-component-shim-module (;2;)
    (type (;0;) (func))
    (table (;0;) 2 2 funcref)
    (export "0" (func $adapt-foo-foo))
    (export "1" (func $adapt-foo-bar))
    (export "$imports" (table 0))
    (func $adapt-foo-foo (;0;) (type 0)
      i32.const 0
      call_indirect (type 0)
    )
    (func $adapt-foo-bar (;1;) (type 0)
      i32.const 1
      call_indirect (type 0)
    )
    (@producers
      (processed-by "wit-component" "$CARGO_PKG_VERSION")
    )
  )
  (core module $wit-component-fixup (;3;)
    (type (;0;) (func))
    (import "" "0" (func (;0;) (type 0)))
    (import "" "1" (func (;1;) (type 0)))
    (import "" "$imports" (table (;0;) 2 2 funcref))
    (elem (;0;) (i32.const 0) func 0 1)
    (@producers
      (processed-by "wit-component" "$CARGO_PKG_VERSION")
    )
  )
  (core instance $wit-component-shim-instance (;0;) (instantiate $wit-component-shim-module))
  (alias core export $wit-component-shim-instance "0" (core func $adapt-foo-foo (;0;)))
  (alias core export $wit-component-shim-instance "1" (core func $adapt-foo-bar (;1;)))
  (core instance $foo (;1;)
    (export "foo" (func $adapt-foo-foo))
    (export "bar" (func $adapt-foo-bar))
  )
  (core instance $main (;2;) (instantiate $main
      (with "foo" (instance $foo))
    )
  )
  (alias export $other1 "foo" (func $foo (;0;)))
  (core func $foo (;2;) (canon lower (func $foo)))
  (core instance $other1 (;3;)
    (export "foo" (func $foo))
  )
  (alias export $other2 "bar" (func $bar (;1;)))
  (core func $bar (;3;) (canon lower (func $bar)))
  (core instance $other2 (;4;)
    (export "bar" (func $bar))
  )
  (core instance $"#core-instance5 foo" (@name "foo") (;5;) (instantiate $wit-component:adapter:foo
      (with "other1" (instance $other1))
      (with "other2" (instance $other2))
    )
  )
  (alias core export $wit-component-shim-instance "$imports" (core table $"shim table" (;0;)))
  (alias core export $"#core-instance5 foo" "foo" (core func $"#core-func4 foo" (@name "foo") (;4;)))
  (alias core export $"#core-instance5 foo" "bar" (core func $"#core-func5 bar" (@name "bar") (;5;)))
  (core instance $fixup-args (;6;)
    (export "$imports" (table $"shim table"))
    (export "0" (func $"#core-func4 foo"))
    (export "1" (func $"#core-func5 bar"))
  )
  (core instance $fixup (;7;) (instantiate $wit-component-fixup
      (with "" (instance $fixup-args))
    )
  )
  (@producers
    (processed-by "wit-component" "$CARGO_PKG_VERSION")
  )
)
