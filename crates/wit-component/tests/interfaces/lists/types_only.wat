(component
  (type (;0;)
    (instance
      (type (;0;) (list u8))
      (type (;1;) (func (param "x" 0)))
      (export "list-u8-param" (func (type 1)))
      (type (;2;) (list u16))
      (type (;3;) (func (param "x" 2)))
      (export "list-u16-param" (func (type 3)))
      (type (;4;) (list u32))
      (type (;5;) (func (param "x" 4)))
      (export "list-u32-param" (func (type 5)))
      (type (;6;) (list u64))
      (type (;7;) (func (param "x" 6)))
      (export "list-u64-param" (func (type 7)))
      (type (;8;) (list s8))
      (type (;9;) (func (param "x" 8)))
      (export "list-s8-param" (func (type 9)))
      (type (;10;) (list s16))
      (type (;11;) (func (param "x" 10)))
      (export "list-s16-param" (func (type 11)))
      (type (;12;) (list s32))
      (type (;13;) (func (param "x" 12)))
      (export "list-s32-param" (func (type 13)))
      (type (;14;) (list s64))
      (type (;15;) (func (param "x" 14)))
      (export "list-s64-param" (func (type 15)))
      (type (;16;) (list float32))
      (type (;17;) (func (param "x" 16)))
      (export "list-float32-param" (func (type 17)))
      (type (;18;) (list float64))
      (type (;19;) (func (param "x" 18)))
      (export "list-float64-param" (func (type 19)))
      (type (;20;) (func (result 0)))
      (export "list-u8-ret" (func (type 20)))
      (type (;21;) (func (result 2)))
      (export "list-u16-ret" (func (type 21)))
      (type (;22;) (func (result 4)))
      (export "list-u32-ret" (func (type 22)))
      (type (;23;) (func (result 6)))
      (export "list-u64-ret" (func (type 23)))
      (type (;24;) (func (result 8)))
      (export "list-s8-ret" (func (type 24)))
      (type (;25;) (func (result 10)))
      (export "list-s16-ret" (func (type 25)))
      (type (;26;) (func (result 12)))
      (export "list-s32-ret" (func (type 26)))
      (type (;27;) (func (result 14)))
      (export "list-s64-ret" (func (type 27)))
      (type (;28;) (func (result 16)))
      (export "list-float32-ret" (func (type 28)))
      (type (;29;) (func (result 18)))
      (export "list-float64-ret" (func (type 29)))
      (type (;30;) (tuple u8 s8))
      (type (;31;) (list 30))
      (type (;32;) (tuple s64 u32))
      (type (;33;) (list 32))
      (type (;34;) (func (param "x" 31) (result 33)))
      (export "tuple-list" (func (type 34)))
      (type (;35;) (list string))
      (type (;36;) (func (param "a" 35)))
      (export "string-list-arg" (func (type 36)))
      (type (;37;) (func (result 35)))
      (export "string-list-ret" (func (type 37)))
      (type (;38;) (tuple u8 string))
      (type (;39;) (list 38))
      (type (;40;) (tuple string u8))
      (type (;41;) (list 40))
      (type (;42;) (func (param "x" 39) (result 41)))
      (export "tuple-string-list" (func (type 42)))
      (type (;43;) (func (param "x" 35) (result 35)))
      (export "string-list" (func (type 43)))
      (type (;44;) (record (field "a1" u32) (field "a2" u64) (field "a3" s32) (field "a4" s64) (field "b" string) (field "c" 0)))
      (export "other-record" (type (eq 44)))
      (type (;45;) (record (field "x" string) (field "y" 44) (field "c1" u32) (field "c2" u64) (field "c3" s32) (field "c4" s64)))
      (export "some-record" (type (eq 45)))
      (type (;46;) (list 45))
      (type (;47;) (list 44))
      (type (;48;) (func (param "x" 46) (result 47)))
      (export "record-list" (func (type 48)))
      (type (;49;) (variant (case "a") (case "b" u32) (case "c" string)))
      (export "other-variant" (type (eq 49)))
      (type (;50;) (list 49))
      (type (;51;) (variant (case "a" string) (case "b") (case "c" u32) (case "d" 50)))
      (export "some-variant" (type (eq 51)))
      (type (;52;) (list 51))
      (type (;53;) (func (param "x" 52) (result 50)))
      (export "variant-list" (func (type 53)))
      (type (;54;) (tuple string u8 s8 u16 s16 u32 s32 u64 s64 float32 float64 char))
      (type (;55;) (list 54))
      (export "load-store-all-sizes" (type (eq 55)))
      (type (;56;) (func (param "a" 55) (result 55)))
      (export "load-store-everything" (func (type 56)))
    )
  )
  (import "lists" (instance (;0;) (type 0)))
)