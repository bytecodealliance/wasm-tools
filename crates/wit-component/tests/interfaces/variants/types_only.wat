(component
  (type (;0;)
    (instance
      (type (;0;) (enum "a"))
      (export "e1" (type (eq 0)))
      (type (;1;) (func (param "x" 0)))
      (export "e1-arg" (func (type 1)))
      (type (;2;) (func (result 0)))
      (export "e1-result" (func (type 2)))
      (type (;3;) (union u32 float32))
      (export "u1" (type (eq 3)))
      (type (;4;) (func (param "x" 3)))
      (export "u1-arg" (func (type 4)))
      (type (;5;) (func (result 3)))
      (export "u1-result" (func (type 5)))
      (type (;6;) (record))
      (export "empty" (type (eq 6)))
      (type (;7;) (variant (case "a") (case "b" 3) (case "c" 0) (case "d" string) (case "e" 6) (case "f") (case "g" u32)))
      (export "v1" (type (eq 7)))
      (type (;8;) (func (param "x" 7)))
      (export "v1-arg" (func (type 8)))
      (type (;9;) (func (result 7)))
      (export "v1-result" (func (type 9)))
      (type (;10;) (func (param "x" bool)))
      (export "bool-arg" (func (type 10)))
      (type (;11;) (func (result bool)))
      (export "bool-result" (func (type 11)))
      (type (;12;) (option bool))
      (type (;13;) (tuple))
      (type (;14;) (option 13))
      (type (;15;) (option u32))
      (type (;16;) (option 0))
      (type (;17;) (option float32))
      (type (;18;) (option 3))
      (type (;19;) (option 12))
      (type (;20;) (func (param "a" 12) (param "b" 14) (param "c" 15) (param "d" 16) (param "e" 17) (param "f" 18) (param "g" 19)))
      (export "option-arg" (func (type 20)))
      (type (;21;) (tuple 12 14 15 16 17 18 19))
      (type (;22;) (func (result 21)))
      (export "option-result" (func (type 22)))
      (type (;23;) (variant (case "a" s32) (case "b" float32)))
      (export "casts1" (type (eq 23)))
      (type (;24;) (variant (case "a" float64) (case "b" float32)))
      (export "casts2" (type (eq 24)))
      (type (;25;) (variant (case "a" float64) (case "b" u64)))
      (export "casts3" (type (eq 25)))
      (type (;26;) (variant (case "a" u32) (case "b" s64)))
      (export "casts4" (type (eq 26)))
      (type (;27;) (variant (case "a" float32) (case "b" s64)))
      (export "casts5" (type (eq 27)))
      (type (;28;) (tuple float32 u32))
      (type (;29;) (tuple u32 u32))
      (type (;30;) (variant (case "a" 28) (case "b" 29)))
      (export "casts6" (type (eq 30)))
      (type (;31;) (tuple 23 24 25 26 27 30))
      (type (;32;) (func (param "a" 23) (param "b" 24) (param "c" 25) (param "d" 26) (param "e" 27) (param "f" 30) (result 31)))
      (export "casts" (func (type 32)))
      (type (;33;) (result))
      (type (;34;) (result (error 0)))
      (type (;35;) (result 0))
      (type (;36;) (result 13 (error 13)))
      (type (;37;) (result u32 (error 7)))
      (type (;38;) (list u8))
      (type (;39;) (result string (error 38)))
      (type (;40;) (func (param "a" 33) (param "b" 34) (param "c" 35) (param "d" 36) (param "e" 37) (param "f" 39)))
      (export "expected-arg" (func (type 40)))
      (type (;41;) (tuple 33 34 35 36 37 39))
      (type (;42;) (func (result 41)))
      (export "expected-result" (func (type 42)))
      (type (;43;) (enum "bad1" "bad2"))
      (export "my-errno" (type (eq 43)))
      (type (;44;) (result s32 (error 43)))
      (type (;45;) (func (result 44)))
      (export "return-expected-sugar" (func (type 45)))
      (type (;46;) (result (error 43)))
      (type (;47;) (func (result 46)))
      (export "return-expected-sugar2" (func (type 47)))
      (type (;48;) (result 43 (error 43)))
      (type (;49;) (func (result 48)))
      (export "return-expected-sugar3" (func (type 49)))
      (type (;50;) (tuple s32 u32))
      (type (;51;) (result 50 (error 43)))
      (type (;52;) (func (result 51)))
      (export "return-expected-sugar4" (func (type 52)))
      (type (;53;) (option s32))
      (type (;54;) (func (result 53)))
      (export "return-option-sugar" (func (type 54)))
      (type (;55;) (option 43))
      (type (;56;) (func (result 55)))
      (export "return-option-sugar2" (func (type 56)))
      (type (;57;) (result u32 (error s32)))
      (type (;58;) (func (result 57)))
      (export "expected-simple" (func (type 58)))
    )
  )
  (import "variants" (instance (;0;) (type 0)))
)