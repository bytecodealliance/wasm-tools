(component
  (type (;0;)
    (instance
      (type (;0;) (tuple char u32))
      (type (;1;) (func (param "x" 0)))
      (export "tuple-arg" (func (type 1)))
      (type (;2;) (func (result 0)))
      (export "tuple-result" (func (type 2)))
      (type (;3;) (record))
      (export "empty" (type (eq 3)))
      (type (;4;) (func (param "x" 3)))
      (export "empty-arg" (func (type 4)))
      (type (;5;) (func (result 3)))
      (export "empty-result" (func (type 5)))
      (type (;6;) (record (field "a" u32) (field "b" u32)))
      (export "scalars" (type (eq 6)))
      (type (;7;) (func (param "x" 6)))
      (export "scalar-arg" (func (type 7)))
      (type (;8;) (func (result 6)))
      (export "scalar-result" (func (type 8)))
      (type (;9;) (flags "a" "b" "c" "d" "e" "f" "g" "h" "i"))
      (export "really-flags" (type (eq 9)))
      (type (;10;) (func (param "x" 9)))
      (export "flags-arg" (func (type 10)))
      (type (;11;) (func (result 9)))
      (export "flags-result" (func (type 11)))
      (type (;12;) (record (field "a" 6) (field "b" u32) (field "c" 3) (field "d" string) (field "e" 9)))
      (export "aggregates" (type (eq 12)))
      (type (;13;) (func (param "x" 12)))
      (export "aggregate-arg" (func (type 13)))
      (type (;14;) (func (result 12)))
      (export "aggregate-result" (func (type 14)))
      (type (;15;) s32)
      (export "int-typedef" (type (eq 15)))
      (type (;16;) (tuple 15))
      (export "tuple-typedef2" (type (eq 16)))
      (type (;17;) (func (param "e" 16) (result s32)))
      (export "typedef-inout" (func (type 17)))
    )
  )
  (import "records" (instance (;0;) (type 0)))
  (type (;1;)
    (instance
      (type (;0;) (tuple char u32))
      (type (;1;) (func (param "x" 0)))
      (export "tuple-arg" (func (type 1)))
      (type (;2;) (func (result 0)))
      (export "tuple-result" (func (type 2)))
      (type (;3;) (record))
      (export "empty" (type (eq 3)))
      (type (;4;) (func (param "x" 3)))
      (export "empty-arg" (func (type 4)))
      (type (;5;) (func (result 3)))
      (export "empty-result" (func (type 5)))
      (type (;6;) (record (field "a" u32) (field "b" u32)))
      (export "scalars" (type (eq 6)))
      (type (;7;) (func (param "x" 6)))
      (export "scalar-arg" (func (type 7)))
      (type (;8;) (func (result 6)))
      (export "scalar-result" (func (type 8)))
      (type (;9;) (record (field "a" bool) (field "b" bool) (field "c" bool) (field "d" bool) (field "e" bool) (field "f" bool) (field "g" bool) (field "h" bool) (field "i" bool)))
      (export "really-flags" (type (eq 9)))
      (type (;10;) (func (param "x" 9)))
      (export "flags-arg" (func (type 10)))
      (type (;11;) (func (result 9)))
      (export "flags-result" (func (type 11)))
      (type (;12;) (record (field "a" 6) (field "b" u32) (field "c" 3) (field "d" string) (field "e" 9)))
      (export "aggregates" (type (eq 12)))
      (type (;13;) (func (param "x" 12)))
      (export "aggregate-arg" (func (type 13)))
      (type (;14;) (func (result 12)))
      (export "aggregate-result" (func (type 14)))
      (type (;15;) s32)
      (export "int-typedef" (type (eq 15)))
      (type (;16;) (tuple 15))
      (export "tuple-typedef2" (type (eq 16)))
      (type (;17;) (func (param "e" 16) (result s32)))
      (export "typedef-inout" (func (type 17)))
      (type (;18;) (tuple s32))
      (export "tuple-typedef" (type (eq 18)))
      (type (;19;) (func (result 18)))
      (export "tuple-tupledef-user" (func (type 19)))
    )
  )
  (export "records" (type 1))
)