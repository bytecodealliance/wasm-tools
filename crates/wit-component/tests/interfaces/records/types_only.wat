(component
  (type (;0;)
    (instance
      (type (;0;) (tuple char u32))
      (type (;1;) (func (param "x" 0)))
      (export (;0;) "tuple-arg" (func (type 1)))
      (type (;2;) (func (result 0)))
      (export (;1;) "tuple-result" (func (type 2)))
      (type (;3;) (record))
      (export (;4;) "empty" (type (eq 3)))
      (type (;5;) (func (param "x" 3)))
      (export (;2;) "empty-arg" (func (type 5)))
      (type (;6;) (func (result 3)))
      (export (;3;) "empty-result" (func (type 6)))
      (type (;7;) (record (field "a" u32) (field "b" u32)))
      (export (;8;) "scalars" (type (eq 7)))
      (type (;9;) (func (param "x" 7)))
      (export (;4;) "scalar-arg" (func (type 9)))
      (type (;10;) (func (result 7)))
      (export (;5;) "scalar-result" (func (type 10)))
      (type (;11;) (flags "a" "b" "c" "d" "e" "f" "g" "h" "i"))
      (export (;12;) "really-flags" (type (eq 11)))
      (type (;13;) (func (param "x" 11)))
      (export (;6;) "flags-arg" (func (type 13)))
      (type (;14;) (func (result 11)))
      (export (;7;) "flags-result" (func (type 14)))
      (type (;15;) (record (field "a" 7) (field "b" u32) (field "c" 3) (field "d" string) (field "e" 11)))
      (export (;16;) "aggregates" (type (eq 15)))
      (type (;17;) (func (param "x" 15)))
      (export (;8;) "aggregate-arg" (func (type 17)))
      (type (;18;) (func (result 15)))
      (export (;9;) "aggregate-result" (func (type 18)))
      (type (;19;) s32)
      (export (;20;) "int-typedef" (type (eq 19)))
      (type (;21;) (tuple 19))
      (export (;22;) "tuple-typedef2" (type (eq 21)))
      (type (;23;) (func (param "e" 21) (result s32)))
      (export (;10;) "typedef-inout" (func (type 23)))
    )
  )
  (import "records" (instance (;0;) (type 0)))
  (type (;1;)
    (instance
      (type (;0;) (tuple char u32))
      (type (;1;) (func (param "x" 0)))
      (export (;0;) "tuple-arg" (func (type 1)))
      (type (;2;) (func (result 0)))
      (export (;1;) "tuple-result" (func (type 2)))
      (type (;3;) (record))
      (export (;4;) "empty" (type (eq 3)))
      (type (;5;) (func (param "x" 3)))
      (export (;2;) "empty-arg" (func (type 5)))
      (type (;6;) (func (result 3)))
      (export (;3;) "empty-result" (func (type 6)))
      (type (;7;) (record (field "a" u32) (field "b" u32)))
      (export (;8;) "scalars" (type (eq 7)))
      (type (;9;) (func (param "x" 7)))
      (export (;4;) "scalar-arg" (func (type 9)))
      (type (;10;) (func (result 7)))
      (export (;5;) "scalar-result" (func (type 10)))
      (type (;11;) (record (field "a" bool) (field "b" bool) (field "c" bool) (field "d" bool) (field "e" bool) (field "f" bool) (field "g" bool) (field "h" bool) (field "i" bool)))
      (export (;12;) "really-flags" (type (eq 11)))
      (type (;13;) (func (param "x" 11)))
      (export (;6;) "flags-arg" (func (type 13)))
      (type (;14;) (func (result 11)))
      (export (;7;) "flags-result" (func (type 14)))
      (type (;15;) (record (field "a" 7) (field "b" u32) (field "c" 3) (field "d" string) (field "e" 11)))
      (export (;16;) "aggregates" (type (eq 15)))
      (type (;17;) (func (param "x" 15)))
      (export (;8;) "aggregate-arg" (func (type 17)))
      (type (;18;) (func (result 15)))
      (export (;9;) "aggregate-result" (func (type 18)))
      (type (;19;) s32)
      (export (;20;) "int-typedef" (type (eq 19)))
      (type (;21;) (tuple 19))
      (export (;22;) "tuple-typedef2" (type (eq 21)))
      (type (;23;) (func (param "e" 21) (result s32)))
      (export (;10;) "typedef-inout" (func (type 23)))
      (type (;24;) (tuple s32))
      (export (;25;) "tuple-typedef" (type (eq 24)))
      (type (;26;) (func (result 24)))
      (export (;11;) "tuple-tupledef-user" (func (type 26)))
    )
  )
  (export (;2;) "records" (type 1))
)