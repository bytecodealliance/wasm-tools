name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [stable, beta, nightly, macos, windows]
        include:
          - build: stable
            os: ubuntu-latest
            rust: stable
          - build: beta
            os: ubuntu-latest
            rust: beta
          - build: nightly
            os: ubuntu-latest
            rust: nightly
          - build: macos
            os: macos-latest
            rust: stable
          - build: windows
            os: windows-latest
            rust: stable
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Install Rust (rustup)
      run: rustup update ${{ matrix.rust }} --no-self-update && rustup default ${{ matrix.rust }}
      shell: bash
    - run: cargo test --all
    - run: cargo test --all
      env:
        RUSTFLAGS: --cfg=wast_check_exhaustive
    - run: cargo test --manifest-path crates/wasmparser/Cargo.toml --features deterministic
    - run: cargo build --manifest-path crates/wast/Cargo.toml --no-default-features
    - run: cargo build --manifest-path crates/wast/Cargo.toml --no-default-features --features wasm-module

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Rust
      run: rustup update stable && rustup default stable && rustup component add rustfmt
    - run: cargo fmt -- --check

  compare-with-main:
    name: wasmparser bench
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - run: git fetch --recurse-submodules=no origin main && git branch main origin/main
      if: github.ref != 'refs/heads/main'
    - run: (cd crates/wasmparser && ./compare-with-main.sh)

  fuzz:
    name: Fuzz
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Install Rust
      run: rustup update nightly && rustup default nightly
    - run: cargo install cargo-fuzz
    - run: cargo fuzz build

  check_wasm_smith_benches:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: cargo check --benches -p wasm-smith

  encoder_linking_tests:
    name: Tests for the wasm-encoder crate that need wabt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - run: rustup update stable --no-self-update && rustup default stable
    - run: curl -L https://github.com/WebAssembly/wabt/releases/download/1.0.24/wabt-1.0.24-ubuntu.tar.gz | tar xzf -
    - run: echo "`pwd`/wabt-1.0.24/bin" >> $GITHUB_PATH
    - run: cargo test -p wasm-encoder

